<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nicetcm.nibsplus.filemng.dao.ERRMonMapper">

	<delete id="mainWhileDelete1">
		<![CDATA[
		DELETE
		    OP.T_CT_NICE_TRAN_ERROR
		 ]]>
	</delete>

	<delete id="mainWhileDelete2">
		<![CDATA[
		DELETE
		    OP.T_CT_NICE_INQREMAMT_ERROR
		 ]]>
	</delete>
	
	<select id="pickupRealHolyYN" resultType="string">
		<![CDATA[
		SELECT
		    real_holiday_yn
		FROM
		    OP.t_fn_calendar
		WHERE
		    std_date = TO_CHAR(sysdate, 'YYYYMMDD')
		 ]]> 
	</select>
	
	<!-- /* 무거래 기기 체크 20080429 적용 */ -->
	<select id="selectNiceTranICNotranErrorProc" resultType="hashmap">
		<![CDATA[
		SELECT
		    MAC_NO,
		    TOT_DEAL_CNT,
		    TOT_IC_DEAL_CNT
		FROM
		    (
		        SELECT
		            mac_no,
		            SUM(TIME_DEAL_CNT+OT_DEAL_CNT)                      AS TOT_DEAL_CNT,
		            SUM(NVL(TIME_IC_DEAL_CNT,0)+NVL(OT_IC_DEAL_CNT, 0)) AS TOT_IC_DEAL_CNT
		        FROM
		            OP.T_fn_nice_mac_dsum
		        WHERE
		            deal_date >= TO_CHAR(sysdate - 7, 'YYYYMMDD')
		        AND deal_date < TO_CHAR(sysdate, 'YYYYMMDD')
		        AND deal_status = '0'
		        AND deal_type = '0'
		        GROUP BY
		            MAC_NO
		    )
		    NOIC
		WHERE
		    NOIC.tot_ic_deal_cnt = 0
		AND NOIC.tot_deal_cnt > 0
		AND SUBSTR(NOIC.mac_no, 1, 1) <> 'H'
		 ]]>
	</select>
	
	<select id="selectNiceCashLackRepairProc" resultType="hashmap">
		<![CDATA[
		SELECT
		    ER.CREATE_DATE,
		    ER.ERROR_NO
		FROM
		    OP.T_FN_MAC FM,
		    OP.T_CM_MAC MAC,
		    (
		        SELECT
		            MAC_NO,
		            CREATE_DATE,
		            CREATE_TIME,
		            ERROR_NO,
		            ERROR_CD
		        FROM
		            OP.T_ct_error_mng
		        WHERE
		            CREATE_DATE > TO_NUMBER(TO_CHAR( SYSDATE - 10, 'YYYYMMDD' ))
		        AND ORG_CD = '096'
		        AND SEND_TIME IS NOT NULL
		        AND SEND_STATUS = '2'
		        AND NVL( ERROR_STATUS, '0' ) <> '7000'
		        AND ERROR_CD IN ('NI912', 'NI914')
		    )
		    ER
		WHERE
		    FM.ORG_CD = '096'
		AND FM.branch_CD = '9600'
		AND FM.MAC_NO = ER.MAC_NO
		AND MAC.ORG_CD = '096'
		AND MAC.branch_CD = '9600'
		AND MAC.MAC_NO = ER.MAC_NO
		AND NVL(MAC.SVC_RELAY_YN, '0') <> '1'
		AND
		    (
		        (
		            ER.ERROR_CD = 'NI914'
		        AND FM.IN_MAC_AMT > MAC.SHORT_CASH_NOTICE
		        )
		     OR
		        (
		            ER.ERROR_CD = 'NI912'
		        AND FM.IN_MAC_AMT > MAC.SHORT_CASH
		        )
		    )
         ]]>
	</select>
	
	<select id="selectDGNotOpenErrorProc" resultType="hashmap">
		<![CDATA[
		  SELECT mac.org_cd, mac.branch_cd, mac.mac_no 
			FROM op.T_CM_MAC MAC,
			     op.T_CM_SITE SITE,
			     op.t_cm_site_01 SITE1,
			     op.T_FN_CALENDAR CAL
			WHERE MAC.ORG_CD = #{orgCd}
			AND   MAC.OPEN_DATE <= TO_CHAR(SYSDATE, 'YYYYMMDD')
			AND  (MAC.CLOSE_DATE IS NULL OR MAC.CLOSE_DATE >= TO_CHAR(SYSDATE, 'YYYYMMDD'))
			AND   MAC.ORG_CD = SITE.ORG_CD
			AND   MAC.branch_cd = SITE.branch_cd
			AND   MAC.SITE_CD = SITE.SITE_CD
			and   MAC.ORG_CD = SITE1.ORG_CD
			AND   MAC.branch_cd = SITE1.branch_cd
			AND   MAC.SITE_CD = SITE1.SITE_CD
			AND   CAL.STD_DATE = TO_CHAR( SYSDATE, 'YYYYMMDD' ) 
			AND   (
			          (     SITE.OPER_TYPE = '1100'   /* 시간내 */
			            AND CAL.HOLIDAY_YN = '0'    /* 토,일, 공유일을 제외한 평일 만운영 */
			            AND   to_char(sysdate,'hh24mi') BETWEEN decode( site.oper_start_time, '2400', '2359', site.oper_start_time)
			                                and decode( site.oper_end_time, '2400', '2359', site.oper_end_time)
			          )
			       OR
			          (     SITE.OPER_TYPE <> '1100'   /* 시간내 이외*/
			            AND (   (    CAL.real_HOLIDAY_YN = '1'    /* 토,일, 공유일 */
			                     AND to_char(sysdate,'hh24mi') BETWEEN decode( site1.h_oper_start_time, '2400', '2359', site1.h_oper_start_time)
			                                and decode( site1.h_oper_end_time, '2400', '2359', site1.h_oper_end_time)
			                     )
			                  OR (    CAL.REAL_HOLIDAY_YN = '0'    /* 평일 */
			                     AND to_char(sysdate,'hh24mi') BETWEEN decode( site.oper_start_time, '2400', '2359', site.oper_start_time)
			                                and decode( site.oper_end_time, '2400', '2359', site.oper_end_time)
			                     )
			                 )     
			          )
			      )
			and   /* 운영중단일자 및 운영중단시간 체크 */    
			    (
			        (    site.not_oper_start_date is null
			         and site.not_oper_end_date is null
			        )
			     or 
			        (    site.not_oper_start_date is not null
			         and site.not_oper_end_date is not null
			         and sysdate not between to_date(site.not_oper_start_date || '000000', 'yyyymmddhh24miss') 
			                  and to_date(site.not_oper_end_date || '000000','yyyymmddhh24miss')+1
			        )
			    )   
			and
			    (
			        (    site.not_oper_start_time is null
			         and site.not_oper_end_time is null
			        )
			     or
			        (    site.not_oper_start_time is not null
			         and site.not_oper_end_time is not null
			         and to_char(sysdate,'hh24mi') not between decode( site.not_oper_start_time, '2400', '2359', site.not_oper_start_time)
			                    and decode( site.not_oper_end_time, '2400', '2359', site.not_oper_end_time)
			        )
			    )
			MINUS
			select org_cd, branch_cd, mac_no 
			from op.t_ct_open 
			where org_cd = #{orgCd}
            and open_date = TO_CHAR( SYSDATE, 'YYYYMMDD')
            /* 동양종금 개국 신호가 00시 05분에 대부분 수신됨에 따라 시간 변경 20120304 
            and open_time >= (case  when org_cd = '0DJ' THEN  '003000'
                              ELSE  '000000'
                              END
                              )
			*/
			and open_time >= (case  when org_cd = '0DJ' THEN  '000500'
                              ELSE  '000000'
                              END
                              )
			MINUS
			select org_cd, branch_cd, mac_no 
			from op.t_ct_as
			where org_cd = #{orgCd}
			and accept_date >= TO_CHAR( SYSDATE-5, 'YYYYMMDD')
			and finish_time is null
         ]]>
	</select>
	
	<update id="updateNiceCashLackRepairProc">
		<![CDATA[
		UPDATE
		    OP.t_ct_error_basic
		SET
		    -- repair_date = TO_CHAR (sysdate, 'YYYYMMDD'),
		    -- repair_time = TO_CHAR (sysdate, 'HH24MISS'),
		    -- finish_date = TO_CHAR (sysdate, 'YYYYMMDD'),
		    -- finish_time = TO_CHAR (sysdate, 'HH24MISS'),
		    error_status = '7000',
		    update_date = SYSDATE,
		    update_uid = 'ERRMon'
		WHERE
		    create_date = TO_NUMBER(#{CREATE_DATE})
		AND error_no = #{ERROR_NO}
		 ]]>
	</update>
	
	<update id="updateNiceCashLackRepairProc2">
		<![CDATA[
		UPDATE
		    OP.t_ct_error_txn
		SET
		    repair_date = TO_CHAR (sysdate, 'YYYYMMDD'),
		    repair_time = TO_CHAR (sysdate, 'HH24MISS'),
		    finish_date = TO_CHAR (sysdate, 'YYYYMMDD'),
		    finish_time = TO_CHAR (sysdate, 'HH24MISS'),
		    -- error_status = '7000',
		    update_date = SYSDATE,
		    update_uid = 'ERRMon'
		WHERE
		    create_date = TO_NUMBER(#{CREATE_DATE})
		AND error_no = #{ERROR_NO}
		 ]]>
	</update>
	
	<select id="selectDGNotnErrorProc" resultType="hashmap" parameterType="string">
		<![CDATA[
		SELECT
		    mac.org_cd,
		    mac.branch_cd,
		    mac.mac_no
		FROM
		    OP.T_CM_MAC MAC,
		    OP.T_CM_SITE SITE,
		    OP.T_cm_site_01 SITE1,
		    OP.T_FN_CALENDAR CAL
		WHERE
		    MAC.ORG_CD = #{orgCd}
		AND MAC.OPEN_DATE <= TO_CHAR(SYSDATE, 'YYYYMMDD')
		AND
		    (
		        MAC.CLOSE_DATE IS NULL
		     OR MAC.CLOSE_DATE >= TO_CHAR(SYSDATE, 'YYYYMMDD')
		    )
		AND MAC.ORG_CD = SITE.ORG_CD
		AND MAC.branch_CD = SITE.branch_CD
		AND MAC.SITE_CD = SITE.SITE_CD
		AND MAC.ORG_CD = SITE1.ORG_CD
		AND MAC.branch_CD = SITE1.branch_CD
		AND MAC.SITE_CD = SITE1.SITE_CD
		AND CAL.STD_DATE = TO_CHAR( SYSDATE, 'YYYYMMDD' )
		AND
		    (
		        (
		            SITE.oper_TYPE = '1100' -- 시간내
		        AND CAL.HOLIDAY_YN = '0' -- 토,일, 공유일을 제외한 평일 만운영
		        AND TO_CHAR(sysdate,'hh24mi') BETWEEN DECODE( site.oper_start_time, '2400', '2359',
		            site.oper_start_time) AND DECODE( site.OPER_END_TIME, '2400', '2359',
		            site.OPER_END_TIME)
		        )
		     OR
		        (
		            SITE.oper_TYPE <> '1100' -- 시간내 이외
		        AND
		            (
		                (
		                    CAL.real_HOLIDAY_YN = '1' -- 토,일, 공유일
		                AND TO_CHAR(sysdate,'hh24mi') BETWEEN DECODE( site1.h_r_start_time, '2400',
		                    '2359', site1.h_r_start_time) AND DECODE( site1.h_r_end_time, '2400',
		                    '2359', site1.h_r_end_time)
		                )
		             OR
		                (
		                    CAL.REAL_HOLIDAY_YN = '0' -- 평일
		                AND TO_CHAR(sysdate,'hh24mi') BETWEEN DECODE( site.oper_start_time, '2400', '2359',
		                    site.oper_start_time) AND DECODE( site.OPER_END_TIME, '2400', '2359',
		                    site.OPER_END_TIME)
		                )
		            )
		        )
		    )
		AND -- 운영중단일자 및 운영중단시간 체크
		    (
		        (
		            site.not_r_start_date IS NULL
		        AND site.not_r_end_date IS NULL
		        )
		     OR
		        (
		            site.not_r_start_date IS NOT NULL
		        AND site.not_r_end_date IS NOT NULL
		        AND sysdate NOT BETWEEN to_date(site.not_r_start_date || '000000', 'yyyymmddhh24miss')
		        AND to_date(site.not_r_end_date || '000000','yyyymmddhh24miss')+1
		        )
		    )
		AND
		    (
		        (
		            site.not_r_start_time IS NULL
		        AND site.not_r_end_time IS NULL
		        )
		     OR
		        (
		            site.not_r_start_time IS NOT NULL
		        AND site.not_r_end_time IS NOT NULL
		        AND TO_CHAR(sysdate,'hh24mi') NOT BETWEEN DECODE( site.not_r_start_time, '2400', '2359',
		            site.not_r_start_time) AND DECODE( site.not_r_end_time, '2400', '2359',
		            site.not_r_end_time)
		        )
		    )
		MINUS
		SELECT
		    org_cd,
		    branch_cd,
		    mac_no
		FROM
		    OP.T_ct_n
		WHERE
		    org_cd = #{orgCd}
		AND n_date = TO_CHAR( SYSDATE, 'YYYYMMDD')
		AND n_time >= (
		        CASE
		            WHEN org_cd = '0DJ'
		            THEN '000500'
		            ELSE '000000'
		        END )
		MINUS
		SELECT
		    org_cd,
		    branch_cd,
		    mac_no
		FROM
		    OP.T_ct_as
		WHERE
		    org_cd = #{orgCd}
		AND accept_date >= TO_CHAR( SYSDATE-5, 'YYYYMMDD')
		AND finish_time IS NULL
		 ]]>
	</select>
	
	<select id="selectNiceEemptySensorRepairProc" resultType="hashmap">
		<![CDATA[
		SELECT
		    MNG.CREATE_DATE,
		    MNG.ERROR_NO
		FROM
		    OP.T_CT_UNFINISH MNG,
		    (
		        SELECT
		            M.ORG_CD,
		            M.branch_CD,
		            M.MAC_NO,
		            M.MAC_NM,
		            M.AS_ACPT_YN,
		            NVL(M.NO_TRADE_SUN, '0')||NVL(M.NO_TRADE_MON, '0')|| NVL(M.NO_TRADE_TUE, '0')||NVL(
		            M.NO_TRADE_WED, '0')|| NVL(M.NO_TRADE_THU, '0')||NVL(M.NO_TRADE_FRI, '0')|| NVL(
		            M.NO_TRADE_SAT, '0') AS WEEK ,
		            DECODE( SUBSTR( NVL(M.NO_TRADE_SUN, '0')||NVL(M.NO_TRADE_MON, '0')|| NVL(M.NO_TRADE_TUE
		            , '0')||NVL(M.NO_TRADE_WED, '0')|| NVL(M.NO_TRADE_THU, '0')||NVL(M.NO_TRADE_FRI, '0')||
		            NVL(M.NO_TRADE_SAT, '0'), TO_NUMBER(TO_CHAR(SYSDATE, 'D'), 1 ), '0', 'FINISH', DECODE(
		            SUBSTR(NVL(M.NO_TRADE_SUN, '0')||NVL(M.NO_TRADE_MON, '0')|| NVL(M.NO_TRADE_TUE, '0')||
		            NVL(M.NO_TRADE_WED, '0')|| NVL(M.NO_TRADE_THU, '0')||NVL(M.NO_TRADE_FRI, '0')|| NVL(
		            M.NO_TRADE_SAT, '0'), TO_NUMBER(TO_CHAR(SYSDATE+1, 'D'), 1 ), '0', DECODE( NVL(
		            NM.IN_MAC_AMT, 0), 0, 'FINISH', 'SKIP'), 'SKIP') ) AS RES,
		            NM.IN_MAC_AMT
		        FROM
		            OP.t_cm_mac M,
		            OP.T_CM_SITE S,
		            OP.T_FN_MAC NM
		        WHERE
		            M.ORG_CD = '096'
		        AND M.CLOSE_DATE IS NULL
		        AND S.PLACE_TYPE IN ('0026', '0086')
		        AND M.ORG_CD = S.ORG_CD
		        AND M.branch_CD = S.branch_CD
		        AND M.SITE_CD = S.SITE_CD
		        AND M.ORG_CD = NM.ORG_CD
		        AND M.branch_CD = NM.branch_CD
		        AND M.MAC_NO = NM.MAC_NO
		        AND DECODE( SUBSTR( NVL(M.NO_TRADE_SUN, '0')||NVL(M.NO_TRADE_MON, '0')|| NVL(M.NO_TRADE_TUE
		            , '0')||NVL(M.NO_TRADE_WED, '0')|| NVL(M.NO_TRADE_THU, '0')||NVL(M.NO_TRADE_FRI, '0')||
		            NVL(M.NO_TRADE_SAT, '0'), TO_NUMBER(TO_CHAR(SYSDATE, 'D'), 1 ), '0', 'FINISH', DECODE(
		            SUBSTR(NVL(M.NO_TRADE_SUN, '0')||NVL(M.NO_TRADE_MON, '0')|| NVL(M.NO_TRADE_TUE, '0')||
		            NVL(M.NO_TRADE_WED, '0')|| NVL(M.NO_TRADE_THU, '0')||NVL(M.NO_TRADE_FRI, '0')|| NVL(
		            M.NO_TRADE_SAT, '0'), TO_NUMBER(TO_CHAR(SYSDATE+1, 'D'), 1 ), '0', DECODE( NVL(
		            NM.IN_MAC_AMT, 0), 0, 'FINISH', 'SKIP'), 'SKIP') ) = 'FINISH'
		    )
		    FIN
		WHERE
		    MNG.ORG_CD = '096'
		AND MNG.ERROR_CD = 'NI909'
		AND FIN.AS_ACPT_YN IS NULL
		AND FIN.ORG_CD = MNG.ORG_CD
		AND FIN.branch_CD = MNG.branch_CD
		AND FIN.MAC_NO = MNG.MAC_NO
		 ]]>
	</select>
	
	<update id="updateNiceEemptySensorRepairProc">
		<![CDATA[
		UPDATE
		    OP.t_ct_error_basic
		SET
		    -- repair_date = TO_CHAR (sysdate, 'YYYYMMDD'),
		    -- repair_time = TO_CHAR (sysdate, 'HH24MISS'),
		    -- finish_date = TO_CHAR (sysdate, 'YYYYMMDD'),
		    -- finish_time = TO_CHAR (sysdate, 'HH24MISS'),
		    error_status = '7000',
		    update_date = SYSDATE,
		    update_uid = 'ERRMon'
		WHERE
		    create_date = TO_NUMBER(#{CREATE_DATE})
		AND error_no = #{ERROR_NO}
		 ]]>
	</update>
	
	<update id="updateNiceEemptySensorRepairProc2">
		<![CDATA[
		UPDATE
		    OP.t_ct_error_txn
		SET
		    repair_date = TO_CHAR (sysdate, 'YYYYMMDD'),
		    repair_time = TO_CHAR (sysdate, 'HH24MISS'),
		    finish_date = TO_CHAR (sysdate, 'YYYYMMDD'),
		    finish_time = TO_CHAR (sysdate, 'HH24MISS'),
		    -- error_status = '7000',
		    update_date = SYSDATE,
		    update_uid = 'ERRMon'
		WHERE
		    create_date = TO_NUMBER(#{CREATE_DATE})
		AND error_no = #{ERROR_NO}
		 ]]>
	</update>
	
	<select id="selectSHCashLackErrorProc" resultType="hashmap">
		<![CDATA[
		SELECT
		    ORG_CD,
		    op.f_get_org_branch_cd( org_cd, branch_cd, '', mac_no ) AS BRANCH_CD,
		    MAC_NO,
		    REMAIN_AMT
		FROM
		    OP.T_cm_cash_org
		WHERE
		    send_yn = '0'
		AND remain_amt < 6000000
		 ]]>
	</select>
	
	<select id="selectSHCashLackErrorProc2" resultType="hashmap">
		<![CDATA[
		SELECT
		    C.ORG_CD,
		    op.f_get_org_branch_cd( C.org_cd, C.branch_cd, '', C.mac_no ) AS BRANCH_CD,
		    C.MAC_NO,
		    C.REMAIN_AMT,
		    MNG.ORG_MSG
		FROM
		    OP.T_cm_cash_org C,
		    OP.T_ct_error_mng MNG
		WHERE
		    C.send_yn = '0'
		AND C.remain_amt >= 6000000
		AND MNG.CREATE_DATE > TO_NUMBER(TO_CHAR( SYSDATE - 3, 'YYYYMMDD' ))
		AND MNG.ORG_CD = C.ORG_CD
		AND MNG.branch_CD = C.branch_CD
		AND MNG.MAC_NO = C.MAC_NO
		AND NVL(MNG.error_status, '0') <> '7000'
		AND MNG.error_cd = 'NE999'
		 ]]>
	</select>
	
	<select id="selectNiceInqRemAmtErrorProc" resultType="hashmap" parameterType="map">
		<![CDATA[
		SELECT
		    a.MAC_NO,
		    c.DEAL_TYPE,
		    c.ATM_DEAL_NO,
		    c.DEAL_NO
		FROM
		    OP.T_CM_MAC a,
		    OP.T_CT_NICE_INQREMAMT_ERROR b,
		    (
		        SELECT
		            deal_status,
		            atm_deal_no,
		            deal_no,
		            deal_type,
		            mac_no
		        FROM
		            OP.T_FN_NICE_TRAN
		        WHERE
		            DEAL_DATE = TO_CHAR(sysdate, 'YYYYMMDD')
		        AND MAC_NO != 'H011'
		        AND MAC_NO != 'H021'
		        AND
		            (
		                (
		                    DEAL_TYPE IN ( '0', '1' )
		                AND DEAL_STATUS = '0'
		                )
		                -- 입금도 조회카운트 초기화. 운총신남철과장님. 20130105
		             OR
		                (
		                    DEAL_TYPE = '3'
		                AND DEAL_STATUS != '3'
		                AND DEAL_CLSS = '1000'
		                )
		                -- 잔액조회 이외에는 장애 패스. 운총하정현과장 및 관제실
		            )
		    )
		    c
		WHERE
		    a.ORG_CD = #{orgCd}
		AND a.branch_CD = #{branchCd}
		AND a.MAC_NO != 'H011'
		AND a.MAC_NO != 'H021'
		AND b.MAC_NO(+) = a.MAC_NO
		AND c.MAC_NO = a.MAC_NO
		AND c.ATM_DEAL_NO > NVL( b.ATM_DEAL_NO, ' ' )
		ORDER BY
		    a.MAC_NO || c.ATM_DEAL_NO
		 ]]>
	</select>
	
	<select id="selectNiceCashLackErrorProc" resultType="hashmap">
		<![CDATA[
		SELECT	MAC.MAC_NO,
				CASE WHEN MAC.SHORT_CASH IS NULL OR MAC.SHORT_CASH_NOTICE IS NULL
						THEN -1
					 WHEN FM.IN_MAC_AMT < NVL(MAC.SHORT_CASH, 0) 
						THEN -2
					 WHEN FM.IN_MAC_AMT < NVL(MAC.SHORT_CASH_NOTICE, 0)
						THEN -3
					 ELSE 
						0
				END 
				AS SHORT_CASH_STATUS,
				FM.IN_MAC_AMT
		FROM	OP.T_CM_MAC	MAC,
				OP.T_CM_SITE		S,
				OP.T_FN_MAC 	FM
		WHERE	MAC.ORG_CD = '096'
		AND		MAC.branch_CD = '9600'
		AND		MAC.OPEN_DATE <= TO_CHAR(SYSDATE, 'YYYYMMDD')
		AND		(    MAC.CLOSE_DATE IS NULL 
				OR  MAC.CLOSE_DATE >= TO_CHAR(SYSDATE, 'YYYYMMDD')
				)
		AND		FM.IN_MAC_AMT IS NOT NULL
		AND		FM.IN_MAC_AMT != 0
		AND		FM.IN_MAC_AMT < NVL(MAC.SHORT_CASH_NOTICE, 0)
		AND		S.DEPT_CD < '20'
		AND		MAC.ORG_CD = FM.ORG_CD
		AND		MAC.branch_CD = FM.branch_CD
		AND		MAC.MAC_NO = FM.MAC_NO
		AND		MAC.ORG_CD = S.ORG_cD
		AND		MAC.branch_CD = S.branch_CD
		AND		MAC.SITE_CD	= S.SITE_CD
		 ]]>
	</select>
	
	<select id="selectNiceTranRepairErrorProc" resultType="hashmap">
		<![CDATA[
		SELECT
		    a.MAC_NO,
		    c.DEAL_TYPE,
		    c.ATM_DEAL_NO
		FROM
		    OP.T_ct_error_mng a,
		    OP.T_CT_NICE_TRAN_ERROR b,
		    (
		        SELECT
		            deal_status,
		            atm_deal_no,
		            deal_no,
		            deal_type,
		            mac_no
		        FROM
		            OP.T_FN_NICE_TRAN
		        WHERE
		            DEAL_DATE = TO_CHAR(SYSDATE, 'YYYYMMDD')
		        AND DEAL_YEAR = TO_CHAR(SYSDATE, 'YYYY')
		    )
		    c
		WHERE
		    a.CREATE_DATE = TO_CHAR(SYSDATE, 'YYYYMMDD')
		AND a.ORG_CD = #{orgCd}
		AND a.branch_CD = #{branchCd}
		AND a.ERROR_CD = #{cashOut}
		AND a.REPAIR_DATE IS NOT NULL
		AND b.MAC_NO(+) = a.MAC_NO
		AND c.MAC_NO = a.MAC_NO
		AND c.ATM_DEAL_NO > NVL( b.REPAIR_ATM_DEAL_NO, ' ' )
		 ]]>
	</select>
	
	<select id="selectNiceDoorCheckErrorProc" resultType="string">
		SELECT
		    M.MAC_NO
		FROM
		    (
		        SELECT
		            MAC_NO,
		            SUM(DECODE(GGJD, '1', 1, 0)) GGJD
		        FROM
		            OP.T_CT_NICE_MNG
		        WHERE
		            J_DATE = TO_CHAR(SYSDATE, 'YYYYMMDD')
		        AND J_TIME BETWEEN TO_CHAR(SYSDATE-1/24/60*3, 'HH24MISS') AND TO_CHAR(SYSDATE, 'HH24MISS')
		        GROUP BY
		            MAC_NO
		    )
		    M
		WHERE
		    M.GGJD > 3
	</select>
	
	<select id="selectNiceTranNotranErrorProc" resultType="hashmap">
		<![CDATA[
		-- 무거래 기기 체크 20080429 적용 
		SELECT
		    AA.MAC_NO,
		    TO_CHAR(SYSDATE,'D') AS TO_DAY_WEEK,
		    NVL(TRIM(MAC.NO_TRADE_SUN), 0) AS NO_TRADE_SUN,
		    NVL(TRIM(MAC.NO_TRADE_MON), 0) AS NO_TRADE_MON,
		    NVL(TRIM(MAC.NO_TRADE_TUE), 0) AS NO_TRADE_TUE,
		    NVL(TRIM(MAC.NO_TRADE_WED), 0) AS NO_TRADE_WED,
		    NVL(TRIM(MAC.NO_TRADE_THU), 0) AS NO_TRADE_THU,
		    NVL(TRIM(MAC.NO_TRADE_FRI), 0) AS NO_TRADE_FRI,
		    NVL(TRIM(MAC.NO_TRADE_SAT), 0) AS NO_TRADE_SAT,
		    TO_NUMBER(NVL(MAC.NO_TRADE_TERM,0))*60 AS NO_TRADE_BASE,
		    op.f_get_outtime( SITE.oper_start_time, SITE.oper_end_time, SITE.oper_type, TO_CHAR(
		    FMAC.last_deal_time, 'YYYYMMDD'), TO_CHAR(FMAC.last_deal_time, 'HH24MI'), TO_CHAR(SYSDATE,
		    'YYYYMMDD'), TO_CHAR(SYSDATE, 'HH24MI')) AS TOT_NO_TRADE,
		    op.f_get_outtime( SITE.oper_start_time, SITE.oper_end_time, SITE.oper_type, TO_CHAR(SYSDATE,
		    'YYYYMMDD'), '0000', TO_CHAR(SYSDATE, 'YYYYMMDD'), '2400') AS ONE_OPER_TIME
		FROM
		    (
		        SELECT
		            SUB.MAC_NO
		        FROM
		            (
		                SELECT
		                    MAC.MAC_NO,
		                    MAC.NO_TRADE_START_TIME,
		                    MAC.NO_TRADE_END_TIME,
		                    TO_DATE(TO_CHAR(SYSDATE,'YYYYMMDD') || TO_CHAR(TO_DATE((DECODE(
		                    MAC.NO_TRADE_START_TIME,'2400','0000', MAC.NO_TRADE_START_TIME)), 'HH24MI'),
		                    'HH24MI') || '00','YYYYMMDDHH24MISS') AS STTM,
		                    CASE
		                        WHEN MAC.NO_TRADE_END_TIME < MAC.NO_TRADE_START_TIME
		                        THEN TO_DATE(TO_CHAR(SYSDATE+1,'YYYYMMDD') || DECODE(SUBSTR(
		                            MAC.NO_TRADE_END_TIME,1,2),'24','00', SUBSTR(MAC.NO_TRADE_END_TIME,1,2)
		                            ) || SUBSTR(MAC.NO_TRADE_END_TIME,3,2)|| '00','YYYYMMDDHH24MISS')
		                        WHEN SUBSTR(MAC.NO_TRADE_END_TIME,1,2) = '24'
		                        THEN TO_DATE(TO_CHAR(SYSDATE+1,'YYYYMMDD') || DECODE(SUBSTR(
		                            MAC.NO_TRADE_END_TIME,1,2),'24','00', SUBSTR(MAC.NO_TRADE_END_TIME,1,2)
		                            ) || SUBSTR(MAC.NO_TRADE_END_TIME,3,2)|| '00','YYYYMMDDHH24MISS')
		                        ELSE TO_DATE(TO_CHAR(SYSDATE,'YYYYMMDD') || DECODE(MAC.NO_TRADE_END_TIME,
		                            '2400','2359',MAC.NO_TRADE_END_TIME) || '00','YYYYMMDDHH24MISS')
		                    END AS EDTM
		                FROM
		                    OP.T_CM_MAC MAC,
		                    OP.T_CM_SITE SITE,
		                    OP.T_FN_MAC FMAC
		                WHERE
		                    -- 무거래 요일 설정 
		                    DECODE(TO_CHAR(SYSDATE,'D') ,'1', NVL(MAC.NO_TRADE_SUN,'0'), '2', NVL(
		                    MAC.NO_TRADE_MON,'0'), '3', NVL(MAC.NO_TRADE_TUE,'0'), '4', NVL(
		                    MAC.NO_TRADE_WED,'0'), '5', NVL(MAC.NO_TRADE_THU,'0'), '6', NVL(
		                    MAC.NO_TRADE_FRI,'0'), '7', NVL(MAC.NO_TRADE_SAT,'0'), '') = '1'
		                    -- 무거래 간격 설정 
		                AND op.f_get_outtime( SITE.oper_start_time, SITE.oper_end_time, SITE.oper_type,
		                    TO_CHAR(FMAC.last_deal_time, 'YYYYMMDD'), TO_CHAR(FMAC.last_deal_time, 'HH24MI'
		                    ), TO_CHAR(SYSDATE, 'YYYYMMDD'), TO_CHAR(SYSDATE, 'HH24MI')) > (TO_NUMBER(NVL(
		                    MAC.NO_TRADE_TERM,0))*60)
		                AND MAC.ORG_CD = '096'
		                AND MAC.BRANCH_CD = '9600'
		                AND MAC.ORG_CD = FMAC.ORG_CD
		                AND MAC.BRANCH_CD = FMAC.BRANCH_CD
		                AND MAC.MAC_NO = FMAC.MAC_NO
		                AND SITE.OPEN_DATE <= TO_CHAR(SYSDATE,'YYYYMMDD')
		                AND
		                    (
		                        SITE.CLOSE_DATE >= TO_CHAR(SYSDATE,'YYYYMMDD')
		                     OR SITE.CLOSE_DATE IS NULL
		                    )
		                AND MAC.ORG_CD = SITE.ORG_CD
		                AND MAC.BRANCH_CD = SITE.BRANCH_CD
		                AND MAC.SITE_CD = SITE.SITE_CD
		                AND MAC.MAC_NO NOT IN ('H011', 'H021', '9999')
		                    -- 테스트 기기 제외 
		                AND MAC.NO_TRADE_START_TIME IS NOT NULL
		                AND MAC.NO_TRADE_END_TIME IS NOT NULL
		                AND MAC.NO_TRADE_TERM IS NOT NULL
		            )
		            SUB
		        WHERE
		            SYSDATE > SUB.STTM
		        AND SYSDATE < SUB.EDTM
		        MINUS
		        SELECT DISTINCT
		            c.mac_no
		        FROM
		            OP.T_CT_UNFINISH c
		        WHERE
		            c.ORG_CD = '096'
		        AND c.BRANCH_CD = '9600'
		        AND c.ERROR_CD = 'NI904'
		        AND C.CREATE_DATE > TO_NUMBER(TO_CHAR( SYSDATE - 3, 'YYYYMMDD' ))
		    )
		    AA,
		    OP.T_CM_MAC MAC,
		    OP.T_CM_SITE SITE,
		    OP.T_FN_MAC FMAC
		WHERE
		    MAC.ORG_CD = '096'
		AND MAC.BRANCH_CD = '9600'
		AND MAC.MAC_NO = AA.MAC_NO
		AND MAC.ORG_CD = FMAC.ORG_CD
		AND MAC.BRANCH_CD = FMAC.BRANCH_CD
		AND MAC.MAC_NO = FMAC.MAC_NO
		AND MAC.ORG_CD = SITE.ORG_CD
		AND MAC.BRANCH_CD = SITE.BRANCH_CD
		AND MAC.SITE_CD = SITE.SITE_CD
		 ]]>
	</select>
	
	<select id="selectNiceTranPickErrorProc" resultType="hashmap" parameterType="map">
		<![CDATA[
		SELECT
		    a.MAC_NO,
		    c.DEAL_STATUS,
		    c.ATM_DEAL_NO
		FROM
		    OP.T_CM_MAC a,
		    OP.T_CT_NICE_TRAN_ERROR b,
		    (
		        SELECT
		            deal_status,
		            atm_deal_no,
		            mac_no
		        FROM
		            OP.T_FN_NICE_TRAN
		        WHERE
		            DEAL_DATE = TO_CHAR(sysdate, 'YYYYMMDD')
		        AND DEAL_TYPE != '3'
		        AND DEAL_STATUS != '3'
		        AND MAC_NO != 'H011'
		        AND MAC_NO != 'H021'
		    )
		    c
		WHERE
		    a.ORG_CD = #{orgCd}
		AND a.branch_CD = #{branchCd}
		AND a.MAC_NO != 'H011'
		AND a.MAC_NO != 'H021'
		AND b.MAC_NO(+) = a.MAC_NO
		AND c.MAC_NO = a.MAC_NO
		AND c.ATM_DEAL_NO > NVL( b.ATM_DEAL_NO, ' ' )
		ORDER BY
		    a.MAC_NO,
		    c.ATM_DEAL_NO
		 ]]>
	</select>
	
	<update id="updateATMESErrorSendProc" parameterType="map">
		<![CDATA[
		UPDATE
		    OP.T_CM_CASH_ORG
		SET
		    SEND_YN = DECODE( #{szCreateYN}, '1', '1', '2' )
		WHERE
		    ORG_CD = #{orgCd}
		AND BRANCH_CD = op.F_GET_NICE_BRANCH_CD( #{orgCd}, #{branchCd}, '', #{macNo} )
		AND MAC_NO = #{macNo}
		 ]]>
	</update>
	
	<update id="updateNiceInqRemAmtErrorUpdateProc" parameterType="map">
		<![CDATA[
		UPDATE
		    OP.T_CT_NICE_INQREMAMT_ERROR
		SET
		    ATM_DEAL_NO = #{atmDealNo}
		WHERE
		    MAC_NO = #{macNo}
		 ]]>
	</update>
	
	<insert id="insertNiceInqRemAmtErrorUpdateProc" parameterType="map">
		<![CDATA[
		INSERT
		INTO
		    OP.T_CT_NICE_INQREMAMT_ERROR
		    (
		        MAC_NO,
		        ATM_DEAL_NO
		    )
		    VALUES
		    (
		        #{macNo},
		        #{atmDealNo}
		    )
		 ]]>
	</insert>
	
	<update id="updateNiceTranRepairErrorUpdateProc" parameterType="map">
		<![CDATA[
		UPDATE
		    OP.T_CT_NICE_TRAN_ERROR
		SET
		    REPAIR_ATM_DEAL_NO = RTRIM(#{atmDealNo})
		WHERE
		    MAC_NO = RTRIM(#{macNo})
		 ]]>
	</update>
	
	<insert id="insertNiceTranRepairErrorUpdateProc" parameterType="map">
		<![CDATA[
		INSERT
		INTO
		    OP.T_CT_NICE_TRAN_ERROR
		    (
		        MAC_NO,
		        REPAIR_ATM_DEAL_NO
		    )
		    VALUES
		    (
		        RTRIM(#{macNo}),
		        RTRIM(#{atmDealNo})
		    )
		 ]]>
	</insert>
	
	<update id="updateNiceTranErrorUpdateProc" parameterType="map">
		<![CDATA[
		UPDATE
		    OP.T_CT_NICE_TRAN_ERROR
		SET
		    ATM_DEAL_NO = RTRIM(#{atmDealNo})
		WHERE
		    MAC_NO = RTRIM(#{macNo})
		 ]]>
	</update>
	
	<insert id="insertNiceTranErrorUpdateProc" parameterType="map">
		<![CDATA[
		INSERT
		INTO
		    OP.T_CT_NICE_TRAN_ERROR
		    (
		        MAC_NO,
		        ATM_DEAL_NO
		    )
		    VALUES
		    (
		        RTRIM(#{macNo}),
		        RTRIM(#{atmDealNo})
		    )
		 ]]>
	</insert>

</mapper>