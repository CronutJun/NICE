package com.nicetcm.nibsplus.broker.msg.mapper;

import static org.apache.ibatis.jdbc.SqlBuilder.BEGIN;
import static org.apache.ibatis.jdbc.SqlBuilder.DELETE_FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.INSERT_INTO;
import static org.apache.ibatis.jdbc.SqlBuilder.ORDER_BY;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT_DISTINCT;
import static org.apache.ibatis.jdbc.SqlBuilder.SET;
import static org.apache.ibatis.jdbc.SqlBuilder.SQL;
import static org.apache.ibatis.jdbc.SqlBuilder.UPDATE;
import static org.apache.ibatis.jdbc.SqlBuilder.VALUES;
import static org.apache.ibatis.jdbc.SqlBuilder.WHERE;

import com.nicetcm.nibsplus.broker.msg.model.TCmSetSchedule;
import com.nicetcm.nibsplus.broker.msg.model.TCmSetScheduleSpec.Criteria;
import com.nicetcm.nibsplus.broker.msg.model.TCmSetScheduleSpec.Criterion;
import com.nicetcm.nibsplus.broker.msg.model.TCmSetScheduleSpec;
import java.util.List;
import java.util.Map;

public class TCmSetScheduleSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CM_SET_SCHEDULE
     *
     * @mbggenerated Wed Aug 06 09:58:31 KST 2014
     */
    public String countBySpec(TCmSetScheduleSpec spec) {
        BEGIN();
        SELECT("count(*)");
        FROM("OP.T_CM_SET_SCHEDULE");
        applyWhere(spec, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CM_SET_SCHEDULE
     *
     * @mbggenerated Wed Aug 06 09:58:31 KST 2014
     */
    public String deleteBySpec(TCmSetScheduleSpec spec) {
        BEGIN();
        DELETE_FROM("OP.T_CM_SET_SCHEDULE");
        applyWhere(spec, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CM_SET_SCHEDULE
     *
     * @mbggenerated Wed Aug 06 09:58:31 KST 2014
     */
    public String insertSelective(TCmSetSchedule record) {
        BEGIN();
        INSERT_INTO("OP.T_CM_SET_SCHEDULE");

        if (record.getOrgCd() != null) {
            VALUES("ORG_CD", "#{orgCd,jdbcType=VARCHAR}");
        }

        if (record.getWorkSeq() != null) {
            VALUES("WORK_SEQ", "#{workSeq,jdbcType=VARCHAR}");
        }

        if (record.getWorkClass() != null) {
            VALUES("WORK_CLASS", "#{workClass,jdbcType=VARCHAR}");
        }

        if (record.getChangeNo() != null) {
            VALUES("CHANGE_NO", "#{changeNo,jdbcType=DECIMAL}");
        }

        if (record.getAcceptDate() != null) {
            VALUES("ACCEPT_DATE", "#{acceptDate,jdbcType=VARCHAR}");
        }

        if (record.getAcceptTime() != null) {
            VALUES("ACCEPT_TIME", "#{acceptTime,jdbcType=VARCHAR}");
        }

        if (record.getApplyDate() != null) {
            VALUES("APPLY_DATE", "#{applyDate,jdbcType=VARCHAR}");
        }

        if (record.getSetupDate() != null) {
            VALUES("SETUP_DATE", "#{setupDate,jdbcType=VARCHAR}");
        }

        if (record.getSetMacCnt() != null) {
            VALUES("SET_MAC_CNT", "#{setMacCnt,jdbcType=DECIMAL}");
        }

        if (record.getSetFacilCnt() != null) {
            VALUES("SET_FACIL_CNT", "#{setFacilCnt,jdbcType=DECIMAL}");
        }

        if (record.getBranchNm() != null) {
            VALUES("BRANCH_NM", "#{branchNm,jdbcType=VARCHAR}");
        }

        if (record.getSiteNm() != null) {
            VALUES("SITE_NM", "#{siteNm,jdbcType=VARCHAR}");
        }

        if (record.getBranchManNm() != null) {
            VALUES("BRANCH_MAN_NM", "#{branchManNm,jdbcType=VARCHAR}");
        }

        if (record.getTeleNo() != null) {
            VALUES("TELE_NO", "#{teleNo,jdbcType=VARCHAR}");
        }

        if (record.getWorkMsg() != null) {
            VALUES("WORK_MSG", "#{workMsg,jdbcType=VARCHAR}");
        }

        if (record.getWorkResult() != null) {
            VALUES("WORK_RESULT", "#{workResult,jdbcType=VARCHAR}");
        }

        if (record.getUpdateDate() != null) {
            VALUES("UPDATE_DATE", "#{updateDate,jdbcType=TIMESTAMP}");
        }

        if (record.getUpdateUid() != null) {
            VALUES("UPDATE_UID", "#{updateUid,jdbcType=VARCHAR}");
        }

        if (record.getDataType() != null) {
            VALUES("DATA_TYPE", "#{dataType,jdbcType=VARCHAR}");
        }

        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CM_SET_SCHEDULE
     *
     * @mbggenerated Wed Aug 06 09:58:31 KST 2014
     */
    public String selectBySpec(TCmSetScheduleSpec spec) {
        BEGIN();
        if (spec != null && spec.isDistinct()) {
            SELECT_DISTINCT("ORG_CD");
        } else {
            SELECT("ORG_CD");
        }
        SELECT("WORK_SEQ");
        SELECT("WORK_CLASS");
        SELECT("CHANGE_NO");
        SELECT("ACCEPT_DATE");
        SELECT("ACCEPT_TIME");
        SELECT("APPLY_DATE");
        SELECT("SETUP_DATE");
        SELECT("SET_MAC_CNT");
        SELECT("SET_FACIL_CNT");
        SELECT("BRANCH_NM");
        SELECT("SITE_NM");
        SELECT("BRANCH_MAN_NM");
        SELECT("TELE_NO");
        SELECT("WORK_MSG");
        SELECT("WORK_RESULT");
        SELECT("UPDATE_DATE");
        SELECT("UPDATE_UID");
        SELECT("DATA_TYPE");
        FROM("OP.T_CM_SET_SCHEDULE");
        applyWhere(spec, false);

        if (spec != null && spec.getOrderByClause() != null) {
            ORDER_BY(spec.getOrderByClause());
        }

        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CM_SET_SCHEDULE
     *
     * @mbggenerated Wed Aug 06 09:58:31 KST 2014
     */
    public String updateBySpecSelective(Map<String, Object> parameter) {
        TCmSetSchedule record = (TCmSetSchedule) parameter.get("record");
        TCmSetScheduleSpec spec = (TCmSetScheduleSpec) parameter.get("spec");

        BEGIN();
        UPDATE("OP.T_CM_SET_SCHEDULE");

        if (record.getOrgCd() != null) {
            SET("ORG_CD = #{record.orgCd,jdbcType=VARCHAR}");
        }

        if (record.getWorkSeq() != null) {
            SET("WORK_SEQ = #{record.workSeq,jdbcType=VARCHAR}");
        }

        if (record.getWorkClass() != null) {
            SET("WORK_CLASS = #{record.workClass,jdbcType=VARCHAR}");
        }

        if (record.getChangeNo() != null) {
            SET("CHANGE_NO = #{record.changeNo,jdbcType=DECIMAL}");
        }

        if (record.getAcceptDate() != null) {
            SET("ACCEPT_DATE = #{record.acceptDate,jdbcType=VARCHAR}");
        }

        if (record.getAcceptTime() != null) {
            SET("ACCEPT_TIME = #{record.acceptTime,jdbcType=VARCHAR}");
        }

        if (record.getApplyDate() != null) {
            SET("APPLY_DATE = #{record.applyDate,jdbcType=VARCHAR}");
        }

        if (record.getSetupDate() != null) {
            SET("SETUP_DATE = #{record.setupDate,jdbcType=VARCHAR}");
        }

        if (record.getSetMacCnt() != null) {
            SET("SET_MAC_CNT = #{record.setMacCnt,jdbcType=DECIMAL}");
        }

        if (record.getSetFacilCnt() != null) {
            SET("SET_FACIL_CNT = #{record.setFacilCnt,jdbcType=DECIMAL}");
        }

        if (record.getBranchNm() != null) {
            SET("BRANCH_NM = #{record.branchNm,jdbcType=VARCHAR}");
        }

        if (record.getSiteNm() != null) {
            SET("SITE_NM = #{record.siteNm,jdbcType=VARCHAR}");
        }

        if (record.getBranchManNm() != null) {
            SET("BRANCH_MAN_NM = #{record.branchManNm,jdbcType=VARCHAR}");
        }

        if (record.getTeleNo() != null) {
            SET("TELE_NO = #{record.teleNo,jdbcType=VARCHAR}");
        }

        if (record.getWorkMsg() != null) {
            SET("WORK_MSG = #{record.workMsg,jdbcType=VARCHAR}");
        }

        if (record.getWorkResult() != null) {
            SET("WORK_RESULT = #{record.workResult,jdbcType=VARCHAR}");
        }

        if (record.getUpdateDate() != null) {
            SET("UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP}");
        }

        if (record.getUpdateUid() != null) {
            SET("UPDATE_UID = #{record.updateUid,jdbcType=VARCHAR}");
        }

        if (record.getDataType() != null) {
            SET("DATA_TYPE = #{record.dataType,jdbcType=VARCHAR}");
        }

        applyWhere(spec, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CM_SET_SCHEDULE
     *
     * @mbggenerated Wed Aug 06 09:58:31 KST 2014
     */
    public String updateBySpec(Map<String, Object> parameter) {
        BEGIN();
        UPDATE("OP.T_CM_SET_SCHEDULE");

        SET("ORG_CD = #{record.orgCd,jdbcType=VARCHAR}");
        SET("WORK_SEQ = #{record.workSeq,jdbcType=VARCHAR}");
        SET("WORK_CLASS = #{record.workClass,jdbcType=VARCHAR}");
        SET("CHANGE_NO = #{record.changeNo,jdbcType=DECIMAL}");
        SET("ACCEPT_DATE = #{record.acceptDate,jdbcType=VARCHAR}");
        SET("ACCEPT_TIME = #{record.acceptTime,jdbcType=VARCHAR}");
        SET("APPLY_DATE = #{record.applyDate,jdbcType=VARCHAR}");
        SET("SETUP_DATE = #{record.setupDate,jdbcType=VARCHAR}");
        SET("SET_MAC_CNT = #{record.setMacCnt,jdbcType=DECIMAL}");
        SET("SET_FACIL_CNT = #{record.setFacilCnt,jdbcType=DECIMAL}");
        SET("BRANCH_NM = #{record.branchNm,jdbcType=VARCHAR}");
        SET("SITE_NM = #{record.siteNm,jdbcType=VARCHAR}");
        SET("BRANCH_MAN_NM = #{record.branchManNm,jdbcType=VARCHAR}");
        SET("TELE_NO = #{record.teleNo,jdbcType=VARCHAR}");
        SET("WORK_MSG = #{record.workMsg,jdbcType=VARCHAR}");
        SET("WORK_RESULT = #{record.workResult,jdbcType=VARCHAR}");
        SET("UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP}");
        SET("UPDATE_UID = #{record.updateUid,jdbcType=VARCHAR}");
        SET("DATA_TYPE = #{record.dataType,jdbcType=VARCHAR}");

        TCmSetScheduleSpec spec = (TCmSetScheduleSpec) parameter.get("spec");
        applyWhere(spec, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CM_SET_SCHEDULE
     *
     * @mbggenerated Wed Aug 06 09:58:31 KST 2014
     */
    public String updateByPrimaryKeySelective(TCmSetSchedule record) {
        BEGIN();
        UPDATE("OP.T_CM_SET_SCHEDULE");

        if (record.getChangeNo() != null) {
            SET("CHANGE_NO = #{changeNo,jdbcType=DECIMAL}");
        }

        if (record.getAcceptDate() != null) {
            SET("ACCEPT_DATE = #{acceptDate,jdbcType=VARCHAR}");
        }

        if (record.getAcceptTime() != null) {
            SET("ACCEPT_TIME = #{acceptTime,jdbcType=VARCHAR}");
        }

        if (record.getApplyDate() != null) {
            SET("APPLY_DATE = #{applyDate,jdbcType=VARCHAR}");
        }

        if (record.getSetupDate() != null) {
            SET("SETUP_DATE = #{setupDate,jdbcType=VARCHAR}");
        }

        if (record.getSetMacCnt() != null) {
            SET("SET_MAC_CNT = #{setMacCnt,jdbcType=DECIMAL}");
        }

        if (record.getSetFacilCnt() != null) {
            SET("SET_FACIL_CNT = #{setFacilCnt,jdbcType=DECIMAL}");
        }

        if (record.getBranchNm() != null) {
            SET("BRANCH_NM = #{branchNm,jdbcType=VARCHAR}");
        }

        if (record.getSiteNm() != null) {
            SET("SITE_NM = #{siteNm,jdbcType=VARCHAR}");
        }

        if (record.getBranchManNm() != null) {
            SET("BRANCH_MAN_NM = #{branchManNm,jdbcType=VARCHAR}");
        }

        if (record.getTeleNo() != null) {
            SET("TELE_NO = #{teleNo,jdbcType=VARCHAR}");
        }

        if (record.getWorkMsg() != null) {
            SET("WORK_MSG = #{workMsg,jdbcType=VARCHAR}");
        }

        if (record.getWorkResult() != null) {
            SET("WORK_RESULT = #{workResult,jdbcType=VARCHAR}");
        }

        if (record.getUpdateDate() != null) {
            SET("UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP}");
        }

        if (record.getUpdateUid() != null) {
            SET("UPDATE_UID = #{updateUid,jdbcType=VARCHAR}");
        }

        if (record.getDataType() != null) {
            SET("DATA_TYPE = #{dataType,jdbcType=VARCHAR}");
        }

        WHERE("ORG_CD = #{orgCd,jdbcType=VARCHAR}");
        WHERE("WORK_SEQ = #{workSeq,jdbcType=VARCHAR}");
        WHERE("WORK_CLASS = #{workClass,jdbcType=VARCHAR}");

        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CM_SET_SCHEDULE
     *
     * @mbggenerated Wed Aug 06 09:58:31 KST 2014
     */
    protected void applyWhere(TCmSetScheduleSpec spec, boolean includeSpecPhrase) {
        if (spec == null) {
            return;
        }

        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeSpecPhrase) {
            parmPhrase1 = "%s #{spec.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{spec.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{spec.oredCriteria[%d].allCriteria[%d].value} and #{spec.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{spec.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{spec.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{spec.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{spec.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }

        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = spec.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }

                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }

                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }

        if (sb.length() > 0) {
            WHERE(sb.toString());
        }
    }
}