package com.nicetcm.nibsplus.broker.msg.mapper;

import static org.apache.ibatis.jdbc.SqlBuilder.BEGIN;
import static org.apache.ibatis.jdbc.SqlBuilder.DELETE_FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.INSERT_INTO;
import static org.apache.ibatis.jdbc.SqlBuilder.ORDER_BY;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT_DISTINCT;
import static org.apache.ibatis.jdbc.SqlBuilder.SET;
import static org.apache.ibatis.jdbc.SqlBuilder.SQL;
import static org.apache.ibatis.jdbc.SqlBuilder.UPDATE;
import static org.apache.ibatis.jdbc.SqlBuilder.VALUES;
import static org.apache.ibatis.jdbc.SqlBuilder.WHERE;

import com.nicetcm.nibsplus.broker.msg.model.TCtMacInfoNew;
import com.nicetcm.nibsplus.broker.msg.model.TCtMacInfoNewSpec.Criteria;
import com.nicetcm.nibsplus.broker.msg.model.TCtMacInfoNewSpec.Criterion;
import com.nicetcm.nibsplus.broker.msg.model.TCtMacInfoNewSpec;
import java.util.List;
import java.util.Map;

public class TCtMacInfoNewSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_MAC_INFO_NEW
     *
     * @mbggenerated Tue Aug 05 09:11:05 KST 2014
     */
    public String countBySpec(TCtMacInfoNewSpec spec) {
        BEGIN();
        SELECT("count(*)");
        FROM("OP.T_CT_MAC_INFO_NEW");
        applyWhere(spec, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_MAC_INFO_NEW
     *
     * @mbggenerated Tue Aug 05 09:11:05 KST 2014
     */
    public String deleteBySpec(TCtMacInfoNewSpec spec) {
        BEGIN();
        DELETE_FROM("OP.T_CT_MAC_INFO_NEW");
        applyWhere(spec, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_MAC_INFO_NEW
     *
     * @mbggenerated Tue Aug 05 09:11:05 KST 2014
     */
    public String insertSelective(TCtMacInfoNew record) {
        BEGIN();
        INSERT_INTO("OP.T_CT_MAC_INFO_NEW");

        if (record.getReqDate() != null) {
            VALUES("REQ_DATE", "#{reqDate,jdbcType=VARCHAR}");
        }

        if (record.getOrgCd() != null) {
            VALUES("ORG_CD", "#{orgCd,jdbcType=VARCHAR}");
        }

        if (record.getBranchCd() != null) {
            VALUES("BRANCH_CD", "#{branchCd,jdbcType=VARCHAR}");
        }

        if (record.getSiteNm() != null) {
            VALUES("SITE_NM", "#{siteNm,jdbcType=VARCHAR}");
        }

        if (record.getBranchAdminNm() != null) {
            VALUES("BRANCH_ADMIN_NM", "#{branchAdminNm,jdbcType=VARCHAR}");
        }

        if (record.getBranchTelNo() != null) {
            VALUES("BRANCH_TEL_NO", "#{branchTelNo,jdbcType=VARCHAR}");
        }

        if (record.getPlaceType() != null) {
            VALUES("PLACE_TYPE", "#{placeType,jdbcType=VARCHAR}");
        }

        if (record.getBoothType() != null) {
            VALUES("BOOTH_TYPE", "#{boothType,jdbcType=VARCHAR}");
        }

        if (record.getFar() != null) {
            VALUES("FAR", "#{far,jdbcType=VARCHAR}");
        }

        if (record.getSetPlace() != null) {
            VALUES("SET_PLACE", "#{setPlace,jdbcType=VARCHAR}");
        }

        if (record.getSetAddr() != null) {
            VALUES("SET_ADDR", "#{setAddr,jdbcType=VARCHAR}");
        }

        if (record.getContactNm() != null) {
            VALUES("CONTACT_NM", "#{contactNm,jdbcType=VARCHAR}");
        }

        if (record.getContactTelNo() != null) {
            VALUES("CONTACT_TEL_NO", "#{contactTelNo,jdbcType=VARCHAR}");
        }

        if (record.getAtmCnt() != null) {
            VALUES("ATM_CNT", "#{atmCnt,jdbcType=VARCHAR}");
        }

        if (record.getCdCnt() != null) {
            VALUES("CD_CNT", "#{cdCnt,jdbcType=VARCHAR}");
        }

        if (record.getOperStartTime() != null) {
            VALUES("OPER_START_TIME", "#{operStartTime,jdbcType=VARCHAR}");
        }

        if (record.getOperEndTime() != null) {
            VALUES("OPER_END_TIME", "#{operEndTime,jdbcType=VARCHAR}");
        }

        if (record.getElecFeeYn() != null) {
            VALUES("ELEC_FEE_YN", "#{elecFeeYn,jdbcType=VARCHAR}");
        }

        if (record.getDepositAmt() != null) {
            VALUES("DEPOSIT_AMT", "#{depositAmt,jdbcType=VARCHAR}");
        }

        if (record.getRentFee() != null) {
            VALUES("RENT_FEE", "#{rentFee,jdbcType=VARCHAR}");
        }

        if (record.getMngFee() != null) {
            VALUES("MNG_FEE", "#{mngFee,jdbcType=VARCHAR}");
        }

        if (record.getSetReqCd() != null) {
            VALUES("SET_REQ_CD", "#{setReqCd,jdbcType=VARCHAR}");
        }

        if (record.getUpdateDate() != null) {
            VALUES("UPDATE_DATE", "#{updateDate,jdbcType=TIMESTAMP}");
        }

        if (record.getUpdateUid() != null) {
            VALUES("UPDATE_UID", "#{updateUid,jdbcType=VARCHAR}");
        }

        if (record.getMemo() != null) {
            VALUES("MEMO", "#{memo,jdbcType=VARCHAR}");
        }

        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_MAC_INFO_NEW
     *
     * @mbggenerated Tue Aug 05 09:11:05 KST 2014
     */
    public String selectBySpec(TCtMacInfoNewSpec spec) {
        BEGIN();
        if (spec != null && spec.isDistinct()) {
            SELECT_DISTINCT("REQ_DATE");
        } else {
            SELECT("REQ_DATE");
        }
        SELECT("ORG_CD");
        SELECT("BRANCH_CD");
        SELECT("SITE_NM");
        SELECT("BRANCH_ADMIN_NM");
        SELECT("BRANCH_TEL_NO");
        SELECT("PLACE_TYPE");
        SELECT("BOOTH_TYPE");
        SELECT("FAR");
        SELECT("SET_PLACE");
        SELECT("SET_ADDR");
        SELECT("CONTACT_NM");
        SELECT("CONTACT_TEL_NO");
        SELECT("ATM_CNT");
        SELECT("CD_CNT");
        SELECT("OPER_START_TIME");
        SELECT("OPER_END_TIME");
        SELECT("ELEC_FEE_YN");
        SELECT("DEPOSIT_AMT");
        SELECT("RENT_FEE");
        SELECT("MNG_FEE");
        SELECT("SET_REQ_CD");
        SELECT("UPDATE_DATE");
        SELECT("UPDATE_UID");
        SELECT("MEMO");
        FROM("OP.T_CT_MAC_INFO_NEW");
        applyWhere(spec, false);

        if (spec != null && spec.getOrderByClause() != null) {
            ORDER_BY(spec.getOrderByClause());
        }

        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_MAC_INFO_NEW
     *
     * @mbggenerated Tue Aug 05 09:11:05 KST 2014
     */
    public String updateBySpecSelective(Map<String, Object> parameter) {
        TCtMacInfoNew record = (TCtMacInfoNew) parameter.get("record");
        TCtMacInfoNewSpec spec = (TCtMacInfoNewSpec) parameter.get("spec");

        BEGIN();
        UPDATE("OP.T_CT_MAC_INFO_NEW");

        if (record.getReqDate() != null) {
            SET("REQ_DATE = #{record.reqDate,jdbcType=VARCHAR}");
        }

        if (record.getOrgCd() != null) {
            SET("ORG_CD = #{record.orgCd,jdbcType=VARCHAR}");
        }

        if (record.getBranchCd() != null) {
            SET("BRANCH_CD = #{record.branchCd,jdbcType=VARCHAR}");
        }

        if (record.getSiteNm() != null) {
            SET("SITE_NM = #{record.siteNm,jdbcType=VARCHAR}");
        }

        if (record.getBranchAdminNm() != null) {
            SET("BRANCH_ADMIN_NM = #{record.branchAdminNm,jdbcType=VARCHAR}");
        }

        if (record.getBranchTelNo() != null) {
            SET("BRANCH_TEL_NO = #{record.branchTelNo,jdbcType=VARCHAR}");
        }

        if (record.getPlaceType() != null) {
            SET("PLACE_TYPE = #{record.placeType,jdbcType=VARCHAR}");
        }

        if (record.getBoothType() != null) {
            SET("BOOTH_TYPE = #{record.boothType,jdbcType=VARCHAR}");
        }

        if (record.getFar() != null) {
            SET("FAR = #{record.far,jdbcType=VARCHAR}");
        }

        if (record.getSetPlace() != null) {
            SET("SET_PLACE = #{record.setPlace,jdbcType=VARCHAR}");
        }

        if (record.getSetAddr() != null) {
            SET("SET_ADDR = #{record.setAddr,jdbcType=VARCHAR}");
        }

        if (record.getContactNm() != null) {
            SET("CONTACT_NM = #{record.contactNm,jdbcType=VARCHAR}");
        }

        if (record.getContactTelNo() != null) {
            SET("CONTACT_TEL_NO = #{record.contactTelNo,jdbcType=VARCHAR}");
        }

        if (record.getAtmCnt() != null) {
            SET("ATM_CNT = #{record.atmCnt,jdbcType=VARCHAR}");
        }

        if (record.getCdCnt() != null) {
            SET("CD_CNT = #{record.cdCnt,jdbcType=VARCHAR}");
        }

        if (record.getOperStartTime() != null) {
            SET("OPER_START_TIME = #{record.operStartTime,jdbcType=VARCHAR}");
        }

        if (record.getOperEndTime() != null) {
            SET("OPER_END_TIME = #{record.operEndTime,jdbcType=VARCHAR}");
        }

        if (record.getElecFeeYn() != null) {
            SET("ELEC_FEE_YN = #{record.elecFeeYn,jdbcType=VARCHAR}");
        }

        if (record.getDepositAmt() != null) {
            SET("DEPOSIT_AMT = #{record.depositAmt,jdbcType=VARCHAR}");
        }

        if (record.getRentFee() != null) {
            SET("RENT_FEE = #{record.rentFee,jdbcType=VARCHAR}");
        }

        if (record.getMngFee() != null) {
            SET("MNG_FEE = #{record.mngFee,jdbcType=VARCHAR}");
        }

        if (record.getSetReqCd() != null) {
            SET("SET_REQ_CD = #{record.setReqCd,jdbcType=VARCHAR}");
        }

        if (record.getUpdateDate() != null) {
            SET("UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP}");
        }

        if (record.getUpdateUid() != null) {
            SET("UPDATE_UID = #{record.updateUid,jdbcType=VARCHAR}");
        }

        if (record.getMemo() != null) {
            SET("MEMO = #{record.memo,jdbcType=VARCHAR}");
        }

        applyWhere(spec, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_MAC_INFO_NEW
     *
     * @mbggenerated Tue Aug 05 09:11:05 KST 2014
     */
    public String updateBySpec(Map<String, Object> parameter) {
        BEGIN();
        UPDATE("OP.T_CT_MAC_INFO_NEW");

        SET("REQ_DATE = #{record.reqDate,jdbcType=VARCHAR}");
        SET("ORG_CD = #{record.orgCd,jdbcType=VARCHAR}");
        SET("BRANCH_CD = #{record.branchCd,jdbcType=VARCHAR}");
        SET("SITE_NM = #{record.siteNm,jdbcType=VARCHAR}");
        SET("BRANCH_ADMIN_NM = #{record.branchAdminNm,jdbcType=VARCHAR}");
        SET("BRANCH_TEL_NO = #{record.branchTelNo,jdbcType=VARCHAR}");
        SET("PLACE_TYPE = #{record.placeType,jdbcType=VARCHAR}");
        SET("BOOTH_TYPE = #{record.boothType,jdbcType=VARCHAR}");
        SET("FAR = #{record.far,jdbcType=VARCHAR}");
        SET("SET_PLACE = #{record.setPlace,jdbcType=VARCHAR}");
        SET("SET_ADDR = #{record.setAddr,jdbcType=VARCHAR}");
        SET("CONTACT_NM = #{record.contactNm,jdbcType=VARCHAR}");
        SET("CONTACT_TEL_NO = #{record.contactTelNo,jdbcType=VARCHAR}");
        SET("ATM_CNT = #{record.atmCnt,jdbcType=VARCHAR}");
        SET("CD_CNT = #{record.cdCnt,jdbcType=VARCHAR}");
        SET("OPER_START_TIME = #{record.operStartTime,jdbcType=VARCHAR}");
        SET("OPER_END_TIME = #{record.operEndTime,jdbcType=VARCHAR}");
        SET("ELEC_FEE_YN = #{record.elecFeeYn,jdbcType=VARCHAR}");
        SET("DEPOSIT_AMT = #{record.depositAmt,jdbcType=VARCHAR}");
        SET("RENT_FEE = #{record.rentFee,jdbcType=VARCHAR}");
        SET("MNG_FEE = #{record.mngFee,jdbcType=VARCHAR}");
        SET("SET_REQ_CD = #{record.setReqCd,jdbcType=VARCHAR}");
        SET("UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP}");
        SET("UPDATE_UID = #{record.updateUid,jdbcType=VARCHAR}");
        SET("MEMO = #{record.memo,jdbcType=VARCHAR}");

        TCtMacInfoNewSpec spec = (TCtMacInfoNewSpec) parameter.get("spec");
        applyWhere(spec, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_MAC_INFO_NEW
     *
     * @mbggenerated Tue Aug 05 09:11:05 KST 2014
     */
    protected void applyWhere(TCtMacInfoNewSpec spec, boolean includeSpecPhrase) {
        if (spec == null) {
            return;
        }

        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeSpecPhrase) {
            parmPhrase1 = "%s #{spec.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{spec.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{spec.oredCriteria[%d].allCriteria[%d].value} and #{spec.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{spec.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{spec.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{spec.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{spec.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }

        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = spec.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }

                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }

                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }

        if (sb.length() > 0) {
            WHERE(sb.toString());
        }
    }
}