package com.nicetcm.nibsplus.broker.msg.mapper;

import static org.apache.ibatis.jdbc.SqlBuilder.BEGIN;
import static org.apache.ibatis.jdbc.SqlBuilder.DELETE_FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.INSERT_INTO;
import static org.apache.ibatis.jdbc.SqlBuilder.ORDER_BY;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT_DISTINCT;
import static org.apache.ibatis.jdbc.SqlBuilder.SET;
import static org.apache.ibatis.jdbc.SqlBuilder.SQL;
import static org.apache.ibatis.jdbc.SqlBuilder.UPDATE;
import static org.apache.ibatis.jdbc.SqlBuilder.VALUES;
import static org.apache.ibatis.jdbc.SqlBuilder.WHERE;

import com.nicetcm.nibsplus.broker.msg.model.TFnInoutOrg;
import com.nicetcm.nibsplus.broker.msg.model.TFnInoutOrgSpec.Criteria;
import com.nicetcm.nibsplus.broker.msg.model.TFnInoutOrgSpec.Criterion;
import com.nicetcm.nibsplus.broker.msg.model.TFnInoutOrgSpec;
import java.util.List;
import java.util.Map;

public class TFnInoutOrgSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_FN_INOUT_ORG
     *
     * @mbggenerated Mon Jul 28 16:08:07 KST 2014
     */
    public String countBySpec(TFnInoutOrgSpec spec) {
        BEGIN();
        SELECT("count(*)");
        FROM("OP.T_FN_INOUT_ORG");
        applyWhere(spec, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_FN_INOUT_ORG
     *
     * @mbggenerated Mon Jul 28 16:08:07 KST 2014
     */
    public String deleteBySpec(TFnInoutOrgSpec spec) {
        BEGIN();
        DELETE_FROM("OP.T_FN_INOUT_ORG");
        applyWhere(spec, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_FN_INOUT_ORG
     *
     * @mbggenerated Mon Jul 28 16:08:07 KST 2014
     */
    public String insertSelective(TFnInoutOrg record) {
        BEGIN();
        INSERT_INTO("OP.T_FN_INOUT_ORG");
        
        if (record.getOrgCd() != null) {
            VALUES("ORG_CD", "#{orgCd,jdbcType=VARCHAR}");
        }
        
        if (record.getBranchCd() != null) {
            VALUES("BRANCH_CD", "#{branchCd,jdbcType=VARCHAR}");
        }
        
        if (record.getMacNo() != null) {
            VALUES("MAC_NO", "#{macNo,jdbcType=VARCHAR}");
        }
        
        if (record.getDealDate() != null) {
            VALUES("DEAL_DATE", "#{dealDate,jdbcType=VARCHAR}");
        }
        
        if (record.getSeq() != null) {
            VALUES("SEQ", "#{seq,jdbcType=VARCHAR}");
        }
        
        if (record.getMemberId() != null) {
            VALUES("MEMBER_ID", "#{memberId,jdbcType=VARCHAR}");
        }
        
        if (record.getDealTime() != null) {
            VALUES("DEAL_TIME", "#{dealTime,jdbcType=VARCHAR}");
        }
        
        if (record.getInoutGb() != null) {
            VALUES("INOUT_GB", "#{inoutGb,jdbcType=VARCHAR}");
        }
        
        if (record.getDetailGb() != null) {
            VALUES("DETAIL_GB", "#{detailGb,jdbcType=VARCHAR}");
        }
        
        if (record.getInKjGb() != null) {
            VALUES("IN_KJ_GB", "#{inKjGb,jdbcType=VARCHAR}");
        }
        
        if (record.getCw15Cnt() != null) {
            VALUES("CW15_CNT", "#{cw15Cnt,jdbcType=DECIMAL}");
        }
        
        if (record.getCw54Cnt() != null) {
            VALUES("CW54_CNT", "#{cw54Cnt,jdbcType=DECIMAL}");
        }
        
        if (record.getCw14Cnt() != null) {
            VALUES("CW14_CNT", "#{cw14Cnt,jdbcType=DECIMAL}");
        }
        
        if (record.getCw53Cnt() != null) {
            VALUES("CW53_CNT", "#{cw53Cnt,jdbcType=DECIMAL}");
        }
        
        if (record.getCw13Cnt() != null) {
            VALUES("CW13_CNT", "#{cw13Cnt,jdbcType=DECIMAL}");
        }
        
        if (record.getCw52Cnt() != null) {
            VALUES("CW52_CNT", "#{cw52Cnt,jdbcType=DECIMAL}");
        }
        
        if (record.getCw12Cnt() != null) {
            VALUES("CW12_CNT", "#{cw12Cnt,jdbcType=DECIMAL}");
        }
        
        if (record.getCw51Cnt() != null) {
            VALUES("CW51_CNT", "#{cw51Cnt,jdbcType=DECIMAL}");
        }
        
        if (record.getCw11Cnt() != null) {
            VALUES("CW11_CNT", "#{cw11Cnt,jdbcType=DECIMAL}");
        }
        
        if (record.getBoxCashAmt() != null) {
            VALUES("BOX_CASH_AMT", "#{boxCashAmt,jdbcType=DECIMAL}");
        }
        
        if (record.getCoinAmt() != null) {
            VALUES("COIN_AMT", "#{coinAmt,jdbcType=DECIMAL}");
        }
        
        if (record.getCheckAmt() != null) {
            VALUES("CHECK_AMT", "#{checkAmt,jdbcType=DECIMAL}");
        }
        
        if (record.getSelfTicketAmt() != null) {
            VALUES("SELF_TICKET_AMT", "#{selfTicketAmt,jdbcType=DECIMAL}");
        }
        
        if (record.getEtcTicketAmt() != null) {
            VALUES("ETC_TICKET_AMT", "#{etcTicketAmt,jdbcType=DECIMAL}");
        }
        
        if (record.getCuponAmt() != null) {
            VALUES("CUPON_AMT", "#{cuponAmt,jdbcType=DECIMAL}");
        }
        
        if (record.getEtcInAmt() != null) {
            VALUES("ETC_IN_AMT", "#{etcInAmt,jdbcType=DECIMAL}");
        }
        
        if (record.getBoxAmt() != null) {
            VALUES("BOX_AMT", "#{boxAmt,jdbcType=DECIMAL}");
        }
        
        if (record.getUpdateDate() != null) {
            VALUES("UPDATE_DATE", "#{updateDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdateUid() != null) {
            VALUES("UPDATE_UID", "#{updateUid,jdbcType=VARCHAR}");
        }
        
        if (record.getCloseYn() != null) {
            VALUES("CLOSE_YN", "#{closeYn,jdbcType=VARCHAR}");
        }
        
        if (record.getHw16Cnt() != null) {
            VALUES("HW16_CNT", "#{hw16Cnt,jdbcType=DECIMAL}");
        }
        
        if (record.getHw55Cnt() != null) {
            VALUES("HW55_CNT", "#{hw55Cnt,jdbcType=DECIMAL}");
        }
        
        if (record.getHw35Cnt() != null) {
            VALUES("HW35_CNT", "#{hw35Cnt,jdbcType=DECIMAL}");
        }
        
        if (record.getHw15Cnt() != null) {
            VALUES("HW15_CNT", "#{hw15Cnt,jdbcType=DECIMAL}");
        }
        
        if (record.getCheckNonfixedCnt() != null) {
            VALUES("CHECK_NONFIXED_CNT", "#{checkNonfixedCnt,jdbcType=DECIMAL}");
        }
        
        if (record.getCheckNonfixedAmt() != null) {
            VALUES("CHECK_NONFIXED_AMT", "#{checkNonfixedAmt,jdbcType=DECIMAL}");
        }
        
        if (record.getCashCuponAmt() != null) {
            VALUES("CASH_CUPON_AMT", "#{cashCuponAmt,jdbcType=DECIMAL}");
        }
        
        if (record.getBaseOutType() != null) {
            VALUES("BASE_OUT_TYPE", "#{baseOutType,jdbcType=VARCHAR}");
        }
        
        if (record.getOwnTradeDate() != null) {
            VALUES("OWN_TRADE_DATE", "#{ownTradeDate,jdbcType=VARCHAR}");
        }
        
        if (record.getOwnTradeSeq() != null) {
            VALUES("OWN_TRADE_SEQ", "#{ownTradeSeq,jdbcType=VARCHAR}");
        }
        
        if (record.getOwnTradeMacNo() != null) {
            VALUES("OWN_TRADE_MAC_NO", "#{ownTradeMacNo,jdbcType=VARCHAR}");
        }
        
        if (record.getGoodTeleNo() != null) {
            VALUES("GOOD_TELE_NO", "#{goodTeleNo,jdbcType=VARCHAR}");
        }
        
        if (record.getRateCuponCnt() != null) {
            VALUES("RATE_CUPON_CNT", "#{rateCuponCnt,jdbcType=DECIMAL}");
        }
        
        if (record.getTicketAmt() != null) {
            VALUES("TICKET_AMT", "#{ticketAmt,jdbcType=DECIMAL}");
        }
        
        if (record.getDollarAmt() != null) {
            VALUES("DOLLAR_AMT", "#{dollarAmt,jdbcType=DECIMAL}");
        }
        
        if (record.getEuroAmt() != null) {
            VALUES("EURO_AMT", "#{euroAmt,jdbcType=DECIMAL}");
        }
        
        if (record.getYenAmt() != null) {
            VALUES("YEN_AMT", "#{yenAmt,jdbcType=DECIMAL}");
        }
        
        if (record.getYuanAmt() != null) {
            VALUES("YUAN_AMT", "#{yuanAmt,jdbcType=DECIMAL}");
        }
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_FN_INOUT_ORG
     *
     * @mbggenerated Mon Jul 28 16:08:07 KST 2014
     */
    public String selectBySpec(TFnInoutOrgSpec spec) {
        BEGIN();
        if (spec != null && spec.isDistinct()) {
            SELECT_DISTINCT("ORG_CD");
        } else {
            SELECT("ORG_CD");
        }
        SELECT("BRANCH_CD");
        SELECT("MAC_NO");
        SELECT("DEAL_DATE");
        SELECT("SEQ");
        SELECT("MEMBER_ID");
        SELECT("DEAL_TIME");
        SELECT("INOUT_GB");
        SELECT("DETAIL_GB");
        SELECT("IN_KJ_GB");
        SELECT("CW15_CNT");
        SELECT("CW54_CNT");
        SELECT("CW14_CNT");
        SELECT("CW53_CNT");
        SELECT("CW13_CNT");
        SELECT("CW52_CNT");
        SELECT("CW12_CNT");
        SELECT("CW51_CNT");
        SELECT("CW11_CNT");
        SELECT("BOX_CASH_AMT");
        SELECT("COIN_AMT");
        SELECT("CHECK_AMT");
        SELECT("SELF_TICKET_AMT");
        SELECT("ETC_TICKET_AMT");
        SELECT("CUPON_AMT");
        SELECT("ETC_IN_AMT");
        SELECT("BOX_AMT");
        SELECT("UPDATE_DATE");
        SELECT("UPDATE_UID");
        SELECT("CLOSE_YN");
        SELECT("HW16_CNT");
        SELECT("HW55_CNT");
        SELECT("HW35_CNT");
        SELECT("HW15_CNT");
        SELECT("CHECK_NONFIXED_CNT");
        SELECT("CHECK_NONFIXED_AMT");
        SELECT("CASH_CUPON_AMT");
        SELECT("BASE_OUT_TYPE");
        SELECT("OWN_TRADE_DATE");
        SELECT("OWN_TRADE_SEQ");
        SELECT("OWN_TRADE_MAC_NO");
        SELECT("GOOD_TELE_NO");
        SELECT("RATE_CUPON_CNT");
        SELECT("TICKET_AMT");
        SELECT("DOLLAR_AMT");
        SELECT("EURO_AMT");
        SELECT("YEN_AMT");
        SELECT("YUAN_AMT");
        FROM("OP.T_FN_INOUT_ORG");
        applyWhere(spec, false);
        
        if (spec != null && spec.getOrderByClause() != null) {
            ORDER_BY(spec.getOrderByClause());
        }
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_FN_INOUT_ORG
     *
     * @mbggenerated Mon Jul 28 16:08:07 KST 2014
     */
    public String updateBySpecSelective(Map<String, Object> parameter) {
        TFnInoutOrg record = (TFnInoutOrg) parameter.get("record");
        TFnInoutOrgSpec spec = (TFnInoutOrgSpec) parameter.get("spec");
        
        BEGIN();
        UPDATE("OP.T_FN_INOUT_ORG");
        
        if (record.getOrgCd() != null) {
            SET("ORG_CD = #{record.orgCd,jdbcType=VARCHAR}");
        }
        
        if (record.getBranchCd() != null) {
            SET("BRANCH_CD = #{record.branchCd,jdbcType=VARCHAR}");
        }
        
        if (record.getMacNo() != null) {
            SET("MAC_NO = #{record.macNo,jdbcType=VARCHAR}");
        }
        
        if (record.getDealDate() != null) {
            SET("DEAL_DATE = #{record.dealDate,jdbcType=VARCHAR}");
        }
        
        if (record.getSeq() != null) {
            SET("SEQ = #{record.seq,jdbcType=VARCHAR}");
        }
        
        if (record.getMemberId() != null) {
            SET("MEMBER_ID = #{record.memberId,jdbcType=VARCHAR}");
        }
        
        if (record.getDealTime() != null) {
            SET("DEAL_TIME = #{record.dealTime,jdbcType=VARCHAR}");
        }
        
        if (record.getInoutGb() != null) {
            SET("INOUT_GB = #{record.inoutGb,jdbcType=VARCHAR}");
        }
        
        if (record.getDetailGb() != null) {
            SET("DETAIL_GB = #{record.detailGb,jdbcType=VARCHAR}");
        }
        
        if (record.getInKjGb() != null) {
            SET("IN_KJ_GB = #{record.inKjGb,jdbcType=VARCHAR}");
        }
        
        if (record.getCw15Cnt() != null) {
            SET("CW15_CNT = #{record.cw15Cnt,jdbcType=DECIMAL}");
        }
        
        if (record.getCw54Cnt() != null) {
            SET("CW54_CNT = #{record.cw54Cnt,jdbcType=DECIMAL}");
        }
        
        if (record.getCw14Cnt() != null) {
            SET("CW14_CNT = #{record.cw14Cnt,jdbcType=DECIMAL}");
        }
        
        if (record.getCw53Cnt() != null) {
            SET("CW53_CNT = #{record.cw53Cnt,jdbcType=DECIMAL}");
        }
        
        if (record.getCw13Cnt() != null) {
            SET("CW13_CNT = #{record.cw13Cnt,jdbcType=DECIMAL}");
        }
        
        if (record.getCw52Cnt() != null) {
            SET("CW52_CNT = #{record.cw52Cnt,jdbcType=DECIMAL}");
        }
        
        if (record.getCw12Cnt() != null) {
            SET("CW12_CNT = #{record.cw12Cnt,jdbcType=DECIMAL}");
        }
        
        if (record.getCw51Cnt() != null) {
            SET("CW51_CNT = #{record.cw51Cnt,jdbcType=DECIMAL}");
        }
        
        if (record.getCw11Cnt() != null) {
            SET("CW11_CNT = #{record.cw11Cnt,jdbcType=DECIMAL}");
        }
        
        if (record.getBoxCashAmt() != null) {
            SET("BOX_CASH_AMT = #{record.boxCashAmt,jdbcType=DECIMAL}");
        }
        
        if (record.getCoinAmt() != null) {
            SET("COIN_AMT = #{record.coinAmt,jdbcType=DECIMAL}");
        }
        
        if (record.getCheckAmt() != null) {
            SET("CHECK_AMT = #{record.checkAmt,jdbcType=DECIMAL}");
        }
        
        if (record.getSelfTicketAmt() != null) {
            SET("SELF_TICKET_AMT = #{record.selfTicketAmt,jdbcType=DECIMAL}");
        }
        
        if (record.getEtcTicketAmt() != null) {
            SET("ETC_TICKET_AMT = #{record.etcTicketAmt,jdbcType=DECIMAL}");
        }
        
        if (record.getCuponAmt() != null) {
            SET("CUPON_AMT = #{record.cuponAmt,jdbcType=DECIMAL}");
        }
        
        if (record.getEtcInAmt() != null) {
            SET("ETC_IN_AMT = #{record.etcInAmt,jdbcType=DECIMAL}");
        }
        
        if (record.getBoxAmt() != null) {
            SET("BOX_AMT = #{record.boxAmt,jdbcType=DECIMAL}");
        }
        
        if (record.getUpdateDate() != null) {
            SET("UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdateUid() != null) {
            SET("UPDATE_UID = #{record.updateUid,jdbcType=VARCHAR}");
        }
        
        if (record.getCloseYn() != null) {
            SET("CLOSE_YN = #{record.closeYn,jdbcType=VARCHAR}");
        }
        
        if (record.getHw16Cnt() != null) {
            SET("HW16_CNT = #{record.hw16Cnt,jdbcType=DECIMAL}");
        }
        
        if (record.getHw55Cnt() != null) {
            SET("HW55_CNT = #{record.hw55Cnt,jdbcType=DECIMAL}");
        }
        
        if (record.getHw35Cnt() != null) {
            SET("HW35_CNT = #{record.hw35Cnt,jdbcType=DECIMAL}");
        }
        
        if (record.getHw15Cnt() != null) {
            SET("HW15_CNT = #{record.hw15Cnt,jdbcType=DECIMAL}");
        }
        
        if (record.getCheckNonfixedCnt() != null) {
            SET("CHECK_NONFIXED_CNT = #{record.checkNonfixedCnt,jdbcType=DECIMAL}");
        }
        
        if (record.getCheckNonfixedAmt() != null) {
            SET("CHECK_NONFIXED_AMT = #{record.checkNonfixedAmt,jdbcType=DECIMAL}");
        }
        
        if (record.getCashCuponAmt() != null) {
            SET("CASH_CUPON_AMT = #{record.cashCuponAmt,jdbcType=DECIMAL}");
        }
        
        if (record.getBaseOutType() != null) {
            SET("BASE_OUT_TYPE = #{record.baseOutType,jdbcType=VARCHAR}");
        }
        
        if (record.getOwnTradeDate() != null) {
            SET("OWN_TRADE_DATE = #{record.ownTradeDate,jdbcType=VARCHAR}");
        }
        
        if (record.getOwnTradeSeq() != null) {
            SET("OWN_TRADE_SEQ = #{record.ownTradeSeq,jdbcType=VARCHAR}");
        }
        
        if (record.getOwnTradeMacNo() != null) {
            SET("OWN_TRADE_MAC_NO = #{record.ownTradeMacNo,jdbcType=VARCHAR}");
        }
        
        if (record.getGoodTeleNo() != null) {
            SET("GOOD_TELE_NO = #{record.goodTeleNo,jdbcType=VARCHAR}");
        }
        
        if (record.getRateCuponCnt() != null) {
            SET("RATE_CUPON_CNT = #{record.rateCuponCnt,jdbcType=DECIMAL}");
        }
        
        if (record.getTicketAmt() != null) {
            SET("TICKET_AMT = #{record.ticketAmt,jdbcType=DECIMAL}");
        }
        
        if (record.getDollarAmt() != null) {
            SET("DOLLAR_AMT = #{record.dollarAmt,jdbcType=DECIMAL}");
        }
        
        if (record.getEuroAmt() != null) {
            SET("EURO_AMT = #{record.euroAmt,jdbcType=DECIMAL}");
        }
        
        if (record.getYenAmt() != null) {
            SET("YEN_AMT = #{record.yenAmt,jdbcType=DECIMAL}");
        }
        
        if (record.getYuanAmt() != null) {
            SET("YUAN_AMT = #{record.yuanAmt,jdbcType=DECIMAL}");
        }
        
        applyWhere(spec, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_FN_INOUT_ORG
     *
     * @mbggenerated Mon Jul 28 16:08:07 KST 2014
     */
    public String updateBySpec(Map<String, Object> parameter) {
        BEGIN();
        UPDATE("OP.T_FN_INOUT_ORG");
        
        SET("ORG_CD = #{record.orgCd,jdbcType=VARCHAR}");
        SET("BRANCH_CD = #{record.branchCd,jdbcType=VARCHAR}");
        SET("MAC_NO = #{record.macNo,jdbcType=VARCHAR}");
        SET("DEAL_DATE = #{record.dealDate,jdbcType=VARCHAR}");
        SET("SEQ = #{record.seq,jdbcType=VARCHAR}");
        SET("MEMBER_ID = #{record.memberId,jdbcType=VARCHAR}");
        SET("DEAL_TIME = #{record.dealTime,jdbcType=VARCHAR}");
        SET("INOUT_GB = #{record.inoutGb,jdbcType=VARCHAR}");
        SET("DETAIL_GB = #{record.detailGb,jdbcType=VARCHAR}");
        SET("IN_KJ_GB = #{record.inKjGb,jdbcType=VARCHAR}");
        SET("CW15_CNT = #{record.cw15Cnt,jdbcType=DECIMAL}");
        SET("CW54_CNT = #{record.cw54Cnt,jdbcType=DECIMAL}");
        SET("CW14_CNT = #{record.cw14Cnt,jdbcType=DECIMAL}");
        SET("CW53_CNT = #{record.cw53Cnt,jdbcType=DECIMAL}");
        SET("CW13_CNT = #{record.cw13Cnt,jdbcType=DECIMAL}");
        SET("CW52_CNT = #{record.cw52Cnt,jdbcType=DECIMAL}");
        SET("CW12_CNT = #{record.cw12Cnt,jdbcType=DECIMAL}");
        SET("CW51_CNT = #{record.cw51Cnt,jdbcType=DECIMAL}");
        SET("CW11_CNT = #{record.cw11Cnt,jdbcType=DECIMAL}");
        SET("BOX_CASH_AMT = #{record.boxCashAmt,jdbcType=DECIMAL}");
        SET("COIN_AMT = #{record.coinAmt,jdbcType=DECIMAL}");
        SET("CHECK_AMT = #{record.checkAmt,jdbcType=DECIMAL}");
        SET("SELF_TICKET_AMT = #{record.selfTicketAmt,jdbcType=DECIMAL}");
        SET("ETC_TICKET_AMT = #{record.etcTicketAmt,jdbcType=DECIMAL}");
        SET("CUPON_AMT = #{record.cuponAmt,jdbcType=DECIMAL}");
        SET("ETC_IN_AMT = #{record.etcInAmt,jdbcType=DECIMAL}");
        SET("BOX_AMT = #{record.boxAmt,jdbcType=DECIMAL}");
        SET("UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP}");
        SET("UPDATE_UID = #{record.updateUid,jdbcType=VARCHAR}");
        SET("CLOSE_YN = #{record.closeYn,jdbcType=VARCHAR}");
        SET("HW16_CNT = #{record.hw16Cnt,jdbcType=DECIMAL}");
        SET("HW55_CNT = #{record.hw55Cnt,jdbcType=DECIMAL}");
        SET("HW35_CNT = #{record.hw35Cnt,jdbcType=DECIMAL}");
        SET("HW15_CNT = #{record.hw15Cnt,jdbcType=DECIMAL}");
        SET("CHECK_NONFIXED_CNT = #{record.checkNonfixedCnt,jdbcType=DECIMAL}");
        SET("CHECK_NONFIXED_AMT = #{record.checkNonfixedAmt,jdbcType=DECIMAL}");
        SET("CASH_CUPON_AMT = #{record.cashCuponAmt,jdbcType=DECIMAL}");
        SET("BASE_OUT_TYPE = #{record.baseOutType,jdbcType=VARCHAR}");
        SET("OWN_TRADE_DATE = #{record.ownTradeDate,jdbcType=VARCHAR}");
        SET("OWN_TRADE_SEQ = #{record.ownTradeSeq,jdbcType=VARCHAR}");
        SET("OWN_TRADE_MAC_NO = #{record.ownTradeMacNo,jdbcType=VARCHAR}");
        SET("GOOD_TELE_NO = #{record.goodTeleNo,jdbcType=VARCHAR}");
        SET("RATE_CUPON_CNT = #{record.rateCuponCnt,jdbcType=DECIMAL}");
        SET("TICKET_AMT = #{record.ticketAmt,jdbcType=DECIMAL}");
        SET("DOLLAR_AMT = #{record.dollarAmt,jdbcType=DECIMAL}");
        SET("EURO_AMT = #{record.euroAmt,jdbcType=DECIMAL}");
        SET("YEN_AMT = #{record.yenAmt,jdbcType=DECIMAL}");
        SET("YUAN_AMT = #{record.yuanAmt,jdbcType=DECIMAL}");
        
        TFnInoutOrgSpec spec = (TFnInoutOrgSpec) parameter.get("spec");
        applyWhere(spec, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_FN_INOUT_ORG
     *
     * @mbggenerated Mon Jul 28 16:08:07 KST 2014
     */
    public String updateByPrimaryKeySelective(TFnInoutOrg record) {
        BEGIN();
        UPDATE("OP.T_FN_INOUT_ORG");
        
        if (record.getMemberId() != null) {
            SET("MEMBER_ID = #{memberId,jdbcType=VARCHAR}");
        }
        
        if (record.getDealTime() != null) {
            SET("DEAL_TIME = #{dealTime,jdbcType=VARCHAR}");
        }
        
        if (record.getInoutGb() != null) {
            SET("INOUT_GB = #{inoutGb,jdbcType=VARCHAR}");
        }
        
        if (record.getDetailGb() != null) {
            SET("DETAIL_GB = #{detailGb,jdbcType=VARCHAR}");
        }
        
        if (record.getInKjGb() != null) {
            SET("IN_KJ_GB = #{inKjGb,jdbcType=VARCHAR}");
        }
        
        if (record.getCw15Cnt() != null) {
            SET("CW15_CNT = #{cw15Cnt,jdbcType=DECIMAL}");
        }
        
        if (record.getCw54Cnt() != null) {
            SET("CW54_CNT = #{cw54Cnt,jdbcType=DECIMAL}");
        }
        
        if (record.getCw14Cnt() != null) {
            SET("CW14_CNT = #{cw14Cnt,jdbcType=DECIMAL}");
        }
        
        if (record.getCw53Cnt() != null) {
            SET("CW53_CNT = #{cw53Cnt,jdbcType=DECIMAL}");
        }
        
        if (record.getCw13Cnt() != null) {
            SET("CW13_CNT = #{cw13Cnt,jdbcType=DECIMAL}");
        }
        
        if (record.getCw52Cnt() != null) {
            SET("CW52_CNT = #{cw52Cnt,jdbcType=DECIMAL}");
        }
        
        if (record.getCw12Cnt() != null) {
            SET("CW12_CNT = #{cw12Cnt,jdbcType=DECIMAL}");
        }
        
        if (record.getCw51Cnt() != null) {
            SET("CW51_CNT = #{cw51Cnt,jdbcType=DECIMAL}");
        }
        
        if (record.getCw11Cnt() != null) {
            SET("CW11_CNT = #{cw11Cnt,jdbcType=DECIMAL}");
        }
        
        if (record.getBoxCashAmt() != null) {
            SET("BOX_CASH_AMT = #{boxCashAmt,jdbcType=DECIMAL}");
        }
        
        if (record.getCoinAmt() != null) {
            SET("COIN_AMT = #{coinAmt,jdbcType=DECIMAL}");
        }
        
        if (record.getCheckAmt() != null) {
            SET("CHECK_AMT = #{checkAmt,jdbcType=DECIMAL}");
        }
        
        if (record.getSelfTicketAmt() != null) {
            SET("SELF_TICKET_AMT = #{selfTicketAmt,jdbcType=DECIMAL}");
        }
        
        if (record.getEtcTicketAmt() != null) {
            SET("ETC_TICKET_AMT = #{etcTicketAmt,jdbcType=DECIMAL}");
        }
        
        if (record.getCuponAmt() != null) {
            SET("CUPON_AMT = #{cuponAmt,jdbcType=DECIMAL}");
        }
        
        if (record.getEtcInAmt() != null) {
            SET("ETC_IN_AMT = #{etcInAmt,jdbcType=DECIMAL}");
        }
        
        if (record.getBoxAmt() != null) {
            SET("BOX_AMT = #{boxAmt,jdbcType=DECIMAL}");
        }
        
        if (record.getUpdateDate() != null) {
            SET("UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdateUid() != null) {
            SET("UPDATE_UID = #{updateUid,jdbcType=VARCHAR}");
        }
        
        if (record.getCloseYn() != null) {
            SET("CLOSE_YN = #{closeYn,jdbcType=VARCHAR}");
        }
        
        if (record.getHw16Cnt() != null) {
            SET("HW16_CNT = #{hw16Cnt,jdbcType=DECIMAL}");
        }
        
        if (record.getHw55Cnt() != null) {
            SET("HW55_CNT = #{hw55Cnt,jdbcType=DECIMAL}");
        }
        
        if (record.getHw35Cnt() != null) {
            SET("HW35_CNT = #{hw35Cnt,jdbcType=DECIMAL}");
        }
        
        if (record.getHw15Cnt() != null) {
            SET("HW15_CNT = #{hw15Cnt,jdbcType=DECIMAL}");
        }
        
        if (record.getCheckNonfixedCnt() != null) {
            SET("CHECK_NONFIXED_CNT = #{checkNonfixedCnt,jdbcType=DECIMAL}");
        }
        
        if (record.getCheckNonfixedAmt() != null) {
            SET("CHECK_NONFIXED_AMT = #{checkNonfixedAmt,jdbcType=DECIMAL}");
        }
        
        if (record.getCashCuponAmt() != null) {
            SET("CASH_CUPON_AMT = #{cashCuponAmt,jdbcType=DECIMAL}");
        }
        
        if (record.getBaseOutType() != null) {
            SET("BASE_OUT_TYPE = #{baseOutType,jdbcType=VARCHAR}");
        }
        
        if (record.getOwnTradeDate() != null) {
            SET("OWN_TRADE_DATE = #{ownTradeDate,jdbcType=VARCHAR}");
        }
        
        if (record.getOwnTradeSeq() != null) {
            SET("OWN_TRADE_SEQ = #{ownTradeSeq,jdbcType=VARCHAR}");
        }
        
        if (record.getOwnTradeMacNo() != null) {
            SET("OWN_TRADE_MAC_NO = #{ownTradeMacNo,jdbcType=VARCHAR}");
        }
        
        if (record.getGoodTeleNo() != null) {
            SET("GOOD_TELE_NO = #{goodTeleNo,jdbcType=VARCHAR}");
        }
        
        if (record.getRateCuponCnt() != null) {
            SET("RATE_CUPON_CNT = #{rateCuponCnt,jdbcType=DECIMAL}");
        }
        
        if (record.getTicketAmt() != null) {
            SET("TICKET_AMT = #{ticketAmt,jdbcType=DECIMAL}");
        }
        
        if (record.getDollarAmt() != null) {
            SET("DOLLAR_AMT = #{dollarAmt,jdbcType=DECIMAL}");
        }
        
        if (record.getEuroAmt() != null) {
            SET("EURO_AMT = #{euroAmt,jdbcType=DECIMAL}");
        }
        
        if (record.getYenAmt() != null) {
            SET("YEN_AMT = #{yenAmt,jdbcType=DECIMAL}");
        }
        
        if (record.getYuanAmt() != null) {
            SET("YUAN_AMT = #{yuanAmt,jdbcType=DECIMAL}");
        }
        
        WHERE("ORG_CD = #{orgCd,jdbcType=VARCHAR}");
        WHERE("BRANCH_CD = #{branchCd,jdbcType=VARCHAR}");
        WHERE("MAC_NO = #{macNo,jdbcType=VARCHAR}");
        WHERE("DEAL_DATE = #{dealDate,jdbcType=VARCHAR}");
        WHERE("SEQ = #{seq,jdbcType=VARCHAR}");
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_FN_INOUT_ORG
     *
     * @mbggenerated Mon Jul 28 16:08:07 KST 2014
     */
    protected void applyWhere(TFnInoutOrgSpec spec, boolean includeSpecPhrase) {
        if (spec == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeSpecPhrase) {
            parmPhrase1 = "%s #{spec.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{spec.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{spec.oredCriteria[%d].allCriteria[%d].value} and #{spec.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{spec.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{spec.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{spec.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{spec.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = spec.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            WHERE(sb.toString());
        }
    }
}