package com.nicetcm.nibsplus.broker.msg.mapper;

import com.nicetcm.nibsplus.broker.msg.model.TCtErrorCall;
import com.nicetcm.nibsplus.broker.msg.model.TCtErrorCallKey;
import com.nicetcm.nibsplus.broker.msg.model.TCtErrorCallSpec;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface TCtErrorCallMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_ERROR_CALL
     *
     * @mbggenerated Wed Nov 26 18:06:13 KST 2014
     */
    @SelectProvider(type=TCtErrorCallSqlProvider.class, method="countBySpec")
    int countBySpec(TCtErrorCallSpec spec);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_ERROR_CALL
     *
     * @mbggenerated Wed Nov 26 18:06:13 KST 2014
     */
    @DeleteProvider(type=TCtErrorCallSqlProvider.class, method="deleteBySpec")
    int deleteBySpec(TCtErrorCallSpec spec);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_ERROR_CALL
     *
     * @mbggenerated Wed Nov 26 18:06:13 KST 2014
     */
    @Delete({
        "delete from OP.T_CT_ERROR_CALL",
        "where ERROR_NO = #{errorNo,jdbcType=VARCHAR}",
          "and CREATE_DATE = #{createDate,jdbcType=VARCHAR}",
          "and CREATE_TIME = #{createTime,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(TCtErrorCallKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_ERROR_CALL
     *
     * @mbggenerated Wed Nov 26 18:06:13 KST 2014
     */
    @Insert({
        "insert into OP.T_CT_ERROR_CALL (ERROR_NO, CREATE_DATE, ",
        "CREATE_TIME, ARRIVAL_DATE, ",
        "ARRIVAL_TIME, ARRIVAL_PDA_DATE, ",
        "ARRIVAL_PDA_TIME, ARRIVAL_XPOS, ",
        "ARRIVAL_YPOS, ARRIVAL_SIDO, ",
        "ARRIVAL_GUGUN, ARRIVAL_DONG, ",
        "ARRIVAL_TYPE, ARRIVAL_UID, ",
        "ARRIVAL_NM, REG_DT, ",
        "REG_ID, UPDATE_DATE, ",
        "UPDATE_UID)",
        "values (#{errorNo,jdbcType=VARCHAR}, #{createDate,jdbcType=VARCHAR}, ",
        "#{createTime,jdbcType=VARCHAR}, #{arrivalDate,jdbcType=VARCHAR}, ",
        "#{arrivalTime,jdbcType=VARCHAR}, #{arrivalPdaDate,jdbcType=VARCHAR}, ",
        "#{arrivalPdaTime,jdbcType=VARCHAR}, #{arrivalXpos,jdbcType=VARCHAR}, ",
        "#{arrivalYpos,jdbcType=VARCHAR}, #{arrivalSido,jdbcType=VARCHAR}, ",
        "#{arrivalGugun,jdbcType=VARCHAR}, #{arrivalDong,jdbcType=VARCHAR}, ",
        "#{arrivalType,jdbcType=VARCHAR}, #{arrivalUid,jdbcType=VARCHAR}, ",
        "#{arrivalNm,jdbcType=VARCHAR}, #{regDt,jdbcType=TIMESTAMP}, ",
        "#{regId,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP}, ",
        "#{updateUid,jdbcType=VARCHAR})"
    })
    int insert(TCtErrorCall record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_ERROR_CALL
     *
     * @mbggenerated Wed Nov 26 18:06:13 KST 2014
     */
    @InsertProvider(type=TCtErrorCallSqlProvider.class, method="insertSelective")
    int insertSelective(TCtErrorCall record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_ERROR_CALL
     *
     * @mbggenerated Wed Nov 26 18:06:13 KST 2014
     */
    @SelectProvider(type=TCtErrorCallSqlProvider.class, method="selectBySpec")
    @Results({
        @Result(column="ERROR_NO", property="errorNo", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="CREATE_DATE", property="createDate", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="CREATE_TIME", property="createTime", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="ARRIVAL_DATE", property="arrivalDate", jdbcType=JdbcType.VARCHAR),
        @Result(column="ARRIVAL_TIME", property="arrivalTime", jdbcType=JdbcType.VARCHAR),
        @Result(column="ARRIVAL_PDA_DATE", property="arrivalPdaDate", jdbcType=JdbcType.VARCHAR),
        @Result(column="ARRIVAL_PDA_TIME", property="arrivalPdaTime", jdbcType=JdbcType.VARCHAR),
        @Result(column="ARRIVAL_XPOS", property="arrivalXpos", jdbcType=JdbcType.VARCHAR),
        @Result(column="ARRIVAL_YPOS", property="arrivalYpos", jdbcType=JdbcType.VARCHAR),
        @Result(column="ARRIVAL_SIDO", property="arrivalSido", jdbcType=JdbcType.VARCHAR),
        @Result(column="ARRIVAL_GUGUN", property="arrivalGugun", jdbcType=JdbcType.VARCHAR),
        @Result(column="ARRIVAL_DONG", property="arrivalDong", jdbcType=JdbcType.VARCHAR),
        @Result(column="ARRIVAL_TYPE", property="arrivalType", jdbcType=JdbcType.VARCHAR),
        @Result(column="ARRIVAL_UID", property="arrivalUid", jdbcType=JdbcType.VARCHAR),
        @Result(column="ARRIVAL_NM", property="arrivalNm", jdbcType=JdbcType.VARCHAR),
        @Result(column="REG_DT", property="regDt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="REG_ID", property="regId", jdbcType=JdbcType.VARCHAR),
        @Result(column="UPDATE_DATE", property="updateDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="UPDATE_UID", property="updateUid", jdbcType=JdbcType.VARCHAR)
    })
    List<TCtErrorCall> selectBySpec(TCtErrorCallSpec spec);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_ERROR_CALL
     *
     * @mbggenerated Wed Nov 26 18:06:13 KST 2014
     */
    @Select({
        "select",
        "ERROR_NO, CREATE_DATE, CREATE_TIME, ARRIVAL_DATE, ARRIVAL_TIME, ARRIVAL_PDA_DATE, ",
        "ARRIVAL_PDA_TIME, ARRIVAL_XPOS, ARRIVAL_YPOS, ARRIVAL_SIDO, ARRIVAL_GUGUN, ARRIVAL_DONG, ",
        "ARRIVAL_TYPE, ARRIVAL_UID, ARRIVAL_NM, REG_DT, REG_ID, UPDATE_DATE, UPDATE_UID",
        "from OP.T_CT_ERROR_CALL",
        "where ERROR_NO = #{errorNo,jdbcType=VARCHAR}",
          "and CREATE_DATE = #{createDate,jdbcType=VARCHAR}",
          "and CREATE_TIME = #{createTime,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="ERROR_NO", property="errorNo", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="CREATE_DATE", property="createDate", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="CREATE_TIME", property="createTime", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="ARRIVAL_DATE", property="arrivalDate", jdbcType=JdbcType.VARCHAR),
        @Result(column="ARRIVAL_TIME", property="arrivalTime", jdbcType=JdbcType.VARCHAR),
        @Result(column="ARRIVAL_PDA_DATE", property="arrivalPdaDate", jdbcType=JdbcType.VARCHAR),
        @Result(column="ARRIVAL_PDA_TIME", property="arrivalPdaTime", jdbcType=JdbcType.VARCHAR),
        @Result(column="ARRIVAL_XPOS", property="arrivalXpos", jdbcType=JdbcType.VARCHAR),
        @Result(column="ARRIVAL_YPOS", property="arrivalYpos", jdbcType=JdbcType.VARCHAR),
        @Result(column="ARRIVAL_SIDO", property="arrivalSido", jdbcType=JdbcType.VARCHAR),
        @Result(column="ARRIVAL_GUGUN", property="arrivalGugun", jdbcType=JdbcType.VARCHAR),
        @Result(column="ARRIVAL_DONG", property="arrivalDong", jdbcType=JdbcType.VARCHAR),
        @Result(column="ARRIVAL_TYPE", property="arrivalType", jdbcType=JdbcType.VARCHAR),
        @Result(column="ARRIVAL_UID", property="arrivalUid", jdbcType=JdbcType.VARCHAR),
        @Result(column="ARRIVAL_NM", property="arrivalNm", jdbcType=JdbcType.VARCHAR),
        @Result(column="REG_DT", property="regDt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="REG_ID", property="regId", jdbcType=JdbcType.VARCHAR),
        @Result(column="UPDATE_DATE", property="updateDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="UPDATE_UID", property="updateUid", jdbcType=JdbcType.VARCHAR)
    })
    TCtErrorCall selectByPrimaryKey(TCtErrorCallKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_ERROR_CALL
     *
     * @mbggenerated Wed Nov 26 18:06:13 KST 2014
     */
    @UpdateProvider(type=TCtErrorCallSqlProvider.class, method="updateBySpecSelective")
    int updateBySpecSelective(@Param("record") TCtErrorCall record, @Param("spec") TCtErrorCallSpec spec);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_ERROR_CALL
     *
     * @mbggenerated Wed Nov 26 18:06:13 KST 2014
     */
    @UpdateProvider(type=TCtErrorCallSqlProvider.class, method="updateBySpec")
    int updateBySpec(@Param("record") TCtErrorCall record, @Param("spec") TCtErrorCallSpec spec);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_ERROR_CALL
     *
     * @mbggenerated Wed Nov 26 18:06:13 KST 2014
     */
    @UpdateProvider(type=TCtErrorCallSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(TCtErrorCall record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_ERROR_CALL
     *
     * @mbggenerated Wed Nov 26 18:06:13 KST 2014
     */
    @Update({
        "update OP.T_CT_ERROR_CALL",
        "set ARRIVAL_DATE = #{arrivalDate,jdbcType=VARCHAR},",
          "ARRIVAL_TIME = #{arrivalTime,jdbcType=VARCHAR},",
          "ARRIVAL_PDA_DATE = #{arrivalPdaDate,jdbcType=VARCHAR},",
          "ARRIVAL_PDA_TIME = #{arrivalPdaTime,jdbcType=VARCHAR},",
          "ARRIVAL_XPOS = #{arrivalXpos,jdbcType=VARCHAR},",
          "ARRIVAL_YPOS = #{arrivalYpos,jdbcType=VARCHAR},",
          "ARRIVAL_SIDO = #{arrivalSido,jdbcType=VARCHAR},",
          "ARRIVAL_GUGUN = #{arrivalGugun,jdbcType=VARCHAR},",
          "ARRIVAL_DONG = #{arrivalDong,jdbcType=VARCHAR},",
          "ARRIVAL_TYPE = #{arrivalType,jdbcType=VARCHAR},",
          "ARRIVAL_UID = #{arrivalUid,jdbcType=VARCHAR},",
          "ARRIVAL_NM = #{arrivalNm,jdbcType=VARCHAR},",
          "REG_DT = #{regDt,jdbcType=TIMESTAMP},",
          "REG_ID = #{regId,jdbcType=VARCHAR},",
          "UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},",
          "UPDATE_UID = #{updateUid,jdbcType=VARCHAR}",
        "where ERROR_NO = #{errorNo,jdbcType=VARCHAR}",
          "and CREATE_DATE = #{createDate,jdbcType=VARCHAR}",
          "and CREATE_TIME = #{createTime,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(TCtErrorCall record);
}