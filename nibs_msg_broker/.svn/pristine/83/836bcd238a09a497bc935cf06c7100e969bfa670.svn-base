package com.nicetcm.nibsplus.broker.msg.mapper;

import static org.apache.ibatis.jdbc.SqlBuilder.BEGIN;
import static org.apache.ibatis.jdbc.SqlBuilder.DELETE_FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.INSERT_INTO;
import static org.apache.ibatis.jdbc.SqlBuilder.ORDER_BY;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT_DISTINCT;
import static org.apache.ibatis.jdbc.SqlBuilder.SET;
import static org.apache.ibatis.jdbc.SqlBuilder.SQL;
import static org.apache.ibatis.jdbc.SqlBuilder.UPDATE;
import static org.apache.ibatis.jdbc.SqlBuilder.VALUES;
import static org.apache.ibatis.jdbc.SqlBuilder.WHERE;

import com.nicetcm.nibsplus.broker.msg.model.TCmSiteEnvCheck;
import com.nicetcm.nibsplus.broker.msg.model.TCmSiteEnvCheckSpec.Criteria;
import com.nicetcm.nibsplus.broker.msg.model.TCmSiteEnvCheckSpec.Criterion;
import com.nicetcm.nibsplus.broker.msg.model.TCmSiteEnvCheckSpec;
import java.util.List;
import java.util.Map;

public class TCmSiteEnvCheckSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CM_SITE_ENV_CHECK
     *
     * @mbggenerated Thu Jul 31 14:31:00 KST 2014
     */
    public String countBySpec(TCmSiteEnvCheckSpec spec) {
        BEGIN();
        SELECT("count(*)");
        FROM("OP.T_CM_SITE_ENV_CHECK");
        applyWhere(spec, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CM_SITE_ENV_CHECK
     *
     * @mbggenerated Thu Jul 31 14:31:00 KST 2014
     */
    public String deleteBySpec(TCmSiteEnvCheckSpec spec) {
        BEGIN();
        DELETE_FROM("OP.T_CM_SITE_ENV_CHECK");
        applyWhere(spec, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CM_SITE_ENV_CHECK
     *
     * @mbggenerated Thu Jul 31 14:31:00 KST 2014
     */
    public String insertSelective(TCmSiteEnvCheck record) {
        BEGIN();
        INSERT_INTO("OP.T_CM_SITE_ENV_CHECK");
        
        if (record.getCheckDate() != null) {
            VALUES("CHECK_DATE", "#{checkDate,jdbcType=VARCHAR}");
        }
        
        if (record.getOrgCd() != null) {
            VALUES("ORG_CD", "#{orgCd,jdbcType=VARCHAR}");
        }
        
        if (record.getBranchCd() != null) {
            VALUES("BRANCH_CD", "#{branchCd,jdbcType=VARCHAR}");
        }
        
        if (record.getSiteCd() != null) {
            VALUES("SITE_CD", "#{siteCd,jdbcType=VARCHAR}");
        }
        
        if (record.getMacFrontGlassCheck() != null) {
            VALUES("MAC_FRONT_GLASS_CHECK", "#{macFrontGlassCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getMacFrontCheck() != null) {
            VALUES("MAC_FRONT_CHECK", "#{macFrontCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getMacGapCheck() != null) {
            VALUES("MAC_GAP_CHECK", "#{macGapCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getMonitorCheck() != null) {
            VALUES("MONITOR_CHECK", "#{monitorCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getBankbookGapCheck() != null) {
            VALUES("BANKBOOK_GAP_CHECK", "#{bankbookGapCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getCardGapCheck() != null) {
            VALUES("CARD_GAP_CHECK", "#{cardGapCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getInterphoneCheck() != null) {
            VALUES("INTERPHONE_CHECK", "#{interphoneCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getFixCheck() != null) {
            VALUES("FIX_CHECK", "#{fixCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getFloorCheck() != null) {
            VALUES("FLOOR_CHECK", "#{floorCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getInWallCheck() != null) {
            VALUES("IN_WALL_CHECK", "#{inWallCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getOutWallCheck() != null) {
            VALUES("OUT_WALL_CHECK", "#{outWallCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getBoothGlassCheck() != null) {
            VALUES("BOOTH_GLASS_CHECK", "#{boothGlassCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getUpCheck() != null) {
            VALUES("UP_CHECK", "#{upCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getLampCheck() != null) {
            VALUES("LAMP_CHECK", "#{lampCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getStickerCheck() != null) {
            VALUES("STICKER_CHECK", "#{stickerCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getGabageCheck() != null) {
            VALUES("GABAGE_CHECK", "#{gabageCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getOutdoorHeaterCheck() != null) {
            VALUES("OUTDOOR_HEATER_CHECK", "#{outdoorHeaterCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getSiteArroudCheck() != null) {
            VALUES("SITE_ARROUD_CHECK", "#{siteArroudCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getPhotoUrl() != null) {
            VALUES("PHOTO_URL", "#{photoUrl,jdbcType=VARCHAR}");
        }
        
        if (record.getMacFrontGlassPhoto() != null) {
            VALUES("MAC_FRONT_GLASS_PHOTO", "#{macFrontGlassPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getMacFrontPhoto() != null) {
            VALUES("MAC_FRONT_PHOTO", "#{macFrontPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getMacGapPhoto() != null) {
            VALUES("MAC_GAP_PHOTO", "#{macGapPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getMonitorPhoto() != null) {
            VALUES("MONITOR_PHOTO", "#{monitorPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getBankbookGapPhoto() != null) {
            VALUES("BANKBOOK_GAP_PHOTO", "#{bankbookGapPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getCardGapPhoto() != null) {
            VALUES("CARD_GAP_PHOTO", "#{cardGapPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getInterphonePhoto() != null) {
            VALUES("INTERPHONE_PHOTO", "#{interphonePhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getFixPhoto() != null) {
            VALUES("FIX_PHOTO", "#{fixPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getFloorPhoto() != null) {
            VALUES("FLOOR_PHOTO", "#{floorPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getInWallPhoto() != null) {
            VALUES("IN_WALL_PHOTO", "#{inWallPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getOutWallPhoto() != null) {
            VALUES("OUT_WALL_PHOTO", "#{outWallPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getBoothGlassPhoto() != null) {
            VALUES("BOOTH_GLASS_PHOTO", "#{boothGlassPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getUpPhoto() != null) {
            VALUES("UP_PHOTO", "#{upPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getLampPhoto() != null) {
            VALUES("LAMP_PHOTO", "#{lampPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getStickerPhoto() != null) {
            VALUES("STICKER_PHOTO", "#{stickerPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getGabagePhoto() != null) {
            VALUES("GABAGE_PHOTO", "#{gabagePhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getOutdoorHeaterPhoto() != null) {
            VALUES("OUTDOOR_HEATER_PHOTO", "#{outdoorHeaterPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getSiteArroudPhoto() != null) {
            VALUES("SITE_ARROUD_PHOTO", "#{siteArroudPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getRemark() != null) {
            VALUES("REMARK", "#{remark,jdbcType=VARCHAR}");
        }
        
        if (record.getMemberId() != null) {
            VALUES("MEMBER_ID", "#{memberId,jdbcType=VARCHAR}");
        }
        
        if (record.getPhotoYn() != null) {
            VALUES("PHOTO_YN", "#{photoYn,jdbcType=VARCHAR}");
        }
        
        if (record.getOrgSendYn() != null) {
            VALUES("ORG_SEND_YN", "#{orgSendYn,jdbcType=VARCHAR}");
        }
        
        if (record.getOrgSendDate() != null) {
            VALUES("ORG_SEND_DATE", "#{orgSendDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdateDate() != null) {
            VALUES("UPDATE_DATE", "#{updateDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdateUid() != null) {
            VALUES("UPDATE_UID", "#{updateUid,jdbcType=VARCHAR}");
        }
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CM_SITE_ENV_CHECK
     *
     * @mbggenerated Thu Jul 31 14:31:00 KST 2014
     */
    public String selectBySpec(TCmSiteEnvCheckSpec spec) {
        BEGIN();
        if (spec != null && spec.isDistinct()) {
            SELECT_DISTINCT("CHECK_DATE");
        } else {
            SELECT("CHECK_DATE");
        }
        SELECT("ORG_CD");
        SELECT("BRANCH_CD");
        SELECT("SITE_CD");
        SELECT("MAC_FRONT_GLASS_CHECK");
        SELECT("MAC_FRONT_CHECK");
        SELECT("MAC_GAP_CHECK");
        SELECT("MONITOR_CHECK");
        SELECT("BANKBOOK_GAP_CHECK");
        SELECT("CARD_GAP_CHECK");
        SELECT("INTERPHONE_CHECK");
        SELECT("FIX_CHECK");
        SELECT("FLOOR_CHECK");
        SELECT("IN_WALL_CHECK");
        SELECT("OUT_WALL_CHECK");
        SELECT("BOOTH_GLASS_CHECK");
        SELECT("UP_CHECK");
        SELECT("LAMP_CHECK");
        SELECT("STICKER_CHECK");
        SELECT("GABAGE_CHECK");
        SELECT("OUTDOOR_HEATER_CHECK");
        SELECT("SITE_ARROUD_CHECK");
        SELECT("PHOTO_URL");
        SELECT("MAC_FRONT_GLASS_PHOTO");
        SELECT("MAC_FRONT_PHOTO");
        SELECT("MAC_GAP_PHOTO");
        SELECT("MONITOR_PHOTO");
        SELECT("BANKBOOK_GAP_PHOTO");
        SELECT("CARD_GAP_PHOTO");
        SELECT("INTERPHONE_PHOTO");
        SELECT("FIX_PHOTO");
        SELECT("FLOOR_PHOTO");
        SELECT("IN_WALL_PHOTO");
        SELECT("OUT_WALL_PHOTO");
        SELECT("BOOTH_GLASS_PHOTO");
        SELECT("UP_PHOTO");
        SELECT("LAMP_PHOTO");
        SELECT("STICKER_PHOTO");
        SELECT("GABAGE_PHOTO");
        SELECT("OUTDOOR_HEATER_PHOTO");
        SELECT("SITE_ARROUD_PHOTO");
        SELECT("REMARK");
        SELECT("MEMBER_ID");
        SELECT("PHOTO_YN");
        SELECT("ORG_SEND_YN");
        SELECT("ORG_SEND_DATE");
        SELECT("UPDATE_DATE");
        SELECT("UPDATE_UID");
        FROM("OP.T_CM_SITE_ENV_CHECK");
        applyWhere(spec, false);
        
        if (spec != null && spec.getOrderByClause() != null) {
            ORDER_BY(spec.getOrderByClause());
        }
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CM_SITE_ENV_CHECK
     *
     * @mbggenerated Thu Jul 31 14:31:00 KST 2014
     */
    public String updateBySpecSelective(Map<String, Object> parameter) {
        TCmSiteEnvCheck record = (TCmSiteEnvCheck) parameter.get("record");
        TCmSiteEnvCheckSpec spec = (TCmSiteEnvCheckSpec) parameter.get("spec");
        
        BEGIN();
        UPDATE("OP.T_CM_SITE_ENV_CHECK");
        
        if (record.getCheckDate() != null) {
            SET("CHECK_DATE = #{record.checkDate,jdbcType=VARCHAR}");
        }
        
        if (record.getOrgCd() != null) {
            SET("ORG_CD = #{record.orgCd,jdbcType=VARCHAR}");
        }
        
        if (record.getBranchCd() != null) {
            SET("BRANCH_CD = #{record.branchCd,jdbcType=VARCHAR}");
        }
        
        if (record.getSiteCd() != null) {
            SET("SITE_CD = #{record.siteCd,jdbcType=VARCHAR}");
        }
        
        if (record.getMacFrontGlassCheck() != null) {
            SET("MAC_FRONT_GLASS_CHECK = #{record.macFrontGlassCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getMacFrontCheck() != null) {
            SET("MAC_FRONT_CHECK = #{record.macFrontCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getMacGapCheck() != null) {
            SET("MAC_GAP_CHECK = #{record.macGapCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getMonitorCheck() != null) {
            SET("MONITOR_CHECK = #{record.monitorCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getBankbookGapCheck() != null) {
            SET("BANKBOOK_GAP_CHECK = #{record.bankbookGapCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getCardGapCheck() != null) {
            SET("CARD_GAP_CHECK = #{record.cardGapCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getInterphoneCheck() != null) {
            SET("INTERPHONE_CHECK = #{record.interphoneCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getFixCheck() != null) {
            SET("FIX_CHECK = #{record.fixCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getFloorCheck() != null) {
            SET("FLOOR_CHECK = #{record.floorCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getInWallCheck() != null) {
            SET("IN_WALL_CHECK = #{record.inWallCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getOutWallCheck() != null) {
            SET("OUT_WALL_CHECK = #{record.outWallCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getBoothGlassCheck() != null) {
            SET("BOOTH_GLASS_CHECK = #{record.boothGlassCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getUpCheck() != null) {
            SET("UP_CHECK = #{record.upCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getLampCheck() != null) {
            SET("LAMP_CHECK = #{record.lampCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getStickerCheck() != null) {
            SET("STICKER_CHECK = #{record.stickerCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getGabageCheck() != null) {
            SET("GABAGE_CHECK = #{record.gabageCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getOutdoorHeaterCheck() != null) {
            SET("OUTDOOR_HEATER_CHECK = #{record.outdoorHeaterCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getSiteArroudCheck() != null) {
            SET("SITE_ARROUD_CHECK = #{record.siteArroudCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getPhotoUrl() != null) {
            SET("PHOTO_URL = #{record.photoUrl,jdbcType=VARCHAR}");
        }
        
        if (record.getMacFrontGlassPhoto() != null) {
            SET("MAC_FRONT_GLASS_PHOTO = #{record.macFrontGlassPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getMacFrontPhoto() != null) {
            SET("MAC_FRONT_PHOTO = #{record.macFrontPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getMacGapPhoto() != null) {
            SET("MAC_GAP_PHOTO = #{record.macGapPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getMonitorPhoto() != null) {
            SET("MONITOR_PHOTO = #{record.monitorPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getBankbookGapPhoto() != null) {
            SET("BANKBOOK_GAP_PHOTO = #{record.bankbookGapPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getCardGapPhoto() != null) {
            SET("CARD_GAP_PHOTO = #{record.cardGapPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getInterphonePhoto() != null) {
            SET("INTERPHONE_PHOTO = #{record.interphonePhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getFixPhoto() != null) {
            SET("FIX_PHOTO = #{record.fixPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getFloorPhoto() != null) {
            SET("FLOOR_PHOTO = #{record.floorPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getInWallPhoto() != null) {
            SET("IN_WALL_PHOTO = #{record.inWallPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getOutWallPhoto() != null) {
            SET("OUT_WALL_PHOTO = #{record.outWallPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getBoothGlassPhoto() != null) {
            SET("BOOTH_GLASS_PHOTO = #{record.boothGlassPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getUpPhoto() != null) {
            SET("UP_PHOTO = #{record.upPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getLampPhoto() != null) {
            SET("LAMP_PHOTO = #{record.lampPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getStickerPhoto() != null) {
            SET("STICKER_PHOTO = #{record.stickerPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getGabagePhoto() != null) {
            SET("GABAGE_PHOTO = #{record.gabagePhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getOutdoorHeaterPhoto() != null) {
            SET("OUTDOOR_HEATER_PHOTO = #{record.outdoorHeaterPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getSiteArroudPhoto() != null) {
            SET("SITE_ARROUD_PHOTO = #{record.siteArroudPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getRemark() != null) {
            SET("REMARK = #{record.remark,jdbcType=VARCHAR}");
        }
        
        if (record.getMemberId() != null) {
            SET("MEMBER_ID = #{record.memberId,jdbcType=VARCHAR}");
        }
        
        if (record.getPhotoYn() != null) {
            SET("PHOTO_YN = #{record.photoYn,jdbcType=VARCHAR}");
        }
        
        if (record.getOrgSendYn() != null) {
            SET("ORG_SEND_YN = #{record.orgSendYn,jdbcType=VARCHAR}");
        }
        
        if (record.getOrgSendDate() != null) {
            SET("ORG_SEND_DATE = #{record.orgSendDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdateDate() != null) {
            SET("UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdateUid() != null) {
            SET("UPDATE_UID = #{record.updateUid,jdbcType=VARCHAR}");
        }
        
        applyWhere(spec, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CM_SITE_ENV_CHECK
     *
     * @mbggenerated Thu Jul 31 14:31:00 KST 2014
     */
    public String updateBySpec(Map<String, Object> parameter) {
        BEGIN();
        UPDATE("OP.T_CM_SITE_ENV_CHECK");
        
        SET("CHECK_DATE = #{record.checkDate,jdbcType=VARCHAR}");
        SET("ORG_CD = #{record.orgCd,jdbcType=VARCHAR}");
        SET("BRANCH_CD = #{record.branchCd,jdbcType=VARCHAR}");
        SET("SITE_CD = #{record.siteCd,jdbcType=VARCHAR}");
        SET("MAC_FRONT_GLASS_CHECK = #{record.macFrontGlassCheck,jdbcType=VARCHAR}");
        SET("MAC_FRONT_CHECK = #{record.macFrontCheck,jdbcType=VARCHAR}");
        SET("MAC_GAP_CHECK = #{record.macGapCheck,jdbcType=VARCHAR}");
        SET("MONITOR_CHECK = #{record.monitorCheck,jdbcType=VARCHAR}");
        SET("BANKBOOK_GAP_CHECK = #{record.bankbookGapCheck,jdbcType=VARCHAR}");
        SET("CARD_GAP_CHECK = #{record.cardGapCheck,jdbcType=VARCHAR}");
        SET("INTERPHONE_CHECK = #{record.interphoneCheck,jdbcType=VARCHAR}");
        SET("FIX_CHECK = #{record.fixCheck,jdbcType=VARCHAR}");
        SET("FLOOR_CHECK = #{record.floorCheck,jdbcType=VARCHAR}");
        SET("IN_WALL_CHECK = #{record.inWallCheck,jdbcType=VARCHAR}");
        SET("OUT_WALL_CHECK = #{record.outWallCheck,jdbcType=VARCHAR}");
        SET("BOOTH_GLASS_CHECK = #{record.boothGlassCheck,jdbcType=VARCHAR}");
        SET("UP_CHECK = #{record.upCheck,jdbcType=VARCHAR}");
        SET("LAMP_CHECK = #{record.lampCheck,jdbcType=VARCHAR}");
        SET("STICKER_CHECK = #{record.stickerCheck,jdbcType=VARCHAR}");
        SET("GABAGE_CHECK = #{record.gabageCheck,jdbcType=VARCHAR}");
        SET("OUTDOOR_HEATER_CHECK = #{record.outdoorHeaterCheck,jdbcType=VARCHAR}");
        SET("SITE_ARROUD_CHECK = #{record.siteArroudCheck,jdbcType=VARCHAR}");
        SET("PHOTO_URL = #{record.photoUrl,jdbcType=VARCHAR}");
        SET("MAC_FRONT_GLASS_PHOTO = #{record.macFrontGlassPhoto,jdbcType=VARCHAR}");
        SET("MAC_FRONT_PHOTO = #{record.macFrontPhoto,jdbcType=VARCHAR}");
        SET("MAC_GAP_PHOTO = #{record.macGapPhoto,jdbcType=VARCHAR}");
        SET("MONITOR_PHOTO = #{record.monitorPhoto,jdbcType=VARCHAR}");
        SET("BANKBOOK_GAP_PHOTO = #{record.bankbookGapPhoto,jdbcType=VARCHAR}");
        SET("CARD_GAP_PHOTO = #{record.cardGapPhoto,jdbcType=VARCHAR}");
        SET("INTERPHONE_PHOTO = #{record.interphonePhoto,jdbcType=VARCHAR}");
        SET("FIX_PHOTO = #{record.fixPhoto,jdbcType=VARCHAR}");
        SET("FLOOR_PHOTO = #{record.floorPhoto,jdbcType=VARCHAR}");
        SET("IN_WALL_PHOTO = #{record.inWallPhoto,jdbcType=VARCHAR}");
        SET("OUT_WALL_PHOTO = #{record.outWallPhoto,jdbcType=VARCHAR}");
        SET("BOOTH_GLASS_PHOTO = #{record.boothGlassPhoto,jdbcType=VARCHAR}");
        SET("UP_PHOTO = #{record.upPhoto,jdbcType=VARCHAR}");
        SET("LAMP_PHOTO = #{record.lampPhoto,jdbcType=VARCHAR}");
        SET("STICKER_PHOTO = #{record.stickerPhoto,jdbcType=VARCHAR}");
        SET("GABAGE_PHOTO = #{record.gabagePhoto,jdbcType=VARCHAR}");
        SET("OUTDOOR_HEATER_PHOTO = #{record.outdoorHeaterPhoto,jdbcType=VARCHAR}");
        SET("SITE_ARROUD_PHOTO = #{record.siteArroudPhoto,jdbcType=VARCHAR}");
        SET("REMARK = #{record.remark,jdbcType=VARCHAR}");
        SET("MEMBER_ID = #{record.memberId,jdbcType=VARCHAR}");
        SET("PHOTO_YN = #{record.photoYn,jdbcType=VARCHAR}");
        SET("ORG_SEND_YN = #{record.orgSendYn,jdbcType=VARCHAR}");
        SET("ORG_SEND_DATE = #{record.orgSendDate,jdbcType=TIMESTAMP}");
        SET("UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP}");
        SET("UPDATE_UID = #{record.updateUid,jdbcType=VARCHAR}");
        
        TCmSiteEnvCheckSpec spec = (TCmSiteEnvCheckSpec) parameter.get("spec");
        applyWhere(spec, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CM_SITE_ENV_CHECK
     *
     * @mbggenerated Thu Jul 31 14:31:01 KST 2014
     */
    public String updateByPrimaryKeySelective(TCmSiteEnvCheck record) {
        BEGIN();
        UPDATE("OP.T_CM_SITE_ENV_CHECK");
        
        if (record.getMacFrontGlassCheck() != null) {
            SET("MAC_FRONT_GLASS_CHECK = #{macFrontGlassCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getMacFrontCheck() != null) {
            SET("MAC_FRONT_CHECK = #{macFrontCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getMacGapCheck() != null) {
            SET("MAC_GAP_CHECK = #{macGapCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getMonitorCheck() != null) {
            SET("MONITOR_CHECK = #{monitorCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getBankbookGapCheck() != null) {
            SET("BANKBOOK_GAP_CHECK = #{bankbookGapCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getCardGapCheck() != null) {
            SET("CARD_GAP_CHECK = #{cardGapCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getInterphoneCheck() != null) {
            SET("INTERPHONE_CHECK = #{interphoneCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getFixCheck() != null) {
            SET("FIX_CHECK = #{fixCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getFloorCheck() != null) {
            SET("FLOOR_CHECK = #{floorCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getInWallCheck() != null) {
            SET("IN_WALL_CHECK = #{inWallCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getOutWallCheck() != null) {
            SET("OUT_WALL_CHECK = #{outWallCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getBoothGlassCheck() != null) {
            SET("BOOTH_GLASS_CHECK = #{boothGlassCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getUpCheck() != null) {
            SET("UP_CHECK = #{upCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getLampCheck() != null) {
            SET("LAMP_CHECK = #{lampCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getStickerCheck() != null) {
            SET("STICKER_CHECK = #{stickerCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getGabageCheck() != null) {
            SET("GABAGE_CHECK = #{gabageCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getOutdoorHeaterCheck() != null) {
            SET("OUTDOOR_HEATER_CHECK = #{outdoorHeaterCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getSiteArroudCheck() != null) {
            SET("SITE_ARROUD_CHECK = #{siteArroudCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getPhotoUrl() != null) {
            SET("PHOTO_URL = #{photoUrl,jdbcType=VARCHAR}");
        }
        
        if (record.getMacFrontGlassPhoto() != null) {
            SET("MAC_FRONT_GLASS_PHOTO = #{macFrontGlassPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getMacFrontPhoto() != null) {
            SET("MAC_FRONT_PHOTO = #{macFrontPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getMacGapPhoto() != null) {
            SET("MAC_GAP_PHOTO = #{macGapPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getMonitorPhoto() != null) {
            SET("MONITOR_PHOTO = #{monitorPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getBankbookGapPhoto() != null) {
            SET("BANKBOOK_GAP_PHOTO = #{bankbookGapPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getCardGapPhoto() != null) {
            SET("CARD_GAP_PHOTO = #{cardGapPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getInterphonePhoto() != null) {
            SET("INTERPHONE_PHOTO = #{interphonePhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getFixPhoto() != null) {
            SET("FIX_PHOTO = #{fixPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getFloorPhoto() != null) {
            SET("FLOOR_PHOTO = #{floorPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getInWallPhoto() != null) {
            SET("IN_WALL_PHOTO = #{inWallPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getOutWallPhoto() != null) {
            SET("OUT_WALL_PHOTO = #{outWallPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getBoothGlassPhoto() != null) {
            SET("BOOTH_GLASS_PHOTO = #{boothGlassPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getUpPhoto() != null) {
            SET("UP_PHOTO = #{upPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getLampPhoto() != null) {
            SET("LAMP_PHOTO = #{lampPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getStickerPhoto() != null) {
            SET("STICKER_PHOTO = #{stickerPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getGabagePhoto() != null) {
            SET("GABAGE_PHOTO = #{gabagePhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getOutdoorHeaterPhoto() != null) {
            SET("OUTDOOR_HEATER_PHOTO = #{outdoorHeaterPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getSiteArroudPhoto() != null) {
            SET("SITE_ARROUD_PHOTO = #{siteArroudPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getRemark() != null) {
            SET("REMARK = #{remark,jdbcType=VARCHAR}");
        }
        
        if (record.getMemberId() != null) {
            SET("MEMBER_ID = #{memberId,jdbcType=VARCHAR}");
        }
        
        if (record.getPhotoYn() != null) {
            SET("PHOTO_YN = #{photoYn,jdbcType=VARCHAR}");
        }
        
        if (record.getOrgSendYn() != null) {
            SET("ORG_SEND_YN = #{orgSendYn,jdbcType=VARCHAR}");
        }
        
        if (record.getOrgSendDate() != null) {
            SET("ORG_SEND_DATE = #{orgSendDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdateDate() != null) {
            SET("UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdateUid() != null) {
            SET("UPDATE_UID = #{updateUid,jdbcType=VARCHAR}");
        }
        
        WHERE("CHECK_DATE = #{checkDate,jdbcType=VARCHAR}");
        WHERE("ORG_CD = #{orgCd,jdbcType=VARCHAR}");
        WHERE("BRANCH_CD = #{branchCd,jdbcType=VARCHAR}");
        WHERE("SITE_CD = #{siteCd,jdbcType=VARCHAR}");
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CM_SITE_ENV_CHECK
     *
     * @mbggenerated Thu Jul 31 14:31:01 KST 2014
     */
    protected void applyWhere(TCmSiteEnvCheckSpec spec, boolean includeSpecPhrase) {
        if (spec == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeSpecPhrase) {
            parmPhrase1 = "%s #{spec.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{spec.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{spec.oredCriteria[%d].allCriteria[%d].value} and #{spec.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{spec.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{spec.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{spec.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{spec.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = spec.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            WHERE(sb.toString());
        }
    }
}