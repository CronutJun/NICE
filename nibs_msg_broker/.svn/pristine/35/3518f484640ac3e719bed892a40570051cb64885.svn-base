package com.nicetcm.nibsplus.broker.msg.mapper;

import static org.apache.ibatis.jdbc.SqlBuilder.BEGIN;
import static org.apache.ibatis.jdbc.SqlBuilder.DELETE_FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.INSERT_INTO;
import static org.apache.ibatis.jdbc.SqlBuilder.ORDER_BY;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT_DISTINCT;
import static org.apache.ibatis.jdbc.SqlBuilder.SET;
import static org.apache.ibatis.jdbc.SqlBuilder.SQL;
import static org.apache.ibatis.jdbc.SqlBuilder.UPDATE;
import static org.apache.ibatis.jdbc.SqlBuilder.VALUES;
import static org.apache.ibatis.jdbc.SqlBuilder.WHERE;

import com.nicetcm.nibsplus.broker.msg.model.TCmSetChangeSiteState;
import com.nicetcm.nibsplus.broker.msg.model.TCmSetChangeSiteStateSpec.Criteria;
import com.nicetcm.nibsplus.broker.msg.model.TCmSetChangeSiteStateSpec.Criterion;
import com.nicetcm.nibsplus.broker.msg.model.TCmSetChangeSiteStateSpec;
import java.util.List;
import java.util.Map;

public class TCmSetChangeSiteStateSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CM_SET_CHANGE_SITE_STATE
     *
     * @mbggenerated Tue Nov 11 15:31:34 KST 2014
     */
    public String countBySpec(TCmSetChangeSiteStateSpec Spec) {
        BEGIN();
        SELECT("count(*)");
        FROM("OP.T_CM_SET_CHANGE_SITE_STATE");
        applyWhere(Spec, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CM_SET_CHANGE_SITE_STATE
     *
     * @mbggenerated Tue Nov 11 15:31:34 KST 2014
     */
    public String deleteBySpec(TCmSetChangeSiteStateSpec Spec) {
        BEGIN();
        DELETE_FROM("OP.T_CM_SET_CHANGE_SITE_STATE");
        applyWhere(Spec, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CM_SET_CHANGE_SITE_STATE
     *
     * @mbggenerated Tue Nov 11 15:31:34 KST 2014
     */
    public String insertSelective(TCmSetChangeSiteState record) {
        BEGIN();
        INSERT_INTO("OP.T_CM_SET_CHANGE_SITE_STATE");
        
        if (record.getOrgCd() != null) {
            VALUES("ORG_CD", "#{orgCd,jdbcType=VARCHAR}");
        }
        
        if (record.getWorkSeq() != null) {
            VALUES("WORK_SEQ", "#{workSeq,jdbcType=VARCHAR}");
        }
        
        if (record.getChangeNo() != null) {
            VALUES("CHANGE_NO", "#{changeNo,jdbcType=DECIMAL}");
        }
        
        if (record.getBranchCd() != null) {
            VALUES("BRANCH_CD", "#{branchCd,jdbcType=VARCHAR}");
        }
        
        if (record.getSiteCd() != null) {
            VALUES("SITE_CD", "#{siteCd,jdbcType=VARCHAR}");
        }
        
        if (record.getSiteNm() != null) {
            VALUES("SITE_NM", "#{siteNm,jdbcType=VARCHAR}");
        }
        
        if (record.getDataType() != null) {
            VALUES("DATA_TYPE", "#{dataType,jdbcType=VARCHAR}");
        }
        
        if (record.getCloseDate() != null) {
            VALUES("CLOSE_DATE", "#{closeDate,jdbcType=VARCHAR}");
        }
        
        if (record.getReopenType() != null) {
            VALUES("REOPEN_TYPE", "#{reopenType,jdbcType=VARCHAR}");
        }
        
        if (record.getReopenDate() != null) {
            VALUES("REOPEN_DATE", "#{reopenDate,jdbcType=VARCHAR}");
        }
        
        if (record.getSetType() != null) {
            VALUES("SET_TYPE", "#{setType,jdbcType=VARCHAR}");
        }
        
        if (record.getOperStartTime() != null) {
            VALUES("OPER_START_TIME", "#{operStartTime,jdbcType=VARCHAR}");
        }
        
        if (record.getOperEndTime() != null) {
            VALUES("OPER_END_TIME", "#{operEndTime,jdbcType=VARCHAR}");
        }
        
        if (record.getCheckYn() != null) {
            VALUES("CHECK_YN", "#{checkYn,jdbcType=VARCHAR}");
        }
        
        if (record.getApplyDate() != null) {
            VALUES("APPLY_DATE", "#{applyDate,jdbcType=VARCHAR}");
        }
        
        if (record.getInsertUid() != null) {
            VALUES("INSERT_UID", "#{insertUid,jdbcType=VARCHAR}");
        }
        
        if (record.getInsertDate() != null) {
            VALUES("INSERT_DATE", "#{insertDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdateUid() != null) {
            VALUES("UPDATE_UID", "#{updateUid,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdateDate() != null) {
            VALUES("UPDATE_DATE", "#{updateDate,jdbcType=TIMESTAMP}");
        }
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CM_SET_CHANGE_SITE_STATE
     *
     * @mbggenerated Tue Nov 11 15:31:34 KST 2014
     */
    public String selectBySpec(TCmSetChangeSiteStateSpec Spec) {
        BEGIN();
        if (Spec != null && Spec.isDistinct()) {
            SELECT_DISTINCT("ORG_CD");
        } else {
            SELECT("ORG_CD");
        }
        SELECT("WORK_SEQ");
        SELECT("CHANGE_NO");
        SELECT("BRANCH_CD");
        SELECT("SITE_CD");
        SELECT("SITE_NM");
        SELECT("DATA_TYPE");
        SELECT("CLOSE_DATE");
        SELECT("REOPEN_TYPE");
        SELECT("REOPEN_DATE");
        SELECT("SET_TYPE");
        SELECT("OPER_START_TIME");
        SELECT("OPER_END_TIME");
        SELECT("CHECK_YN");
        SELECT("APPLY_DATE");
        SELECT("INSERT_UID");
        SELECT("INSERT_DATE");
        SELECT("UPDATE_UID");
        SELECT("UPDATE_DATE");
        FROM("OP.T_CM_SET_CHANGE_SITE_STATE");
        applyWhere(Spec, false);
        
        if (Spec != null && Spec.getOrderByClause() != null) {
            ORDER_BY(Spec.getOrderByClause());
        }
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CM_SET_CHANGE_SITE_STATE
     *
     * @mbggenerated Tue Nov 11 15:31:34 KST 2014
     */
    public String updateBySpecSelective(Map<String, Object> parameter) {
        TCmSetChangeSiteState record = (TCmSetChangeSiteState) parameter.get("record");
        TCmSetChangeSiteStateSpec Spec = (TCmSetChangeSiteStateSpec) parameter.get("Spec");
        
        BEGIN();
        UPDATE("OP.T_CM_SET_CHANGE_SITE_STATE");
        
        if (record.getOrgCd() != null) {
            SET("ORG_CD = #{record.orgCd,jdbcType=VARCHAR}");
        }
        
        if (record.getWorkSeq() != null) {
            SET("WORK_SEQ = #{record.workSeq,jdbcType=VARCHAR}");
        }
        
        if (record.getChangeNo() != null) {
            SET("CHANGE_NO = #{record.changeNo,jdbcType=DECIMAL}");
        }
        
        if (record.getBranchCd() != null) {
            SET("BRANCH_CD = #{record.branchCd,jdbcType=VARCHAR}");
        }
        
        if (record.getSiteCd() != null) {
            SET("SITE_CD = #{record.siteCd,jdbcType=VARCHAR}");
        }
        
        if (record.getSiteNm() != null) {
            SET("SITE_NM = #{record.siteNm,jdbcType=VARCHAR}");
        }
        
        if (record.getDataType() != null) {
            SET("DATA_TYPE = #{record.dataType,jdbcType=VARCHAR}");
        }
        
        if (record.getCloseDate() != null) {
            SET("CLOSE_DATE = #{record.closeDate,jdbcType=VARCHAR}");
        }
        
        if (record.getReopenType() != null) {
            SET("REOPEN_TYPE = #{record.reopenType,jdbcType=VARCHAR}");
        }
        
        if (record.getReopenDate() != null) {
            SET("REOPEN_DATE = #{record.reopenDate,jdbcType=VARCHAR}");
        }
        
        if (record.getSetType() != null) {
            SET("SET_TYPE = #{record.setType,jdbcType=VARCHAR}");
        }
        
        if (record.getOperStartTime() != null) {
            SET("OPER_START_TIME = #{record.operStartTime,jdbcType=VARCHAR}");
        }
        
        if (record.getOperEndTime() != null) {
            SET("OPER_END_TIME = #{record.operEndTime,jdbcType=VARCHAR}");
        }
        
        if (record.getCheckYn() != null) {
            SET("CHECK_YN = #{record.checkYn,jdbcType=VARCHAR}");
        }
        
        if (record.getApplyDate() != null) {
            SET("APPLY_DATE = #{record.applyDate,jdbcType=VARCHAR}");
        }
        
        if (record.getInsertUid() != null) {
            SET("INSERT_UID = #{record.insertUid,jdbcType=VARCHAR}");
        }
        
        if (record.getInsertDate() != null) {
            SET("INSERT_DATE = #{record.insertDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdateUid() != null) {
            SET("UPDATE_UID = #{record.updateUid,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdateDate() != null) {
            SET("UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP}");
        }
        
        applyWhere(Spec, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CM_SET_CHANGE_SITE_STATE
     *
     * @mbggenerated Tue Nov 11 15:31:34 KST 2014
     */
    public String updateBySpec(Map<String, Object> parameter) {
        BEGIN();
        UPDATE("OP.T_CM_SET_CHANGE_SITE_STATE");
        
        SET("ORG_CD = #{record.orgCd,jdbcType=VARCHAR}");
        SET("WORK_SEQ = #{record.workSeq,jdbcType=VARCHAR}");
        SET("CHANGE_NO = #{record.changeNo,jdbcType=DECIMAL}");
        SET("BRANCH_CD = #{record.branchCd,jdbcType=VARCHAR}");
        SET("SITE_CD = #{record.siteCd,jdbcType=VARCHAR}");
        SET("SITE_NM = #{record.siteNm,jdbcType=VARCHAR}");
        SET("DATA_TYPE = #{record.dataType,jdbcType=VARCHAR}");
        SET("CLOSE_DATE = #{record.closeDate,jdbcType=VARCHAR}");
        SET("REOPEN_TYPE = #{record.reopenType,jdbcType=VARCHAR}");
        SET("REOPEN_DATE = #{record.reopenDate,jdbcType=VARCHAR}");
        SET("SET_TYPE = #{record.setType,jdbcType=VARCHAR}");
        SET("OPER_START_TIME = #{record.operStartTime,jdbcType=VARCHAR}");
        SET("OPER_END_TIME = #{record.operEndTime,jdbcType=VARCHAR}");
        SET("CHECK_YN = #{record.checkYn,jdbcType=VARCHAR}");
        SET("APPLY_DATE = #{record.applyDate,jdbcType=VARCHAR}");
        SET("INSERT_UID = #{record.insertUid,jdbcType=VARCHAR}");
        SET("INSERT_DATE = #{record.insertDate,jdbcType=TIMESTAMP}");
        SET("UPDATE_UID = #{record.updateUid,jdbcType=VARCHAR}");
        SET("UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP}");
        
        TCmSetChangeSiteStateSpec Spec = (TCmSetChangeSiteStateSpec) parameter.get("Spec");
        applyWhere(Spec, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CM_SET_CHANGE_SITE_STATE
     *
     * @mbggenerated Tue Nov 11 15:31:34 KST 2014
     */
    protected void applyWhere(TCmSetChangeSiteStateSpec Spec, boolean includeSpecPhrase) {
        if (Spec == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeSpecPhrase) {
            parmPhrase1 = "%s #{Spec.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{Spec.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{Spec.oredCriteria[%d].allCriteria[%d].value} and #{Spec.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{Spec.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{Spec.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{Spec.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{Spec.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = Spec.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            WHERE(sb.toString());
        }
    }
}