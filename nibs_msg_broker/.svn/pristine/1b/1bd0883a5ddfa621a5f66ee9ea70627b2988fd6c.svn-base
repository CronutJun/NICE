package com.nicetcm.nibsplus.broker.msg.mapper;

import static org.apache.ibatis.jdbc.SqlBuilder.BEGIN;
import static org.apache.ibatis.jdbc.SqlBuilder.DELETE_FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.INSERT_INTO;
import static org.apache.ibatis.jdbc.SqlBuilder.ORDER_BY;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT_DISTINCT;
import static org.apache.ibatis.jdbc.SqlBuilder.SET;
import static org.apache.ibatis.jdbc.SqlBuilder.SQL;
import static org.apache.ibatis.jdbc.SqlBuilder.UPDATE;
import static org.apache.ibatis.jdbc.SqlBuilder.VALUES;
import static org.apache.ibatis.jdbc.SqlBuilder.WHERE;

import com.nicetcm.nibsplus.broker.msg.model.TCtErrorCall;
import com.nicetcm.nibsplus.broker.msg.model.TCtErrorCallSpec.Criteria;
import com.nicetcm.nibsplus.broker.msg.model.TCtErrorCallSpec.Criterion;
import com.nicetcm.nibsplus.broker.msg.model.TCtErrorCallSpec;
import java.util.List;
import java.util.Map;

public class TCtErrorCallSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_ERROR_CALL
     *
     * @mbggenerated Wed Nov 26 18:06:13 KST 2014
     */
    public String countBySpec(TCtErrorCallSpec spec) {
        BEGIN();
        SELECT("count(*)");
        FROM("OP.T_CT_ERROR_CALL");
        applyWhere(spec, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_ERROR_CALL
     *
     * @mbggenerated Wed Nov 26 18:06:13 KST 2014
     */
    public String deleteBySpec(TCtErrorCallSpec spec) {
        BEGIN();
        DELETE_FROM("OP.T_CT_ERROR_CALL");
        applyWhere(spec, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_ERROR_CALL
     *
     * @mbggenerated Wed Nov 26 18:06:13 KST 2014
     */
    public String insertSelective(TCtErrorCall record) {
        BEGIN();
        INSERT_INTO("OP.T_CT_ERROR_CALL");

        if (record.getErrorNo() != null) {
            VALUES("ERROR_NO", "#{errorNo,jdbcType=VARCHAR}");
        }

        if (record.getCreateDate() != null) {
            VALUES("CREATE_DATE", "#{createDate,jdbcType=VARCHAR}");
        }

        if (record.getCreateTime() != null) {
            VALUES("CREATE_TIME", "#{createTime,jdbcType=VARCHAR}");
        }

        if (record.getArrivalDate() != null) {
            VALUES("ARRIVAL_DATE", "#{arrivalDate,jdbcType=VARCHAR}");
        }

        if (record.getArrivalTime() != null) {
            VALUES("ARRIVAL_TIME", "#{arrivalTime,jdbcType=VARCHAR}");
        }

        if (record.getArrivalPdaDate() != null) {
            VALUES("ARRIVAL_PDA_DATE", "#{arrivalPdaDate,jdbcType=VARCHAR}");
        }

        if (record.getArrivalPdaTime() != null) {
            VALUES("ARRIVAL_PDA_TIME", "#{arrivalPdaTime,jdbcType=VARCHAR}");
        }

        if (record.getArrivalXpos() != null) {
            VALUES("ARRIVAL_XPOS", "#{arrivalXpos,jdbcType=VARCHAR}");
        }

        if (record.getArrivalYpos() != null) {
            VALUES("ARRIVAL_YPOS", "#{arrivalYpos,jdbcType=VARCHAR}");
        }

        if (record.getArrivalSido() != null) {
            VALUES("ARRIVAL_SIDO", "#{arrivalSido,jdbcType=VARCHAR}");
        }

        if (record.getArrivalGugun() != null) {
            VALUES("ARRIVAL_GUGUN", "#{arrivalGugun,jdbcType=VARCHAR}");
        }

        if (record.getArrivalDong() != null) {
            VALUES("ARRIVAL_DONG", "#{arrivalDong,jdbcType=VARCHAR}");
        }

        if (record.getArrivalType() != null) {
            VALUES("ARRIVAL_TYPE", "#{arrivalType,jdbcType=VARCHAR}");
        }

        if (record.getArrivalUid() != null) {
            VALUES("ARRIVAL_UID", "#{arrivalUid,jdbcType=VARCHAR}");
        }

        if (record.getArrivalNm() != null) {
            VALUES("ARRIVAL_NM", "#{arrivalNm,jdbcType=VARCHAR}");
        }

        if (record.getRegDt() != null) {
            VALUES("REG_DT", "#{regDt,jdbcType=TIMESTAMP}");
        }

        if (record.getRegId() != null) {
            VALUES("REG_ID", "#{regId,jdbcType=VARCHAR}");
        }

        if (record.getUpdateDate() != null) {
            VALUES("UPDATE_DATE", "#{updateDate,jdbcType=TIMESTAMP}");
        }

        if (record.getUpdateUid() != null) {
            VALUES("UPDATE_UID", "#{updateUid,jdbcType=VARCHAR}");
        }

        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_ERROR_CALL
     *
     * @mbggenerated Wed Nov 26 18:06:13 KST 2014
     */
    public String selectBySpec(TCtErrorCallSpec spec) {
        BEGIN();
        if (spec != null && spec.isDistinct()) {
            SELECT_DISTINCT("ERROR_NO");
        } else {
            SELECT("ERROR_NO");
        }
        SELECT("CREATE_DATE");
        SELECT("CREATE_TIME");
        SELECT("ARRIVAL_DATE");
        SELECT("ARRIVAL_TIME");
        SELECT("ARRIVAL_PDA_DATE");
        SELECT("ARRIVAL_PDA_TIME");
        SELECT("ARRIVAL_XPOS");
        SELECT("ARRIVAL_YPOS");
        SELECT("ARRIVAL_SIDO");
        SELECT("ARRIVAL_GUGUN");
        SELECT("ARRIVAL_DONG");
        SELECT("ARRIVAL_TYPE");
        SELECT("ARRIVAL_UID");
        SELECT("ARRIVAL_NM");
        SELECT("REG_DT");
        SELECT("REG_ID");
        SELECT("UPDATE_DATE");
        SELECT("UPDATE_UID");
        FROM("OP.T_CT_ERROR_CALL");
        applyWhere(spec, false);

        if (spec != null && spec.getOrderByClause() != null) {
            ORDER_BY(spec.getOrderByClause());
        }

        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_ERROR_CALL
     *
     * @mbggenerated Wed Nov 26 18:06:13 KST 2014
     */
    public String updateBySpecSelective(Map<String, Object> parameter) {
        TCtErrorCall record = (TCtErrorCall) parameter.get("record");
        TCtErrorCallSpec spec = (TCtErrorCallSpec) parameter.get("spec");

        BEGIN();
        UPDATE("OP.T_CT_ERROR_CALL");

        if (record.getErrorNo() != null) {
            SET("ERROR_NO = #{record.errorNo,jdbcType=VARCHAR}");
        }

        if (record.getCreateDate() != null) {
            SET("CREATE_DATE = #{record.createDate,jdbcType=VARCHAR}");
        }

        if (record.getCreateTime() != null) {
            SET("CREATE_TIME = #{record.createTime,jdbcType=VARCHAR}");
        }

        if (record.getArrivalDate() != null) {
            SET("ARRIVAL_DATE = #{record.arrivalDate,jdbcType=VARCHAR}");
        }

        if (record.getArrivalTime() != null) {
            SET("ARRIVAL_TIME = #{record.arrivalTime,jdbcType=VARCHAR}");
        }

        if (record.getArrivalPdaDate() != null) {
            SET("ARRIVAL_PDA_DATE = #{record.arrivalPdaDate,jdbcType=VARCHAR}");
        }

        if (record.getArrivalPdaTime() != null) {
            SET("ARRIVAL_PDA_TIME = #{record.arrivalPdaTime,jdbcType=VARCHAR}");
        }

        if (record.getArrivalXpos() != null) {
            SET("ARRIVAL_XPOS = #{record.arrivalXpos,jdbcType=VARCHAR}");
        }

        if (record.getArrivalYpos() != null) {
            SET("ARRIVAL_YPOS = #{record.arrivalYpos,jdbcType=VARCHAR}");
        }

        if (record.getArrivalSido() != null) {
            SET("ARRIVAL_SIDO = #{record.arrivalSido,jdbcType=VARCHAR}");
        }

        if (record.getArrivalGugun() != null) {
            SET("ARRIVAL_GUGUN = #{record.arrivalGugun,jdbcType=VARCHAR}");
        }

        if (record.getArrivalDong() != null) {
            SET("ARRIVAL_DONG = #{record.arrivalDong,jdbcType=VARCHAR}");
        }

        if (record.getArrivalType() != null) {
            SET("ARRIVAL_TYPE = #{record.arrivalType,jdbcType=VARCHAR}");
        }

        if (record.getArrivalUid() != null) {
            SET("ARRIVAL_UID = #{record.arrivalUid,jdbcType=VARCHAR}");
        }

        if (record.getArrivalNm() != null) {
            SET("ARRIVAL_NM = #{record.arrivalNm,jdbcType=VARCHAR}");
        }

        if (record.getRegDt() != null) {
            SET("REG_DT = #{record.regDt,jdbcType=TIMESTAMP}");
        }

        if (record.getRegId() != null) {
            SET("REG_ID = #{record.regId,jdbcType=VARCHAR}");
        }

        if (record.getUpdateDate() != null) {
            SET("UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP}");
        }

        if (record.getUpdateUid() != null) {
            SET("UPDATE_UID = #{record.updateUid,jdbcType=VARCHAR}");
        }

        applyWhere(spec, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_ERROR_CALL
     *
     * @mbggenerated Wed Nov 26 18:06:13 KST 2014
     */
    public String updateBySpec(Map<String, Object> parameter) {
        BEGIN();
        UPDATE("OP.T_CT_ERROR_CALL");

        SET("ERROR_NO = #{record.errorNo,jdbcType=VARCHAR}");
        SET("CREATE_DATE = #{record.createDate,jdbcType=VARCHAR}");
        SET("CREATE_TIME = #{record.createTime,jdbcType=VARCHAR}");
        SET("ARRIVAL_DATE = #{record.arrivalDate,jdbcType=VARCHAR}");
        SET("ARRIVAL_TIME = #{record.arrivalTime,jdbcType=VARCHAR}");
        SET("ARRIVAL_PDA_DATE = #{record.arrivalPdaDate,jdbcType=VARCHAR}");
        SET("ARRIVAL_PDA_TIME = #{record.arrivalPdaTime,jdbcType=VARCHAR}");
        SET("ARRIVAL_XPOS = #{record.arrivalXpos,jdbcType=VARCHAR}");
        SET("ARRIVAL_YPOS = #{record.arrivalYpos,jdbcType=VARCHAR}");
        SET("ARRIVAL_SIDO = #{record.arrivalSido,jdbcType=VARCHAR}");
        SET("ARRIVAL_GUGUN = #{record.arrivalGugun,jdbcType=VARCHAR}");
        SET("ARRIVAL_DONG = #{record.arrivalDong,jdbcType=VARCHAR}");
        SET("ARRIVAL_TYPE = #{record.arrivalType,jdbcType=VARCHAR}");
        SET("ARRIVAL_UID = #{record.arrivalUid,jdbcType=VARCHAR}");
        SET("ARRIVAL_NM = #{record.arrivalNm,jdbcType=VARCHAR}");
        SET("REG_DT = #{record.regDt,jdbcType=TIMESTAMP}");
        SET("REG_ID = #{record.regId,jdbcType=VARCHAR}");
        SET("UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP}");
        SET("UPDATE_UID = #{record.updateUid,jdbcType=VARCHAR}");

        TCtErrorCallSpec spec = (TCtErrorCallSpec) parameter.get("spec");
        applyWhere(spec, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_ERROR_CALL
     *
     * @mbggenerated Wed Nov 26 18:06:13 KST 2014
     */
    public String updateByPrimaryKeySelective(TCtErrorCall record) {
        BEGIN();
        UPDATE("OP.T_CT_ERROR_CALL");

        if (record.getArrivalDate() != null) {
            SET("ARRIVAL_DATE = #{arrivalDate,jdbcType=VARCHAR}");
        }

        if (record.getArrivalTime() != null) {
            SET("ARRIVAL_TIME = #{arrivalTime,jdbcType=VARCHAR}");
        }

        if (record.getArrivalPdaDate() != null) {
            SET("ARRIVAL_PDA_DATE = #{arrivalPdaDate,jdbcType=VARCHAR}");
        }

        if (record.getArrivalPdaTime() != null) {
            SET("ARRIVAL_PDA_TIME = #{arrivalPdaTime,jdbcType=VARCHAR}");
        }

        if (record.getArrivalXpos() != null) {
            SET("ARRIVAL_XPOS = #{arrivalXpos,jdbcType=VARCHAR}");
        }

        if (record.getArrivalYpos() != null) {
            SET("ARRIVAL_YPOS = #{arrivalYpos,jdbcType=VARCHAR}");
        }

        if (record.getArrivalSido() != null) {
            SET("ARRIVAL_SIDO = #{arrivalSido,jdbcType=VARCHAR}");
        }

        if (record.getArrivalGugun() != null) {
            SET("ARRIVAL_GUGUN = #{arrivalGugun,jdbcType=VARCHAR}");
        }

        if (record.getArrivalDong() != null) {
            SET("ARRIVAL_DONG = #{arrivalDong,jdbcType=VARCHAR}");
        }

        if (record.getArrivalType() != null) {
            SET("ARRIVAL_TYPE = #{arrivalType,jdbcType=VARCHAR}");
        }

        if (record.getArrivalUid() != null) {
            SET("ARRIVAL_UID = #{arrivalUid,jdbcType=VARCHAR}");
        }

        if (record.getArrivalNm() != null) {
            SET("ARRIVAL_NM = #{arrivalNm,jdbcType=VARCHAR}");
        }

        if (record.getRegDt() != null) {
            SET("REG_DT = #{regDt,jdbcType=TIMESTAMP}");
        }

        if (record.getRegId() != null) {
            SET("REG_ID = #{regId,jdbcType=VARCHAR}");
        }

        if (record.getUpdateDate() != null) {
            SET("UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP}");
        }

        if (record.getUpdateUid() != null) {
            SET("UPDATE_UID = #{updateUid,jdbcType=VARCHAR}");
        }

        WHERE("ERROR_NO = #{errorNo,jdbcType=VARCHAR}");
        WHERE("CREATE_DATE = #{createDate,jdbcType=VARCHAR}");
        WHERE("CREATE_TIME = #{createTime,jdbcType=VARCHAR}");

        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_ERROR_CALL
     *
     * @mbggenerated Wed Nov 26 18:06:13 KST 2014
     */
    protected void applyWhere(TCtErrorCallSpec spec, boolean includeSpecPhrase) {
        if (spec == null) {
            return;
        }

        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeSpecPhrase) {
            parmPhrase1 = "%s #{spec.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{spec.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{spec.oredCriteria[%d].allCriteria[%d].value} and #{spec.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{spec.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{spec.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{spec.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{spec.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }

        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = spec.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }

                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }

                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }

        if (sb.length() > 0) {
            WHERE(sb.toString());
        }
    }
}