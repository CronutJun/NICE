package com.nicetcm.nibsplus.broker.msg.mapper;

import static org.apache.ibatis.jdbc.SqlBuilder.BEGIN;
import static org.apache.ibatis.jdbc.SqlBuilder.DELETE_FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.INSERT_INTO;
import static org.apache.ibatis.jdbc.SqlBuilder.ORDER_BY;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT_DISTINCT;
import static org.apache.ibatis.jdbc.SqlBuilder.SET;
import static org.apache.ibatis.jdbc.SqlBuilder.SQL;
import static org.apache.ibatis.jdbc.SqlBuilder.UPDATE;
import static org.apache.ibatis.jdbc.SqlBuilder.VALUES;
import static org.apache.ibatis.jdbc.SqlBuilder.WHERE;

import com.nicetcm.nibsplus.broker.msg.model.TFnEmartAmt;
import com.nicetcm.nibsplus.broker.msg.model.TFnEmartAmtSpec.Criteria;
import com.nicetcm.nibsplus.broker.msg.model.TFnEmartAmtSpec.Criterion;
import com.nicetcm.nibsplus.broker.msg.model.TFnEmartAmtSpec;
import java.util.List;
import java.util.Map;

public class TFnEmartAmtSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_FN_EMART_AMT
     *
     * @mbggenerated Tue Jul 22 11:13:55 KST 2014
     */
    public String countBySpec(TFnEmartAmtSpec spec) {
        BEGIN();
        SELECT("count(*)");
        FROM("OP.T_FN_EMART_AMT");
        applyWhere(spec, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_FN_EMART_AMT
     *
     * @mbggenerated Tue Jul 22 11:13:55 KST 2014
     */
    public String deleteBySpec(TFnEmartAmtSpec spec) {
        BEGIN();
        DELETE_FROM("OP.T_FN_EMART_AMT");
        applyWhere(spec, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_FN_EMART_AMT
     *
     * @mbggenerated Tue Jul 22 11:13:55 KST 2014
     */
    public String insertSelective(TFnEmartAmt record) {
        BEGIN();
        INSERT_INTO("OP.T_FN_EMART_AMT");
        
        if (record.getSendDate() != null) {
            VALUES("SEND_DATE", "#{sendDate,jdbcType=VARCHAR}");
        }
        
        if (record.getCarryGroupCd() != null) {
            VALUES("CARRY_GROUP_CD", "#{carryGroupCd,jdbcType=VARCHAR}");
        }
        
        if (record.getCarryOrgCd() != null) {
            VALUES("CARRY_ORG_CD", "#{carryOrgCd,jdbcType=VARCHAR}");
        }
        
        if (record.getEmartCw53Amt() != null) {
            VALUES("EMART_CW53_AMT", "#{emartCw53Amt,jdbcType=DECIMAL}");
        }
        
        if (record.getEmartCw13Amt() != null) {
            VALUES("EMART_CW13_AMT", "#{emartCw13Amt,jdbcType=DECIMAL}");
        }
        
        if (record.getEmartCw52Amt() != null) {
            VALUES("EMART_CW52_AMT", "#{emartCw52Amt,jdbcType=DECIMAL}");
        }
        
        if (record.getEmartCw12Amt() != null) {
            VALUES("EMART_CW12_AMT", "#{emartCw12Amt,jdbcType=DECIMAL}");
        }
        
        if (record.getEmartCw51Amt() != null) {
            VALUES("EMART_CW51_AMT", "#{emartCw51Amt,jdbcType=DECIMAL}");
        }
        
        if (record.getEmartCw11Amt() != null) {
            VALUES("EMART_CW11_AMT", "#{emartCw11Amt,jdbcType=DECIMAL}");
        }
        
        if (record.getNiceCw53Amt() != null) {
            VALUES("NICE_CW53_AMT", "#{niceCw53Amt,jdbcType=DECIMAL}");
        }
        
        if (record.getNiceCw13Amt() != null) {
            VALUES("NICE_CW13_AMT", "#{niceCw13Amt,jdbcType=DECIMAL}");
        }
        
        if (record.getNiceCw52Amt() != null) {
            VALUES("NICE_CW52_AMT", "#{niceCw52Amt,jdbcType=DECIMAL}");
        }
        
        if (record.getNiceCw12Amt() != null) {
            VALUES("NICE_CW12_AMT", "#{niceCw12Amt,jdbcType=DECIMAL}");
        }
        
        if (record.getNiceCw51Amt() != null) {
            VALUES("NICE_CW51_AMT", "#{niceCw51Amt,jdbcType=DECIMAL}");
        }
        
        if (record.getNiceCw11Amt() != null) {
            VALUES("NICE_CW11_AMT", "#{niceCw11Amt,jdbcType=DECIMAL}");
        }
        
        if (record.getInsertDate() != null) {
            VALUES("INSERT_DATE", "#{insertDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getInsertUid() != null) {
            VALUES("INSERT_UID", "#{insertUid,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdateDate() != null) {
            VALUES("UPDATE_DATE", "#{updateDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdateUid() != null) {
            VALUES("UPDATE_UID", "#{updateUid,jdbcType=VARCHAR}");
        }
        
        if (record.getFixDate() != null) {
            VALUES("FIX_DATE", "#{fixDate,jdbcType=VARCHAR}");
        }
        
        if (record.getEmart50000Amt() != null) {
            VALUES("EMART_50000_AMT", "#{emart50000Amt,jdbcType=DECIMAL}");
        }
        
        if (record.getEmart10000Amt() != null) {
            VALUES("EMART_10000_AMT", "#{emart10000Amt,jdbcType=DECIMAL}");
        }
        
        if (record.getNice50000Amt() != null) {
            VALUES("NICE_50000_AMT", "#{nice50000Amt,jdbcType=DECIMAL}");
        }
        
        if (record.getNice10000Amt() != null) {
            VALUES("NICE_10000_AMT", "#{nice10000Amt,jdbcType=DECIMAL}");
        }
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_FN_EMART_AMT
     *
     * @mbggenerated Tue Jul 22 11:13:55 KST 2014
     */
    public String selectBySpec(TFnEmartAmtSpec spec) {
        BEGIN();
        if (spec != null && spec.isDistinct()) {
            SELECT_DISTINCT("SEND_DATE");
        } else {
            SELECT("SEND_DATE");
        }
        SELECT("CARRY_GROUP_CD");
        SELECT("CARRY_ORG_CD");
        SELECT("EMART_CW53_AMT");
        SELECT("EMART_CW13_AMT");
        SELECT("EMART_CW52_AMT");
        SELECT("EMART_CW12_AMT");
        SELECT("EMART_CW51_AMT");
        SELECT("EMART_CW11_AMT");
        SELECT("NICE_CW53_AMT");
        SELECT("NICE_CW13_AMT");
        SELECT("NICE_CW52_AMT");
        SELECT("NICE_CW12_AMT");
        SELECT("NICE_CW51_AMT");
        SELECT("NICE_CW11_AMT");
        SELECT("INSERT_DATE");
        SELECT("INSERT_UID");
        SELECT("UPDATE_DATE");
        SELECT("UPDATE_UID");
        SELECT("FIX_DATE");
        SELECT("EMART_50000_AMT");
        SELECT("EMART_10000_AMT");
        SELECT("NICE_50000_AMT");
        SELECT("NICE_10000_AMT");
        FROM("OP.T_FN_EMART_AMT");
        applyWhere(spec, false);
        
        if (spec != null && spec.getOrderByClause() != null) {
            ORDER_BY(spec.getOrderByClause());
        }
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_FN_EMART_AMT
     *
     * @mbggenerated Tue Jul 22 11:13:55 KST 2014
     */
    public String updateBySpecSelective(Map<String, Object> parameter) {
        TFnEmartAmt record = (TFnEmartAmt) parameter.get("record");
        TFnEmartAmtSpec spec = (TFnEmartAmtSpec) parameter.get("spec");
        
        BEGIN();
        UPDATE("OP.T_FN_EMART_AMT");
        
        if (record.getSendDate() != null) {
            SET("SEND_DATE = #{record.sendDate,jdbcType=VARCHAR}");
        }
        
        if (record.getCarryGroupCd() != null) {
            SET("CARRY_GROUP_CD = #{record.carryGroupCd,jdbcType=VARCHAR}");
        }
        
        if (record.getCarryOrgCd() != null) {
            SET("CARRY_ORG_CD = #{record.carryOrgCd,jdbcType=VARCHAR}");
        }
        
        if (record.getEmartCw53Amt() != null) {
            SET("EMART_CW53_AMT = #{record.emartCw53Amt,jdbcType=DECIMAL}");
        }
        
        if (record.getEmartCw13Amt() != null) {
            SET("EMART_CW13_AMT = #{record.emartCw13Amt,jdbcType=DECIMAL}");
        }
        
        if (record.getEmartCw52Amt() != null) {
            SET("EMART_CW52_AMT = #{record.emartCw52Amt,jdbcType=DECIMAL}");
        }
        
        if (record.getEmartCw12Amt() != null) {
            SET("EMART_CW12_AMT = #{record.emartCw12Amt,jdbcType=DECIMAL}");
        }
        
        if (record.getEmartCw51Amt() != null) {
            SET("EMART_CW51_AMT = #{record.emartCw51Amt,jdbcType=DECIMAL}");
        }
        
        if (record.getEmartCw11Amt() != null) {
            SET("EMART_CW11_AMT = #{record.emartCw11Amt,jdbcType=DECIMAL}");
        }
        
        if (record.getNiceCw53Amt() != null) {
            SET("NICE_CW53_AMT = #{record.niceCw53Amt,jdbcType=DECIMAL}");
        }
        
        if (record.getNiceCw13Amt() != null) {
            SET("NICE_CW13_AMT = #{record.niceCw13Amt,jdbcType=DECIMAL}");
        }
        
        if (record.getNiceCw52Amt() != null) {
            SET("NICE_CW52_AMT = #{record.niceCw52Amt,jdbcType=DECIMAL}");
        }
        
        if (record.getNiceCw12Amt() != null) {
            SET("NICE_CW12_AMT = #{record.niceCw12Amt,jdbcType=DECIMAL}");
        }
        
        if (record.getNiceCw51Amt() != null) {
            SET("NICE_CW51_AMT = #{record.niceCw51Amt,jdbcType=DECIMAL}");
        }
        
        if (record.getNiceCw11Amt() != null) {
            SET("NICE_CW11_AMT = #{record.niceCw11Amt,jdbcType=DECIMAL}");
        }
        
        if (record.getInsertDate() != null) {
            SET("INSERT_DATE = #{record.insertDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getInsertUid() != null) {
            SET("INSERT_UID = #{record.insertUid,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdateDate() != null) {
            SET("UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdateUid() != null) {
            SET("UPDATE_UID = #{record.updateUid,jdbcType=VARCHAR}");
        }
        
        if (record.getFixDate() != null) {
            SET("FIX_DATE = #{record.fixDate,jdbcType=VARCHAR}");
        }
        
        if (record.getEmart50000Amt() != null) {
            SET("EMART_50000_AMT = #{record.emart50000Amt,jdbcType=DECIMAL}");
        }
        
        if (record.getEmart10000Amt() != null) {
            SET("EMART_10000_AMT = #{record.emart10000Amt,jdbcType=DECIMAL}");
        }
        
        if (record.getNice50000Amt() != null) {
            SET("NICE_50000_AMT = #{record.nice50000Amt,jdbcType=DECIMAL}");
        }
        
        if (record.getNice10000Amt() != null) {
            SET("NICE_10000_AMT = #{record.nice10000Amt,jdbcType=DECIMAL}");
        }
        
        applyWhere(spec, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_FN_EMART_AMT
     *
     * @mbggenerated Tue Jul 22 11:13:55 KST 2014
     */
    public String updateBySpec(Map<String, Object> parameter) {
        BEGIN();
        UPDATE("OP.T_FN_EMART_AMT");
        
        SET("SEND_DATE = #{record.sendDate,jdbcType=VARCHAR}");
        SET("CARRY_GROUP_CD = #{record.carryGroupCd,jdbcType=VARCHAR}");
        SET("CARRY_ORG_CD = #{record.carryOrgCd,jdbcType=VARCHAR}");
        SET("EMART_CW53_AMT = #{record.emartCw53Amt,jdbcType=DECIMAL}");
        SET("EMART_CW13_AMT = #{record.emartCw13Amt,jdbcType=DECIMAL}");
        SET("EMART_CW52_AMT = #{record.emartCw52Amt,jdbcType=DECIMAL}");
        SET("EMART_CW12_AMT = #{record.emartCw12Amt,jdbcType=DECIMAL}");
        SET("EMART_CW51_AMT = #{record.emartCw51Amt,jdbcType=DECIMAL}");
        SET("EMART_CW11_AMT = #{record.emartCw11Amt,jdbcType=DECIMAL}");
        SET("NICE_CW53_AMT = #{record.niceCw53Amt,jdbcType=DECIMAL}");
        SET("NICE_CW13_AMT = #{record.niceCw13Amt,jdbcType=DECIMAL}");
        SET("NICE_CW52_AMT = #{record.niceCw52Amt,jdbcType=DECIMAL}");
        SET("NICE_CW12_AMT = #{record.niceCw12Amt,jdbcType=DECIMAL}");
        SET("NICE_CW51_AMT = #{record.niceCw51Amt,jdbcType=DECIMAL}");
        SET("NICE_CW11_AMT = #{record.niceCw11Amt,jdbcType=DECIMAL}");
        SET("INSERT_DATE = #{record.insertDate,jdbcType=TIMESTAMP}");
        SET("INSERT_UID = #{record.insertUid,jdbcType=VARCHAR}");
        SET("UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP}");
        SET("UPDATE_UID = #{record.updateUid,jdbcType=VARCHAR}");
        SET("FIX_DATE = #{record.fixDate,jdbcType=VARCHAR}");
        SET("EMART_50000_AMT = #{record.emart50000Amt,jdbcType=DECIMAL}");
        SET("EMART_10000_AMT = #{record.emart10000Amt,jdbcType=DECIMAL}");
        SET("NICE_50000_AMT = #{record.nice50000Amt,jdbcType=DECIMAL}");
        SET("NICE_10000_AMT = #{record.nice10000Amt,jdbcType=DECIMAL}");
        
        TFnEmartAmtSpec spec = (TFnEmartAmtSpec) parameter.get("spec");
        applyWhere(spec, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_FN_EMART_AMT
     *
     * @mbggenerated Tue Jul 22 11:13:55 KST 2014
     */
    public String updateByPrimaryKeySelective(TFnEmartAmt record) {
        BEGIN();
        UPDATE("OP.T_FN_EMART_AMT");
        
        if (record.getEmartCw53Amt() != null) {
            SET("EMART_CW53_AMT = #{emartCw53Amt,jdbcType=DECIMAL}");
        }
        
        if (record.getEmartCw13Amt() != null) {
            SET("EMART_CW13_AMT = #{emartCw13Amt,jdbcType=DECIMAL}");
        }
        
        if (record.getEmartCw52Amt() != null) {
            SET("EMART_CW52_AMT = #{emartCw52Amt,jdbcType=DECIMAL}");
        }
        
        if (record.getEmartCw12Amt() != null) {
            SET("EMART_CW12_AMT = #{emartCw12Amt,jdbcType=DECIMAL}");
        }
        
        if (record.getEmartCw51Amt() != null) {
            SET("EMART_CW51_AMT = #{emartCw51Amt,jdbcType=DECIMAL}");
        }
        
        if (record.getEmartCw11Amt() != null) {
            SET("EMART_CW11_AMT = #{emartCw11Amt,jdbcType=DECIMAL}");
        }
        
        if (record.getNiceCw53Amt() != null) {
            SET("NICE_CW53_AMT = #{niceCw53Amt,jdbcType=DECIMAL}");
        }
        
        if (record.getNiceCw13Amt() != null) {
            SET("NICE_CW13_AMT = #{niceCw13Amt,jdbcType=DECIMAL}");
        }
        
        if (record.getNiceCw52Amt() != null) {
            SET("NICE_CW52_AMT = #{niceCw52Amt,jdbcType=DECIMAL}");
        }
        
        if (record.getNiceCw12Amt() != null) {
            SET("NICE_CW12_AMT = #{niceCw12Amt,jdbcType=DECIMAL}");
        }
        
        if (record.getNiceCw51Amt() != null) {
            SET("NICE_CW51_AMT = #{niceCw51Amt,jdbcType=DECIMAL}");
        }
        
        if (record.getNiceCw11Amt() != null) {
            SET("NICE_CW11_AMT = #{niceCw11Amt,jdbcType=DECIMAL}");
        }
        
        if (record.getInsertDate() != null) {
            SET("INSERT_DATE = #{insertDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getInsertUid() != null) {
            SET("INSERT_UID = #{insertUid,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdateDate() != null) {
            SET("UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdateUid() != null) {
            SET("UPDATE_UID = #{updateUid,jdbcType=VARCHAR}");
        }
        
        if (record.getFixDate() != null) {
            SET("FIX_DATE = #{fixDate,jdbcType=VARCHAR}");
        }
        
        if (record.getEmart50000Amt() != null) {
            SET("EMART_50000_AMT = #{emart50000Amt,jdbcType=DECIMAL}");
        }
        
        if (record.getEmart10000Amt() != null) {
            SET("EMART_10000_AMT = #{emart10000Amt,jdbcType=DECIMAL}");
        }
        
        if (record.getNice50000Amt() != null) {
            SET("NICE_50000_AMT = #{nice50000Amt,jdbcType=DECIMAL}");
        }
        
        if (record.getNice10000Amt() != null) {
            SET("NICE_10000_AMT = #{nice10000Amt,jdbcType=DECIMAL}");
        }
        
        WHERE("SEND_DATE = #{sendDate,jdbcType=VARCHAR}");
        WHERE("CARRY_GROUP_CD = #{carryGroupCd,jdbcType=VARCHAR}");
        WHERE("CARRY_ORG_CD = #{carryOrgCd,jdbcType=VARCHAR}");
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_FN_EMART_AMT
     *
     * @mbggenerated Tue Jul 22 11:13:55 KST 2014
     */
    protected void applyWhere(TFnEmartAmtSpec spec, boolean includeSpecPhrase) {
        if (spec == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeSpecPhrase) {
            parmPhrase1 = "%s #{spec.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{spec.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{spec.oredCriteria[%d].allCriteria[%d].value} and #{spec.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{spec.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{spec.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{spec.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{spec.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = spec.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            WHERE(sb.toString());
        }
    }
}