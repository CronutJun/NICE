package com.nicetcm.nibsplus.broker.msg.mapper;

import static org.apache.ibatis.jdbc.SqlBuilder.BEGIN;
import static org.apache.ibatis.jdbc.SqlBuilder.DELETE_FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.INSERT_INTO;
import static org.apache.ibatis.jdbc.SqlBuilder.ORDER_BY;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT_DISTINCT;
import static org.apache.ibatis.jdbc.SqlBuilder.SET;
import static org.apache.ibatis.jdbc.SqlBuilder.SQL;
import static org.apache.ibatis.jdbc.SqlBuilder.UPDATE;
import static org.apache.ibatis.jdbc.SqlBuilder.VALUES;
import static org.apache.ibatis.jdbc.SqlBuilder.WHERE;

import com.nicetcm.nibsplus.broker.msg.model.TCmSiteCheckDay;
import com.nicetcm.nibsplus.broker.msg.model.TCmSiteCheckDaySpec.Criteria;
import com.nicetcm.nibsplus.broker.msg.model.TCmSiteCheckDaySpec.Criterion;
import com.nicetcm.nibsplus.broker.msg.model.TCmSiteCheckDaySpec;
import java.util.List;
import java.util.Map;

public class TCmSiteCheckDaySqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CM_SITE_CHECK_DAY
     *
     * @mbggenerated Thu Jul 31 14:31:00 KST 2014
     */
    public String countBySpec(TCmSiteCheckDaySpec spec) {
        BEGIN();
        SELECT("count(*)");
        FROM("OP.T_CM_SITE_CHECK_DAY");
        applyWhere(spec, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CM_SITE_CHECK_DAY
     *
     * @mbggenerated Thu Jul 31 14:31:00 KST 2014
     */
    public String deleteBySpec(TCmSiteCheckDaySpec spec) {
        BEGIN();
        DELETE_FROM("OP.T_CM_SITE_CHECK_DAY");
        applyWhere(spec, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CM_SITE_CHECK_DAY
     *
     * @mbggenerated Thu Jul 31 14:31:00 KST 2014
     */
    public String insertSelective(TCmSiteCheckDay record) {
        BEGIN();
        INSERT_INTO("OP.T_CM_SITE_CHECK_DAY");
        
        if (record.getCheckDate() != null) {
            VALUES("CHECK_DATE", "#{checkDate,jdbcType=VARCHAR}");
        }
        
        if (record.getOrgCd() != null) {
            VALUES("ORG_CD", "#{orgCd,jdbcType=VARCHAR}");
        }
        
        if (record.getBranchCd() != null) {
            VALUES("BRANCH_CD", "#{branchCd,jdbcType=VARCHAR}");
        }
        
        if (record.getSiteCd() != null) {
            VALUES("SITE_CD", "#{siteCd,jdbcType=VARCHAR}");
        }
        
        if (record.getMacInClean() != null) {
            VALUES("MAC_IN_CLEAN", "#{macInClean,jdbcType=VARCHAR}");
        }
        
        if (record.getMacOutClean() != null) {
            VALUES("MAC_OUT_CLEAN", "#{macOutClean,jdbcType=VARCHAR}");
        }
        
        if (record.getInterphoneClean() != null) {
            VALUES("INTERPHONE_CLEAN", "#{interphoneClean,jdbcType=VARCHAR}");
        }
        
        if (record.getGroundClean() != null) {
            VALUES("GROUND_CLEAN", "#{groundClean,jdbcType=VARCHAR}");
        }
        
        if (record.getGarbageClean() != null) {
            VALUES("GARBAGE_CLEAN", "#{garbageClean,jdbcType=VARCHAR}");
        }
        
        if (record.getGlassClean() != null) {
            VALUES("GLASS_CLEAN", "#{glassClean,jdbcType=VARCHAR}");
        }
        
        if (record.getPortfolioCnt() != null) {
            VALUES("PORTFOLIO_CNT", "#{portfolioCnt,jdbcType=VARCHAR}");
        }
        
        if (record.getJunulCnt() != null) {
            VALUES("JUNUL_CNT", "#{junulCnt,jdbcType=VARCHAR}");
        }
        
        if (record.getRibbonCnt() != null) {
            VALUES("RIBBON_CNT", "#{ribbonCnt,jdbcType=VARCHAR}");
        }
        
        if (record.getGuideState() != null) {
            VALUES("GUIDE_STATE", "#{guideState,jdbcType=VARCHAR}");
        }
        
        if (record.getStickerState() != null) {
            VALUES("STICKER_STATE", "#{stickerState,jdbcType=VARCHAR}");
        }
        
        if (record.getInterphoneState() != null) {
            VALUES("INTERPHONE_STATE", "#{interphoneState,jdbcType=VARCHAR}");
        }
        
        if (record.getDvrState() != null) {
            VALUES("DVR_STATE", "#{dvrState,jdbcType=VARCHAR}");
        }
        
        if (record.getLampState() != null) {
            VALUES("LAMP_STATE", "#{lampState,jdbcType=VARCHAR}");
        }
        
        if (record.getAirconState() != null) {
            VALUES("AIRCON_STATE", "#{airconState,jdbcType=VARCHAR}");
        }
        
        if (record.getHeaterState() != null) {
            VALUES("HEATER_STATE", "#{heaterState,jdbcType=VARCHAR}");
        }
        
        if (record.getBoothCheck() != null) {
            VALUES("BOOTH_CHECK", "#{boothCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getCheckRemain() != null) {
            VALUES("CHECK_REMAIN", "#{checkRemain,jdbcType=VARCHAR}");
        }
        
        if (record.getCollectionCheck() != null) {
            VALUES("COLLECTION_CHECK", "#{collectionCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getSignLampCheck() != null) {
            VALUES("SIGN_LAMP_CHECK", "#{signLampCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getPhotoUrl() != null) {
            VALUES("PHOTO_URL", "#{photoUrl,jdbcType=VARCHAR}");
        }
        
        if (record.getOutSignPhoto() != null) {
            VALUES("OUT_SIGN_PHOTO", "#{outSignPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getGatePhoto() != null) {
            VALUES("GATE_PHOTO", "#{gatePhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getFloorPhoto() != null) {
            VALUES("FLOOR_PHOTO", "#{floorPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getLeftBoothPhoto() != null) {
            VALUES("LEFT_BOOTH_PHOTO", "#{leftBoothPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getRightBoothPhoto() != null) {
            VALUES("RIGHT_BOOTH_PHOTO", "#{rightBoothPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getUpPhoto() != null) {
            VALUES("UP_PHOTO", "#{upPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getMacUpPhoto() != null) {
            VALUES("MAC_UP_PHOTO", "#{macUpPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getMacDownPhoto() != null) {
            VALUES("MAC_DOWN_PHOTO", "#{macDownPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getRemark() != null) {
            VALUES("REMARK", "#{remark,jdbcType=VARCHAR}");
        }
        
        if (record.getMemberId() != null) {
            VALUES("MEMBER_ID", "#{memberId,jdbcType=VARCHAR}");
        }
        
        if (record.getPhotoYn() != null) {
            VALUES("PHOTO_YN", "#{photoYn,jdbcType=VARCHAR}");
        }
        
        if (record.getOrgSendYn() != null) {
            VALUES("ORG_SEND_YN", "#{orgSendYn,jdbcType=VARCHAR}");
        }
        
        if (record.getOrgSendDate() != null) {
            VALUES("ORG_SEND_DATE", "#{orgSendDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdateDate() != null) {
            VALUES("UPDATE_DATE", "#{updateDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdateUid() != null) {
            VALUES("UPDATE_UID", "#{updateUid,jdbcType=VARCHAR}");
        }
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CM_SITE_CHECK_DAY
     *
     * @mbggenerated Thu Jul 31 14:31:00 KST 2014
     */
    public String selectBySpec(TCmSiteCheckDaySpec spec) {
        BEGIN();
        if (spec != null && spec.isDistinct()) {
            SELECT_DISTINCT("CHECK_DATE");
        } else {
            SELECT("CHECK_DATE");
        }
        SELECT("ORG_CD");
        SELECT("BRANCH_CD");
        SELECT("SITE_CD");
        SELECT("MAC_IN_CLEAN");
        SELECT("MAC_OUT_CLEAN");
        SELECT("INTERPHONE_CLEAN");
        SELECT("GROUND_CLEAN");
        SELECT("GARBAGE_CLEAN");
        SELECT("GLASS_CLEAN");
        SELECT("PORTFOLIO_CNT");
        SELECT("JUNUL_CNT");
        SELECT("RIBBON_CNT");
        SELECT("GUIDE_STATE");
        SELECT("STICKER_STATE");
        SELECT("INTERPHONE_STATE");
        SELECT("DVR_STATE");
        SELECT("LAMP_STATE");
        SELECT("AIRCON_STATE");
        SELECT("HEATER_STATE");
        SELECT("BOOTH_CHECK");
        SELECT("CHECK_REMAIN");
        SELECT("COLLECTION_CHECK");
        SELECT("SIGN_LAMP_CHECK");
        SELECT("PHOTO_URL");
        SELECT("OUT_SIGN_PHOTO");
        SELECT("GATE_PHOTO");
        SELECT("FLOOR_PHOTO");
        SELECT("LEFT_BOOTH_PHOTO");
        SELECT("RIGHT_BOOTH_PHOTO");
        SELECT("UP_PHOTO");
        SELECT("MAC_UP_PHOTO");
        SELECT("MAC_DOWN_PHOTO");
        SELECT("REMARK");
        SELECT("MEMBER_ID");
        SELECT("PHOTO_YN");
        SELECT("ORG_SEND_YN");
        SELECT("ORG_SEND_DATE");
        SELECT("UPDATE_DATE");
        SELECT("UPDATE_UID");
        FROM("OP.T_CM_SITE_CHECK_DAY");
        applyWhere(spec, false);
        
        if (spec != null && spec.getOrderByClause() != null) {
            ORDER_BY(spec.getOrderByClause());
        }
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CM_SITE_CHECK_DAY
     *
     * @mbggenerated Thu Jul 31 14:31:00 KST 2014
     */
    public String updateBySpecSelective(Map<String, Object> parameter) {
        TCmSiteCheckDay record = (TCmSiteCheckDay) parameter.get("record");
        TCmSiteCheckDaySpec spec = (TCmSiteCheckDaySpec) parameter.get("spec");
        
        BEGIN();
        UPDATE("OP.T_CM_SITE_CHECK_DAY");
        
        if (record.getCheckDate() != null) {
            SET("CHECK_DATE = #{record.checkDate,jdbcType=VARCHAR}");
        }
        
        if (record.getOrgCd() != null) {
            SET("ORG_CD = #{record.orgCd,jdbcType=VARCHAR}");
        }
        
        if (record.getBranchCd() != null) {
            SET("BRANCH_CD = #{record.branchCd,jdbcType=VARCHAR}");
        }
        
        if (record.getSiteCd() != null) {
            SET("SITE_CD = #{record.siteCd,jdbcType=VARCHAR}");
        }
        
        if (record.getMacInClean() != null) {
            SET("MAC_IN_CLEAN = #{record.macInClean,jdbcType=VARCHAR}");
        }
        
        if (record.getMacOutClean() != null) {
            SET("MAC_OUT_CLEAN = #{record.macOutClean,jdbcType=VARCHAR}");
        }
        
        if (record.getInterphoneClean() != null) {
            SET("INTERPHONE_CLEAN = #{record.interphoneClean,jdbcType=VARCHAR}");
        }
        
        if (record.getGroundClean() != null) {
            SET("GROUND_CLEAN = #{record.groundClean,jdbcType=VARCHAR}");
        }
        
        if (record.getGarbageClean() != null) {
            SET("GARBAGE_CLEAN = #{record.garbageClean,jdbcType=VARCHAR}");
        }
        
        if (record.getGlassClean() != null) {
            SET("GLASS_CLEAN = #{record.glassClean,jdbcType=VARCHAR}");
        }
        
        if (record.getPortfolioCnt() != null) {
            SET("PORTFOLIO_CNT = #{record.portfolioCnt,jdbcType=VARCHAR}");
        }
        
        if (record.getJunulCnt() != null) {
            SET("JUNUL_CNT = #{record.junulCnt,jdbcType=VARCHAR}");
        }
        
        if (record.getRibbonCnt() != null) {
            SET("RIBBON_CNT = #{record.ribbonCnt,jdbcType=VARCHAR}");
        }
        
        if (record.getGuideState() != null) {
            SET("GUIDE_STATE = #{record.guideState,jdbcType=VARCHAR}");
        }
        
        if (record.getStickerState() != null) {
            SET("STICKER_STATE = #{record.stickerState,jdbcType=VARCHAR}");
        }
        
        if (record.getInterphoneState() != null) {
            SET("INTERPHONE_STATE = #{record.interphoneState,jdbcType=VARCHAR}");
        }
        
        if (record.getDvrState() != null) {
            SET("DVR_STATE = #{record.dvrState,jdbcType=VARCHAR}");
        }
        
        if (record.getLampState() != null) {
            SET("LAMP_STATE = #{record.lampState,jdbcType=VARCHAR}");
        }
        
        if (record.getAirconState() != null) {
            SET("AIRCON_STATE = #{record.airconState,jdbcType=VARCHAR}");
        }
        
        if (record.getHeaterState() != null) {
            SET("HEATER_STATE = #{record.heaterState,jdbcType=VARCHAR}");
        }
        
        if (record.getBoothCheck() != null) {
            SET("BOOTH_CHECK = #{record.boothCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getCheckRemain() != null) {
            SET("CHECK_REMAIN = #{record.checkRemain,jdbcType=VARCHAR}");
        }
        
        if (record.getCollectionCheck() != null) {
            SET("COLLECTION_CHECK = #{record.collectionCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getSignLampCheck() != null) {
            SET("SIGN_LAMP_CHECK = #{record.signLampCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getPhotoUrl() != null) {
            SET("PHOTO_URL = #{record.photoUrl,jdbcType=VARCHAR}");
        }
        
        if (record.getOutSignPhoto() != null) {
            SET("OUT_SIGN_PHOTO = #{record.outSignPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getGatePhoto() != null) {
            SET("GATE_PHOTO = #{record.gatePhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getFloorPhoto() != null) {
            SET("FLOOR_PHOTO = #{record.floorPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getLeftBoothPhoto() != null) {
            SET("LEFT_BOOTH_PHOTO = #{record.leftBoothPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getRightBoothPhoto() != null) {
            SET("RIGHT_BOOTH_PHOTO = #{record.rightBoothPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getUpPhoto() != null) {
            SET("UP_PHOTO = #{record.upPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getMacUpPhoto() != null) {
            SET("MAC_UP_PHOTO = #{record.macUpPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getMacDownPhoto() != null) {
            SET("MAC_DOWN_PHOTO = #{record.macDownPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getRemark() != null) {
            SET("REMARK = #{record.remark,jdbcType=VARCHAR}");
        }
        
        if (record.getMemberId() != null) {
            SET("MEMBER_ID = #{record.memberId,jdbcType=VARCHAR}");
        }
        
        if (record.getPhotoYn() != null) {
            SET("PHOTO_YN = #{record.photoYn,jdbcType=VARCHAR}");
        }
        
        if (record.getOrgSendYn() != null) {
            SET("ORG_SEND_YN = #{record.orgSendYn,jdbcType=VARCHAR}");
        }
        
        if (record.getOrgSendDate() != null) {
            SET("ORG_SEND_DATE = #{record.orgSendDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdateDate() != null) {
            SET("UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdateUid() != null) {
            SET("UPDATE_UID = #{record.updateUid,jdbcType=VARCHAR}");
        }
        
        applyWhere(spec, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CM_SITE_CHECK_DAY
     *
     * @mbggenerated Thu Jul 31 14:31:00 KST 2014
     */
    public String updateBySpec(Map<String, Object> parameter) {
        BEGIN();
        UPDATE("OP.T_CM_SITE_CHECK_DAY");
        
        SET("CHECK_DATE = #{record.checkDate,jdbcType=VARCHAR}");
        SET("ORG_CD = #{record.orgCd,jdbcType=VARCHAR}");
        SET("BRANCH_CD = #{record.branchCd,jdbcType=VARCHAR}");
        SET("SITE_CD = #{record.siteCd,jdbcType=VARCHAR}");
        SET("MAC_IN_CLEAN = #{record.macInClean,jdbcType=VARCHAR}");
        SET("MAC_OUT_CLEAN = #{record.macOutClean,jdbcType=VARCHAR}");
        SET("INTERPHONE_CLEAN = #{record.interphoneClean,jdbcType=VARCHAR}");
        SET("GROUND_CLEAN = #{record.groundClean,jdbcType=VARCHAR}");
        SET("GARBAGE_CLEAN = #{record.garbageClean,jdbcType=VARCHAR}");
        SET("GLASS_CLEAN = #{record.glassClean,jdbcType=VARCHAR}");
        SET("PORTFOLIO_CNT = #{record.portfolioCnt,jdbcType=VARCHAR}");
        SET("JUNUL_CNT = #{record.junulCnt,jdbcType=VARCHAR}");
        SET("RIBBON_CNT = #{record.ribbonCnt,jdbcType=VARCHAR}");
        SET("GUIDE_STATE = #{record.guideState,jdbcType=VARCHAR}");
        SET("STICKER_STATE = #{record.stickerState,jdbcType=VARCHAR}");
        SET("INTERPHONE_STATE = #{record.interphoneState,jdbcType=VARCHAR}");
        SET("DVR_STATE = #{record.dvrState,jdbcType=VARCHAR}");
        SET("LAMP_STATE = #{record.lampState,jdbcType=VARCHAR}");
        SET("AIRCON_STATE = #{record.airconState,jdbcType=VARCHAR}");
        SET("HEATER_STATE = #{record.heaterState,jdbcType=VARCHAR}");
        SET("BOOTH_CHECK = #{record.boothCheck,jdbcType=VARCHAR}");
        SET("CHECK_REMAIN = #{record.checkRemain,jdbcType=VARCHAR}");
        SET("COLLECTION_CHECK = #{record.collectionCheck,jdbcType=VARCHAR}");
        SET("SIGN_LAMP_CHECK = #{record.signLampCheck,jdbcType=VARCHAR}");
        SET("PHOTO_URL = #{record.photoUrl,jdbcType=VARCHAR}");
        SET("OUT_SIGN_PHOTO = #{record.outSignPhoto,jdbcType=VARCHAR}");
        SET("GATE_PHOTO = #{record.gatePhoto,jdbcType=VARCHAR}");
        SET("FLOOR_PHOTO = #{record.floorPhoto,jdbcType=VARCHAR}");
        SET("LEFT_BOOTH_PHOTO = #{record.leftBoothPhoto,jdbcType=VARCHAR}");
        SET("RIGHT_BOOTH_PHOTO = #{record.rightBoothPhoto,jdbcType=VARCHAR}");
        SET("UP_PHOTO = #{record.upPhoto,jdbcType=VARCHAR}");
        SET("MAC_UP_PHOTO = #{record.macUpPhoto,jdbcType=VARCHAR}");
        SET("MAC_DOWN_PHOTO = #{record.macDownPhoto,jdbcType=VARCHAR}");
        SET("REMARK = #{record.remark,jdbcType=VARCHAR}");
        SET("MEMBER_ID = #{record.memberId,jdbcType=VARCHAR}");
        SET("PHOTO_YN = #{record.photoYn,jdbcType=VARCHAR}");
        SET("ORG_SEND_YN = #{record.orgSendYn,jdbcType=VARCHAR}");
        SET("ORG_SEND_DATE = #{record.orgSendDate,jdbcType=TIMESTAMP}");
        SET("UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP}");
        SET("UPDATE_UID = #{record.updateUid,jdbcType=VARCHAR}");
        
        TCmSiteCheckDaySpec spec = (TCmSiteCheckDaySpec) parameter.get("spec");
        applyWhere(spec, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CM_SITE_CHECK_DAY
     *
     * @mbggenerated Thu Jul 31 14:31:00 KST 2014
     */
    public String updateByPrimaryKeySelective(TCmSiteCheckDay record) {
        BEGIN();
        UPDATE("OP.T_CM_SITE_CHECK_DAY");
        
        if (record.getMacInClean() != null) {
            SET("MAC_IN_CLEAN = #{macInClean,jdbcType=VARCHAR}");
        }
        
        if (record.getMacOutClean() != null) {
            SET("MAC_OUT_CLEAN = #{macOutClean,jdbcType=VARCHAR}");
        }
        
        if (record.getInterphoneClean() != null) {
            SET("INTERPHONE_CLEAN = #{interphoneClean,jdbcType=VARCHAR}");
        }
        
        if (record.getGroundClean() != null) {
            SET("GROUND_CLEAN = #{groundClean,jdbcType=VARCHAR}");
        }
        
        if (record.getGarbageClean() != null) {
            SET("GARBAGE_CLEAN = #{garbageClean,jdbcType=VARCHAR}");
        }
        
        if (record.getGlassClean() != null) {
            SET("GLASS_CLEAN = #{glassClean,jdbcType=VARCHAR}");
        }
        
        if (record.getPortfolioCnt() != null) {
            SET("PORTFOLIO_CNT = #{portfolioCnt,jdbcType=VARCHAR}");
        }
        
        if (record.getJunulCnt() != null) {
            SET("JUNUL_CNT = #{junulCnt,jdbcType=VARCHAR}");
        }
        
        if (record.getRibbonCnt() != null) {
            SET("RIBBON_CNT = #{ribbonCnt,jdbcType=VARCHAR}");
        }
        
        if (record.getGuideState() != null) {
            SET("GUIDE_STATE = #{guideState,jdbcType=VARCHAR}");
        }
        
        if (record.getStickerState() != null) {
            SET("STICKER_STATE = #{stickerState,jdbcType=VARCHAR}");
        }
        
        if (record.getInterphoneState() != null) {
            SET("INTERPHONE_STATE = #{interphoneState,jdbcType=VARCHAR}");
        }
        
        if (record.getDvrState() != null) {
            SET("DVR_STATE = #{dvrState,jdbcType=VARCHAR}");
        }
        
        if (record.getLampState() != null) {
            SET("LAMP_STATE = #{lampState,jdbcType=VARCHAR}");
        }
        
        if (record.getAirconState() != null) {
            SET("AIRCON_STATE = #{airconState,jdbcType=VARCHAR}");
        }
        
        if (record.getHeaterState() != null) {
            SET("HEATER_STATE = #{heaterState,jdbcType=VARCHAR}");
        }
        
        if (record.getBoothCheck() != null) {
            SET("BOOTH_CHECK = #{boothCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getCheckRemain() != null) {
            SET("CHECK_REMAIN = #{checkRemain,jdbcType=VARCHAR}");
        }
        
        if (record.getCollectionCheck() != null) {
            SET("COLLECTION_CHECK = #{collectionCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getSignLampCheck() != null) {
            SET("SIGN_LAMP_CHECK = #{signLampCheck,jdbcType=VARCHAR}");
        }
        
        if (record.getPhotoUrl() != null) {
            SET("PHOTO_URL = #{photoUrl,jdbcType=VARCHAR}");
        }
        
        if (record.getOutSignPhoto() != null) {
            SET("OUT_SIGN_PHOTO = #{outSignPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getGatePhoto() != null) {
            SET("GATE_PHOTO = #{gatePhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getFloorPhoto() != null) {
            SET("FLOOR_PHOTO = #{floorPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getLeftBoothPhoto() != null) {
            SET("LEFT_BOOTH_PHOTO = #{leftBoothPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getRightBoothPhoto() != null) {
            SET("RIGHT_BOOTH_PHOTO = #{rightBoothPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getUpPhoto() != null) {
            SET("UP_PHOTO = #{upPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getMacUpPhoto() != null) {
            SET("MAC_UP_PHOTO = #{macUpPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getMacDownPhoto() != null) {
            SET("MAC_DOWN_PHOTO = #{macDownPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getRemark() != null) {
            SET("REMARK = #{remark,jdbcType=VARCHAR}");
        }
        
        if (record.getMemberId() != null) {
            SET("MEMBER_ID = #{memberId,jdbcType=VARCHAR}");
        }
        
        if (record.getPhotoYn() != null) {
            SET("PHOTO_YN = #{photoYn,jdbcType=VARCHAR}");
        }
        
        if (record.getOrgSendYn() != null) {
            SET("ORG_SEND_YN = #{orgSendYn,jdbcType=VARCHAR}");
        }
        
        if (record.getOrgSendDate() != null) {
            SET("ORG_SEND_DATE = #{orgSendDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdateDate() != null) {
            SET("UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdateUid() != null) {
            SET("UPDATE_UID = #{updateUid,jdbcType=VARCHAR}");
        }
        
        WHERE("CHECK_DATE = #{checkDate,jdbcType=VARCHAR}");
        WHERE("ORG_CD = #{orgCd,jdbcType=VARCHAR}");
        WHERE("BRANCH_CD = #{branchCd,jdbcType=VARCHAR}");
        WHERE("SITE_CD = #{siteCd,jdbcType=VARCHAR}");
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CM_SITE_CHECK_DAY
     *
     * @mbggenerated Thu Jul 31 14:31:00 KST 2014
     */
    protected void applyWhere(TCmSiteCheckDaySpec spec, boolean includeSpecPhrase) {
        if (spec == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeSpecPhrase) {
            parmPhrase1 = "%s #{spec.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{spec.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{spec.oredCriteria[%d].allCriteria[%d].value} and #{spec.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{spec.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{spec.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{spec.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{spec.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = spec.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            WHERE(sb.toString());
        }
    }
}