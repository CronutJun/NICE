package com.nicetcm.nibsplus.broker.msg.mapper;

import static org.apache.ibatis.jdbc.SqlBuilder.BEGIN;
import static org.apache.ibatis.jdbc.SqlBuilder.DELETE_FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.INSERT_INTO;
import static org.apache.ibatis.jdbc.SqlBuilder.ORDER_BY;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT_DISTINCT;
import static org.apache.ibatis.jdbc.SqlBuilder.SET;
import static org.apache.ibatis.jdbc.SqlBuilder.SQL;
import static org.apache.ibatis.jdbc.SqlBuilder.UPDATE;
import static org.apache.ibatis.jdbc.SqlBuilder.VALUES;
import static org.apache.ibatis.jdbc.SqlBuilder.WHERE;

import com.nicetcm.nibsplus.broker.msg.model.TCtPenaltyList;
import com.nicetcm.nibsplus.broker.msg.model.TCtPenaltyListSpec.Criteria;
import com.nicetcm.nibsplus.broker.msg.model.TCtPenaltyListSpec.Criterion;
import com.nicetcm.nibsplus.broker.msg.model.TCtPenaltyListSpec;
import java.util.List;
import java.util.Map;

public class TCtPenaltyListSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_PENALTY_LIST
     *
     * @mbggenerated Thu Jul 31 14:31:01 KST 2014
     */
    public String countBySpec(TCtPenaltyListSpec spec) {
        BEGIN();
        SELECT("count(*)");
        FROM("OP.T_CT_PENALTY_LIST");
        applyWhere(spec, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_PENALTY_LIST
     *
     * @mbggenerated Thu Jul 31 14:31:01 KST 2014
     */
    public String deleteBySpec(TCtPenaltyListSpec spec) {
        BEGIN();
        DELETE_FROM("OP.T_CT_PENALTY_LIST");
        applyWhere(spec, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_PENALTY_LIST
     *
     * @mbggenerated Thu Jul 31 14:31:01 KST 2014
     */
    public String insertSelective(TCtPenaltyList record) {
        BEGIN();
        INSERT_INTO("OP.T_CT_PENALTY_LIST");
        
        if (record.getOrgCd() != null) {
            VALUES("ORG_CD", "#{orgCd,jdbcType=VARCHAR}");
        }
        
        if (record.getBranchCd() != null) {
            VALUES("BRANCH_CD", "#{branchCd,jdbcType=VARCHAR}");
        }
        
        if (record.getMacNo() != null) {
            VALUES("MAC_NO", "#{macNo,jdbcType=VARCHAR}");
        }
        
        if (record.getCreateDate() != null) {
            VALUES("CREATE_DATE", "#{createDate,jdbcType=VARCHAR}");
        }
        
        if (record.getCreateTime() != null) {
            VALUES("CREATE_TIME", "#{createTime,jdbcType=VARCHAR}");
        }
        
        if (record.getCallDate() != null) {
            VALUES("CALL_DATE", "#{callDate,jdbcType=VARCHAR}");
        }
        
        if (record.getCallTime() != null) {
            VALUES("CALL_TIME", "#{callTime,jdbcType=VARCHAR}");
        }
        
        if (record.getSeqNo() != null) {
            VALUES("SEQ_NO", "#{seqNo,jdbcType=DECIMAL}");
        }
        
        if (record.getSiteCd() != null) {
            VALUES("SITE_CD", "#{siteCd,jdbcType=VARCHAR}");
        }
        
        if (record.getSiteNm() != null) {
            VALUES("SITE_NM", "#{siteNm,jdbcType=VARCHAR}");
        }
        
        if (record.getArrivalDate() != null) {
            VALUES("ARRIVAL_DATE", "#{arrivalDate,jdbcType=VARCHAR}");
        }
        
        if (record.getArrivalTime() != null) {
            VALUES("ARRIVAL_TIME", "#{arrivalTime,jdbcType=VARCHAR}");
        }
        
        if (record.getRepairDate() != null) {
            VALUES("REPAIR_DATE", "#{repairDate,jdbcType=VARCHAR}");
        }
        
        if (record.getRepairTime() != null) {
            VALUES("REPAIR_TIME", "#{repairTime,jdbcType=VARCHAR}");
        }
        
        if (record.getMacModel() != null) {
            VALUES("MAC_MODEL", "#{macModel,jdbcType=VARCHAR}");
        }
        
        if (record.getMemo() != null) {
            VALUES("MEMO", "#{memo,jdbcType=VARCHAR}");
        }
        
        if (record.getPenaltyAmt() != null) {
            VALUES("PENALTY_AMT", "#{penaltyAmt,jdbcType=DECIMAL}");
        }
        
        if (record.getPenaltyYn() != null) {
            VALUES("PENALTY_YN", "#{penaltyYn,jdbcType=VARCHAR}");
        }
        
        if (record.getPenaltyReason() != null) {
            VALUES("PENALTY_REASON", "#{penaltyReason,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdateUid() != null) {
            VALUES("UPDATE_UID", "#{updateUid,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdateDate() != null) {
            VALUES("UPDATE_DATE", "#{updateDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getOrgSendYn() != null) {
            VALUES("ORG_SEND_YN", "#{orgSendYn,jdbcType=VARCHAR}");
        }
        
        if (record.getTransDate() != null) {
            VALUES("TRANS_DATE", "#{transDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getOrgMsgNo() != null) {
            VALUES("ORG_MSG_NO", "#{orgMsgNo,jdbcType=VARCHAR}");
        }
        
        if (record.getOrgCallCnt() != null) {
            VALUES("ORG_CALL_CNT", "#{orgCallCnt,jdbcType=VARCHAR}");
        }
        
        if (record.getOrgCallClass() != null) {
            VALUES("ORG_CALL_CLASS", "#{orgCallClass,jdbcType=VARCHAR}");
        }
        
        if (record.getRepairElapse() != null) {
            VALUES("REPAIR_ELAPSE", "#{repairElapse,jdbcType=VARCHAR}");
        }
        
        if (record.getBrandOrgCd() != null) {
            VALUES("BRAND_ORG_CD", "#{brandOrgCd,jdbcType=VARCHAR}");
        }
        
        if (record.getPenaltyCd() != null) {
            VALUES("PENALTY_CD", "#{penaltyCd,jdbcType=VARCHAR}");
        }
        
        if (record.getExceptYnConfirm() != null) {
            VALUES("EXCEPT_YN_CONFIRM", "#{exceptYnConfirm,jdbcType=VARCHAR}");
        }
        
        if (record.getExceptYnRsn() != null) {
            VALUES("EXCEPT_YN_RSN", "#{exceptYnRsn,jdbcType=VARCHAR}");
        }
        
        if (record.getFinPenaltyAmt() != null) {
            VALUES("FIN_PENALTY_AMT", "#{finPenaltyAmt,jdbcType=VARCHAR}");
        }
        
        if (record.getGroupErrorCd() != null) {
            VALUES("GROUP_ERROR_CD", "#{groupErrorCd,jdbcType=VARCHAR}");
        }
        
        if (record.getStdErrorCd() != null) {
            VALUES("STD_ERROR_CD", "#{stdErrorCd,jdbcType=VARCHAR}");
        }
        
        if (record.getErrorCd() != null) {
            VALUES("ERROR_CD", "#{errorCd,jdbcType=VARCHAR}");
        }
        
        if (record.getExceptCd() != null) {
            VALUES("EXCEPT_CD", "#{exceptCd,jdbcType=VARCHAR}");
        }
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_PENALTY_LIST
     *
     * @mbggenerated Thu Jul 31 14:31:01 KST 2014
     */
    public String selectBySpec(TCtPenaltyListSpec spec) {
        BEGIN();
        if (spec != null && spec.isDistinct()) {
            SELECT_DISTINCT("ORG_CD");
        } else {
            SELECT("ORG_CD");
        }
        SELECT("BRANCH_CD");
        SELECT("MAC_NO");
        SELECT("CREATE_DATE");
        SELECT("CREATE_TIME");
        SELECT("CALL_DATE");
        SELECT("CALL_TIME");
        SELECT("SEQ_NO");
        SELECT("SITE_CD");
        SELECT("SITE_NM");
        SELECT("ARRIVAL_DATE");
        SELECT("ARRIVAL_TIME");
        SELECT("REPAIR_DATE");
        SELECT("REPAIR_TIME");
        SELECT("MAC_MODEL");
        SELECT("MEMO");
        SELECT("PENALTY_AMT");
        SELECT("PENALTY_YN");
        SELECT("PENALTY_REASON");
        SELECT("UPDATE_UID");
        SELECT("UPDATE_DATE");
        SELECT("ORG_SEND_YN");
        SELECT("TRANS_DATE");
        SELECT("ORG_MSG_NO");
        SELECT("ORG_CALL_CNT");
        SELECT("ORG_CALL_CLASS");
        SELECT("REPAIR_ELAPSE");
        SELECT("BRAND_ORG_CD");
        SELECT("PENALTY_CD");
        SELECT("EXCEPT_YN_CONFIRM");
        SELECT("EXCEPT_YN_RSN");
        SELECT("FIN_PENALTY_AMT");
        SELECT("GROUP_ERROR_CD");
        SELECT("STD_ERROR_CD");
        SELECT("ERROR_CD");
        SELECT("EXCEPT_CD");
        FROM("OP.T_CT_PENALTY_LIST");
        applyWhere(spec, false);
        
        if (spec != null && spec.getOrderByClause() != null) {
            ORDER_BY(spec.getOrderByClause());
        }
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_PENALTY_LIST
     *
     * @mbggenerated Thu Jul 31 14:31:01 KST 2014
     */
    public String updateBySpecSelective(Map<String, Object> parameter) {
        TCtPenaltyList record = (TCtPenaltyList) parameter.get("record");
        TCtPenaltyListSpec spec = (TCtPenaltyListSpec) parameter.get("spec");
        
        BEGIN();
        UPDATE("OP.T_CT_PENALTY_LIST");
        
        if (record.getOrgCd() != null) {
            SET("ORG_CD = #{record.orgCd,jdbcType=VARCHAR}");
        }
        
        if (record.getBranchCd() != null) {
            SET("BRANCH_CD = #{record.branchCd,jdbcType=VARCHAR}");
        }
        
        if (record.getMacNo() != null) {
            SET("MAC_NO = #{record.macNo,jdbcType=VARCHAR}");
        }
        
        if (record.getCreateDate() != null) {
            SET("CREATE_DATE = #{record.createDate,jdbcType=VARCHAR}");
        }
        
        if (record.getCreateTime() != null) {
            SET("CREATE_TIME = #{record.createTime,jdbcType=VARCHAR}");
        }
        
        if (record.getCallDate() != null) {
            SET("CALL_DATE = #{record.callDate,jdbcType=VARCHAR}");
        }
        
        if (record.getCallTime() != null) {
            SET("CALL_TIME = #{record.callTime,jdbcType=VARCHAR}");
        }
        
        if (record.getSeqNo() != null) {
            SET("SEQ_NO = #{record.seqNo,jdbcType=DECIMAL}");
        }
        
        if (record.getSiteCd() != null) {
            SET("SITE_CD = #{record.siteCd,jdbcType=VARCHAR}");
        }
        
        if (record.getSiteNm() != null) {
            SET("SITE_NM = #{record.siteNm,jdbcType=VARCHAR}");
        }
        
        if (record.getArrivalDate() != null) {
            SET("ARRIVAL_DATE = #{record.arrivalDate,jdbcType=VARCHAR}");
        }
        
        if (record.getArrivalTime() != null) {
            SET("ARRIVAL_TIME = #{record.arrivalTime,jdbcType=VARCHAR}");
        }
        
        if (record.getRepairDate() != null) {
            SET("REPAIR_DATE = #{record.repairDate,jdbcType=VARCHAR}");
        }
        
        if (record.getRepairTime() != null) {
            SET("REPAIR_TIME = #{record.repairTime,jdbcType=VARCHAR}");
        }
        
        if (record.getMacModel() != null) {
            SET("MAC_MODEL = #{record.macModel,jdbcType=VARCHAR}");
        }
        
        if (record.getMemo() != null) {
            SET("MEMO = #{record.memo,jdbcType=VARCHAR}");
        }
        
        if (record.getPenaltyAmt() != null) {
            SET("PENALTY_AMT = #{record.penaltyAmt,jdbcType=DECIMAL}");
        }
        
        if (record.getPenaltyYn() != null) {
            SET("PENALTY_YN = #{record.penaltyYn,jdbcType=VARCHAR}");
        }
        
        if (record.getPenaltyReason() != null) {
            SET("PENALTY_REASON = #{record.penaltyReason,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdateUid() != null) {
            SET("UPDATE_UID = #{record.updateUid,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdateDate() != null) {
            SET("UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getOrgSendYn() != null) {
            SET("ORG_SEND_YN = #{record.orgSendYn,jdbcType=VARCHAR}");
        }
        
        if (record.getTransDate() != null) {
            SET("TRANS_DATE = #{record.transDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getOrgMsgNo() != null) {
            SET("ORG_MSG_NO = #{record.orgMsgNo,jdbcType=VARCHAR}");
        }
        
        if (record.getOrgCallCnt() != null) {
            SET("ORG_CALL_CNT = #{record.orgCallCnt,jdbcType=VARCHAR}");
        }
        
        if (record.getOrgCallClass() != null) {
            SET("ORG_CALL_CLASS = #{record.orgCallClass,jdbcType=VARCHAR}");
        }
        
        if (record.getRepairElapse() != null) {
            SET("REPAIR_ELAPSE = #{record.repairElapse,jdbcType=VARCHAR}");
        }
        
        if (record.getBrandOrgCd() != null) {
            SET("BRAND_ORG_CD = #{record.brandOrgCd,jdbcType=VARCHAR}");
        }
        
        if (record.getPenaltyCd() != null) {
            SET("PENALTY_CD = #{record.penaltyCd,jdbcType=VARCHAR}");
        }
        
        if (record.getExceptYnConfirm() != null) {
            SET("EXCEPT_YN_CONFIRM = #{record.exceptYnConfirm,jdbcType=VARCHAR}");
        }
        
        if (record.getExceptYnRsn() != null) {
            SET("EXCEPT_YN_RSN = #{record.exceptYnRsn,jdbcType=VARCHAR}");
        }
        
        if (record.getFinPenaltyAmt() != null) {
            SET("FIN_PENALTY_AMT = #{record.finPenaltyAmt,jdbcType=VARCHAR}");
        }
        
        if (record.getGroupErrorCd() != null) {
            SET("GROUP_ERROR_CD = #{record.groupErrorCd,jdbcType=VARCHAR}");
        }
        
        if (record.getStdErrorCd() != null) {
            SET("STD_ERROR_CD = #{record.stdErrorCd,jdbcType=VARCHAR}");
        }
        
        if (record.getErrorCd() != null) {
            SET("ERROR_CD = #{record.errorCd,jdbcType=VARCHAR}");
        }
        
        if (record.getExceptCd() != null) {
            SET("EXCEPT_CD = #{record.exceptCd,jdbcType=VARCHAR}");
        }
        
        applyWhere(spec, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_PENALTY_LIST
     *
     * @mbggenerated Thu Jul 31 14:31:01 KST 2014
     */
    public String updateBySpec(Map<String, Object> parameter) {
        BEGIN();
        UPDATE("OP.T_CT_PENALTY_LIST");
        
        SET("ORG_CD = #{record.orgCd,jdbcType=VARCHAR}");
        SET("BRANCH_CD = #{record.branchCd,jdbcType=VARCHAR}");
        SET("MAC_NO = #{record.macNo,jdbcType=VARCHAR}");
        SET("CREATE_DATE = #{record.createDate,jdbcType=VARCHAR}");
        SET("CREATE_TIME = #{record.createTime,jdbcType=VARCHAR}");
        SET("CALL_DATE = #{record.callDate,jdbcType=VARCHAR}");
        SET("CALL_TIME = #{record.callTime,jdbcType=VARCHAR}");
        SET("SEQ_NO = #{record.seqNo,jdbcType=DECIMAL}");
        SET("SITE_CD = #{record.siteCd,jdbcType=VARCHAR}");
        SET("SITE_NM = #{record.siteNm,jdbcType=VARCHAR}");
        SET("ARRIVAL_DATE = #{record.arrivalDate,jdbcType=VARCHAR}");
        SET("ARRIVAL_TIME = #{record.arrivalTime,jdbcType=VARCHAR}");
        SET("REPAIR_DATE = #{record.repairDate,jdbcType=VARCHAR}");
        SET("REPAIR_TIME = #{record.repairTime,jdbcType=VARCHAR}");
        SET("MAC_MODEL = #{record.macModel,jdbcType=VARCHAR}");
        SET("MEMO = #{record.memo,jdbcType=VARCHAR}");
        SET("PENALTY_AMT = #{record.penaltyAmt,jdbcType=DECIMAL}");
        SET("PENALTY_YN = #{record.penaltyYn,jdbcType=VARCHAR}");
        SET("PENALTY_REASON = #{record.penaltyReason,jdbcType=VARCHAR}");
        SET("UPDATE_UID = #{record.updateUid,jdbcType=VARCHAR}");
        SET("UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP}");
        SET("ORG_SEND_YN = #{record.orgSendYn,jdbcType=VARCHAR}");
        SET("TRANS_DATE = #{record.transDate,jdbcType=TIMESTAMP}");
        SET("ORG_MSG_NO = #{record.orgMsgNo,jdbcType=VARCHAR}");
        SET("ORG_CALL_CNT = #{record.orgCallCnt,jdbcType=VARCHAR}");
        SET("ORG_CALL_CLASS = #{record.orgCallClass,jdbcType=VARCHAR}");
        SET("REPAIR_ELAPSE = #{record.repairElapse,jdbcType=VARCHAR}");
        SET("BRAND_ORG_CD = #{record.brandOrgCd,jdbcType=VARCHAR}");
        SET("PENALTY_CD = #{record.penaltyCd,jdbcType=VARCHAR}");
        SET("EXCEPT_YN_CONFIRM = #{record.exceptYnConfirm,jdbcType=VARCHAR}");
        SET("EXCEPT_YN_RSN = #{record.exceptYnRsn,jdbcType=VARCHAR}");
        SET("FIN_PENALTY_AMT = #{record.finPenaltyAmt,jdbcType=VARCHAR}");
        SET("GROUP_ERROR_CD = #{record.groupErrorCd,jdbcType=VARCHAR}");
        SET("STD_ERROR_CD = #{record.stdErrorCd,jdbcType=VARCHAR}");
        SET("ERROR_CD = #{record.errorCd,jdbcType=VARCHAR}");
        SET("EXCEPT_CD = #{record.exceptCd,jdbcType=VARCHAR}");
        
        TCtPenaltyListSpec spec = (TCtPenaltyListSpec) parameter.get("spec");
        applyWhere(spec, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_PENALTY_LIST
     *
     * @mbggenerated Thu Jul 31 14:31:01 KST 2014
     */
    public String updateByPrimaryKeySelective(TCtPenaltyList record) {
        BEGIN();
        UPDATE("OP.T_CT_PENALTY_LIST");
        
        if (record.getSeqNo() != null) {
            SET("SEQ_NO = #{seqNo,jdbcType=DECIMAL}");
        }
        
        if (record.getSiteCd() != null) {
            SET("SITE_CD = #{siteCd,jdbcType=VARCHAR}");
        }
        
        if (record.getSiteNm() != null) {
            SET("SITE_NM = #{siteNm,jdbcType=VARCHAR}");
        }
        
        if (record.getArrivalDate() != null) {
            SET("ARRIVAL_DATE = #{arrivalDate,jdbcType=VARCHAR}");
        }
        
        if (record.getArrivalTime() != null) {
            SET("ARRIVAL_TIME = #{arrivalTime,jdbcType=VARCHAR}");
        }
        
        if (record.getRepairDate() != null) {
            SET("REPAIR_DATE = #{repairDate,jdbcType=VARCHAR}");
        }
        
        if (record.getRepairTime() != null) {
            SET("REPAIR_TIME = #{repairTime,jdbcType=VARCHAR}");
        }
        
        if (record.getMacModel() != null) {
            SET("MAC_MODEL = #{macModel,jdbcType=VARCHAR}");
        }
        
        if (record.getMemo() != null) {
            SET("MEMO = #{memo,jdbcType=VARCHAR}");
        }
        
        if (record.getPenaltyAmt() != null) {
            SET("PENALTY_AMT = #{penaltyAmt,jdbcType=DECIMAL}");
        }
        
        if (record.getPenaltyYn() != null) {
            SET("PENALTY_YN = #{penaltyYn,jdbcType=VARCHAR}");
        }
        
        if (record.getPenaltyReason() != null) {
            SET("PENALTY_REASON = #{penaltyReason,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdateUid() != null) {
            SET("UPDATE_UID = #{updateUid,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdateDate() != null) {
            SET("UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getOrgSendYn() != null) {
            SET("ORG_SEND_YN = #{orgSendYn,jdbcType=VARCHAR}");
        }
        
        if (record.getTransDate() != null) {
            SET("TRANS_DATE = #{transDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getOrgMsgNo() != null) {
            SET("ORG_MSG_NO = #{orgMsgNo,jdbcType=VARCHAR}");
        }
        
        if (record.getOrgCallCnt() != null) {
            SET("ORG_CALL_CNT = #{orgCallCnt,jdbcType=VARCHAR}");
        }
        
        if (record.getOrgCallClass() != null) {
            SET("ORG_CALL_CLASS = #{orgCallClass,jdbcType=VARCHAR}");
        }
        
        if (record.getRepairElapse() != null) {
            SET("REPAIR_ELAPSE = #{repairElapse,jdbcType=VARCHAR}");
        }
        
        if (record.getBrandOrgCd() != null) {
            SET("BRAND_ORG_CD = #{brandOrgCd,jdbcType=VARCHAR}");
        }
        
        if (record.getPenaltyCd() != null) {
            SET("PENALTY_CD = #{penaltyCd,jdbcType=VARCHAR}");
        }
        
        if (record.getExceptYnConfirm() != null) {
            SET("EXCEPT_YN_CONFIRM = #{exceptYnConfirm,jdbcType=VARCHAR}");
        }
        
        if (record.getExceptYnRsn() != null) {
            SET("EXCEPT_YN_RSN = #{exceptYnRsn,jdbcType=VARCHAR}");
        }
        
        if (record.getFinPenaltyAmt() != null) {
            SET("FIN_PENALTY_AMT = #{finPenaltyAmt,jdbcType=VARCHAR}");
        }
        
        if (record.getGroupErrorCd() != null) {
            SET("GROUP_ERROR_CD = #{groupErrorCd,jdbcType=VARCHAR}");
        }
        
        if (record.getStdErrorCd() != null) {
            SET("STD_ERROR_CD = #{stdErrorCd,jdbcType=VARCHAR}");
        }
        
        if (record.getErrorCd() != null) {
            SET("ERROR_CD = #{errorCd,jdbcType=VARCHAR}");
        }
        
        if (record.getExceptCd() != null) {
            SET("EXCEPT_CD = #{exceptCd,jdbcType=VARCHAR}");
        }
        
        WHERE("ORG_CD = #{orgCd,jdbcType=VARCHAR}");
        WHERE("BRANCH_CD = #{branchCd,jdbcType=VARCHAR}");
        WHERE("MAC_NO = #{macNo,jdbcType=VARCHAR}");
        WHERE("CREATE_DATE = #{createDate,jdbcType=VARCHAR}");
        WHERE("CREATE_TIME = #{createTime,jdbcType=VARCHAR}");
        WHERE("CALL_DATE = #{callDate,jdbcType=VARCHAR}");
        WHERE("CALL_TIME = #{callTime,jdbcType=VARCHAR}");
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_PENALTY_LIST
     *
     * @mbggenerated Thu Jul 31 14:31:01 KST 2014
     */
    protected void applyWhere(TCtPenaltyListSpec spec, boolean includeSpecPhrase) {
        if (spec == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeSpecPhrase) {
            parmPhrase1 = "%s #{spec.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{spec.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{spec.oredCriteria[%d].allCriteria[%d].value} and #{spec.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{spec.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{spec.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{spec.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{spec.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = spec.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            WHERE(sb.toString());
        }
    }
}