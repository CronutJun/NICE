package com.nicetcm.nibsplus.broker.msg.mapper;

import com.nicetcm.nibsplus.broker.msg.model.TCtNiceMac;
import com.nicetcm.nibsplus.broker.msg.model.TCtNiceMacKey;
import com.nicetcm.nibsplus.broker.msg.model.TCtNiceMacSpec;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface TCtNiceMacMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_NICE_MAC
     *
     * @mbggenerated Tue Jul 01 15:57:31 KST 2014
     */
    @SelectProvider(type=TCtNiceMacSqlProvider.class, method="countBySpec")
    int countBySpec(TCtNiceMacSpec spec);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_NICE_MAC
     *
     * @mbggenerated Tue Jul 01 15:57:31 KST 2014
     */
    @DeleteProvider(type=TCtNiceMacSqlProvider.class, method="deleteBySpec")
    int deleteBySpec(TCtNiceMacSpec spec);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_NICE_MAC
     *
     * @mbggenerated Tue Jul 01 15:57:31 KST 2014
     */
    @Delete({
        "delete from OP.T_CT_NICE_MAC",
        "where MAC_NO = #{macNo,jdbcType=VARCHAR}",
          "and BRANCH_CD = #{branchCd,jdbcType=VARCHAR}",
          "and ORG_CD = #{orgCd,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(TCtNiceMacKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_NICE_MAC
     *
     * @mbggenerated Tue Jul 01 15:57:31 KST 2014
     */
    @Insert({
        "insert into OP.T_CT_NICE_MAC (MAC_NO, BRANCH_CD, ",
        "ORG_CD, CIRCUIT, ",
        "SVC_STATUS, OPEN_CLOSE_YN, ",
        "TEMP_YN, SRC_YN, SUPPLY_YN, ",
        "TRAN_YN, LEND_YN, ",
        "SVC_SRC_YN, SVC_SUPPLY_YN, ",
        "IN_YN, ARRANGE_YN, ",
        "TICKET_YN, SALE_YN, ",
        "FOREIGN_YN, LMK_TMK, ",
        "LMK_TPK, UPDATE_DATE, ",
        "CIRCUIT_TYPE, REAL_IP, ",
        "VPN_IP, JOIN_CD, JOIN_MOJUM_CD, ",
        "IN_AMT_YN, SPECS_YN, ",
        "REFLUX_5_ALLOW_YN, REMOTE_YN, ",
        "RPC_YN, MODEM_RELAY_YN)",
        "values (#{macNo,jdbcType=VARCHAR}, #{branchCd,jdbcType=VARCHAR}, ",
        "#{orgCd,jdbcType=VARCHAR}, #{circuit,jdbcType=VARCHAR}, ",
        "#{svcStatus,jdbcType=VARCHAR}, #{openCloseYn,jdbcType=VARCHAR}, ",
        "#{tempYn,jdbcType=VARCHAR}, #{srcYn,jdbcType=VARCHAR}, #{supplyYn,jdbcType=VARCHAR}, ",
        "#{tranYn,jdbcType=VARCHAR}, #{lendYn,jdbcType=VARCHAR}, ",
        "#{svcSrcYn,jdbcType=VARCHAR}, #{svcSupplyYn,jdbcType=VARCHAR}, ",
        "#{inYn,jdbcType=VARCHAR}, #{arrangeYn,jdbcType=VARCHAR}, ",
        "#{ticketYn,jdbcType=VARCHAR}, #{saleYn,jdbcType=VARCHAR}, ",
        "#{foreignYn,jdbcType=VARCHAR}, #{lmkTmk,jdbcType=VARCHAR}, ",
        "#{lmkTpk,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP}, ",
        "#{circuitType,jdbcType=VARCHAR}, #{realIp,jdbcType=VARCHAR}, ",
        "#{vpnIp,jdbcType=VARCHAR}, #{joinCd,jdbcType=VARCHAR}, #{joinMojumCd,jdbcType=VARCHAR}, ",
        "#{inAmtYn,jdbcType=VARCHAR}, #{specsYn,jdbcType=VARCHAR}, ",
        "#{reflux5AllowYn,jdbcType=VARCHAR}, #{remoteYn,jdbcType=VARCHAR}, ",
        "#{rpcYn,jdbcType=VARCHAR}, #{modemRelayYn,jdbcType=VARCHAR})"
    })
    int insert(TCtNiceMac record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_NICE_MAC
     *
     * @mbggenerated Tue Jul 01 15:57:31 KST 2014
     */
    @InsertProvider(type=TCtNiceMacSqlProvider.class, method="insertSelective")
    int insertSelective(TCtNiceMac record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_NICE_MAC
     *
     * @mbggenerated Tue Jul 01 15:57:31 KST 2014
     */
    @SelectProvider(type=TCtNiceMacSqlProvider.class, method="selectBySpec")
    @Results({
        @Result(column="MAC_NO", property="macNo", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="BRANCH_CD", property="branchCd", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="ORG_CD", property="orgCd", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="CIRCUIT", property="circuit", jdbcType=JdbcType.VARCHAR),
        @Result(column="SVC_STATUS", property="svcStatus", jdbcType=JdbcType.VARCHAR),
        @Result(column="OPEN_CLOSE_YN", property="openCloseYn", jdbcType=JdbcType.VARCHAR),
        @Result(column="TEMP_YN", property="tempYn", jdbcType=JdbcType.VARCHAR),
        @Result(column="SRC_YN", property="srcYn", jdbcType=JdbcType.VARCHAR),
        @Result(column="SUPPLY_YN", property="supplyYn", jdbcType=JdbcType.VARCHAR),
        @Result(column="TRAN_YN", property="tranYn", jdbcType=JdbcType.VARCHAR),
        @Result(column="LEND_YN", property="lendYn", jdbcType=JdbcType.VARCHAR),
        @Result(column="SVC_SRC_YN", property="svcSrcYn", jdbcType=JdbcType.VARCHAR),
        @Result(column="SVC_SUPPLY_YN", property="svcSupplyYn", jdbcType=JdbcType.VARCHAR),
        @Result(column="IN_YN", property="inYn", jdbcType=JdbcType.VARCHAR),
        @Result(column="ARRANGE_YN", property="arrangeYn", jdbcType=JdbcType.VARCHAR),
        @Result(column="TICKET_YN", property="ticketYn", jdbcType=JdbcType.VARCHAR),
        @Result(column="SALE_YN", property="saleYn", jdbcType=JdbcType.VARCHAR),
        @Result(column="FOREIGN_YN", property="foreignYn", jdbcType=JdbcType.VARCHAR),
        @Result(column="LMK_TMK", property="lmkTmk", jdbcType=JdbcType.VARCHAR),
        @Result(column="LMK_TPK", property="lmkTpk", jdbcType=JdbcType.VARCHAR),
        @Result(column="UPDATE_DATE", property="updateDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="CIRCUIT_TYPE", property="circuitType", jdbcType=JdbcType.VARCHAR),
        @Result(column="REAL_IP", property="realIp", jdbcType=JdbcType.VARCHAR),
        @Result(column="VPN_IP", property="vpnIp", jdbcType=JdbcType.VARCHAR),
        @Result(column="JOIN_CD", property="joinCd", jdbcType=JdbcType.VARCHAR),
        @Result(column="JOIN_MOJUM_CD", property="joinMojumCd", jdbcType=JdbcType.VARCHAR),
        @Result(column="IN_AMT_YN", property="inAmtYn", jdbcType=JdbcType.VARCHAR),
        @Result(column="SPECS_YN", property="specsYn", jdbcType=JdbcType.VARCHAR),
        @Result(column="REFLUX_5_ALLOW_YN", property="reflux5AllowYn", jdbcType=JdbcType.VARCHAR),
        @Result(column="REMOTE_YN", property="remoteYn", jdbcType=JdbcType.VARCHAR),
        @Result(column="RPC_YN", property="rpcYn", jdbcType=JdbcType.VARCHAR),
        @Result(column="MODEM_RELAY_YN", property="modemRelayYn", jdbcType=JdbcType.VARCHAR)
    })
    List<TCtNiceMac> selectBySpec(TCtNiceMacSpec spec);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_NICE_MAC
     *
     * @mbggenerated Tue Jul 01 15:57:31 KST 2014
     */
    @Select({
        "select",
        "MAC_NO, BRANCH_CD, ORG_CD, CIRCUIT, SVC_STATUS, OPEN_CLOSE_YN, TEMP_YN, SRC_YN, ",
        "SUPPLY_YN, TRAN_YN, LEND_YN, SVC_SRC_YN, SVC_SUPPLY_YN, IN_YN, ARRANGE_YN, TICKET_YN, ",
        "SALE_YN, FOREIGN_YN, LMK_TMK, LMK_TPK, UPDATE_DATE, CIRCUIT_TYPE, REAL_IP, VPN_IP, ",
        "JOIN_CD, JOIN_MOJUM_CD, IN_AMT_YN, SPECS_YN, REFLUX_5_ALLOW_YN, REMOTE_YN, RPC_YN, ",
        "MODEM_RELAY_YN",
        "from OP.T_CT_NICE_MAC",
        "where MAC_NO = #{macNo,jdbcType=VARCHAR}",
          "and BRANCH_CD = #{branchCd,jdbcType=VARCHAR}",
          "and ORG_CD = #{orgCd,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="MAC_NO", property="macNo", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="BRANCH_CD", property="branchCd", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="ORG_CD", property="orgCd", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="CIRCUIT", property="circuit", jdbcType=JdbcType.VARCHAR),
        @Result(column="SVC_STATUS", property="svcStatus", jdbcType=JdbcType.VARCHAR),
        @Result(column="OPEN_CLOSE_YN", property="openCloseYn", jdbcType=JdbcType.VARCHAR),
        @Result(column="TEMP_YN", property="tempYn", jdbcType=JdbcType.VARCHAR),
        @Result(column="SRC_YN", property="srcYn", jdbcType=JdbcType.VARCHAR),
        @Result(column="SUPPLY_YN", property="supplyYn", jdbcType=JdbcType.VARCHAR),
        @Result(column="TRAN_YN", property="tranYn", jdbcType=JdbcType.VARCHAR),
        @Result(column="LEND_YN", property="lendYn", jdbcType=JdbcType.VARCHAR),
        @Result(column="SVC_SRC_YN", property="svcSrcYn", jdbcType=JdbcType.VARCHAR),
        @Result(column="SVC_SUPPLY_YN", property="svcSupplyYn", jdbcType=JdbcType.VARCHAR),
        @Result(column="IN_YN", property="inYn", jdbcType=JdbcType.VARCHAR),
        @Result(column="ARRANGE_YN", property="arrangeYn", jdbcType=JdbcType.VARCHAR),
        @Result(column="TICKET_YN", property="ticketYn", jdbcType=JdbcType.VARCHAR),
        @Result(column="SALE_YN", property="saleYn", jdbcType=JdbcType.VARCHAR),
        @Result(column="FOREIGN_YN", property="foreignYn", jdbcType=JdbcType.VARCHAR),
        @Result(column="LMK_TMK", property="lmkTmk", jdbcType=JdbcType.VARCHAR),
        @Result(column="LMK_TPK", property="lmkTpk", jdbcType=JdbcType.VARCHAR),
        @Result(column="UPDATE_DATE", property="updateDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="CIRCUIT_TYPE", property="circuitType", jdbcType=JdbcType.VARCHAR),
        @Result(column="REAL_IP", property="realIp", jdbcType=JdbcType.VARCHAR),
        @Result(column="VPN_IP", property="vpnIp", jdbcType=JdbcType.VARCHAR),
        @Result(column="JOIN_CD", property="joinCd", jdbcType=JdbcType.VARCHAR),
        @Result(column="JOIN_MOJUM_CD", property="joinMojumCd", jdbcType=JdbcType.VARCHAR),
        @Result(column="IN_AMT_YN", property="inAmtYn", jdbcType=JdbcType.VARCHAR),
        @Result(column="SPECS_YN", property="specsYn", jdbcType=JdbcType.VARCHAR),
        @Result(column="REFLUX_5_ALLOW_YN", property="reflux5AllowYn", jdbcType=JdbcType.VARCHAR),
        @Result(column="REMOTE_YN", property="remoteYn", jdbcType=JdbcType.VARCHAR),
        @Result(column="RPC_YN", property="rpcYn", jdbcType=JdbcType.VARCHAR),
        @Result(column="MODEM_RELAY_YN", property="modemRelayYn", jdbcType=JdbcType.VARCHAR)
    })
    TCtNiceMac selectByPrimaryKey(TCtNiceMacKey key);

    /**
     * CommonPackImpl.getAutoSendInfo 에서 호출
     *
     * @author KDJ, on Tue Jul 01 15:57:31 KST 2014
     */
    @Select({
        "SELECT  TRIM(JOIN_CD)",
        "FROM    OP.T_CT_NICE_MAC",
        "WHERE   ORG_CD = #{orgCd, jdbcType=VARCHAR}",
        "AND     BRANCH_CD = #{branchCd, jdbcType=VARCHAR}",
        "AND     MAC_NO = #{macNo, jdbcType=VARCHAR}",
        "AND     TRIM(JOIN_CD) IS NOT NULL"
    })
    @Results({
        @Result(column="JOIN_CD", property="joinCd", jdbcType=JdbcType.VARCHAR)
    })
    TCtNiceMac selectByCond1(TCtNiceMacKey key);
    
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_NICE_MAC
     *
     * @mbggenerated Tue Jul 01 15:57:31 KST 2014
     */
    @UpdateProvider(type=TCtNiceMacSqlProvider.class, method="updateBySpecSelective")
    int updateBySpecSelective(@Param("record") TCtNiceMac record, @Param("spec") TCtNiceMacSpec spec);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_NICE_MAC
     *
     * @mbggenerated Tue Jul 01 15:57:31 KST 2014
     */
    @UpdateProvider(type=TCtNiceMacSqlProvider.class, method="updateBySpec")
    int updateBySpec(@Param("record") TCtNiceMac record, @Param("spec") TCtNiceMacSpec spec);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_NICE_MAC
     *
     * @mbggenerated Tue Jul 01 15:57:31 KST 2014
     */
    @UpdateProvider(type=TCtNiceMacSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(TCtNiceMac record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_NICE_MAC
     *
     * @mbggenerated Tue Jul 01 15:57:31 KST 2014
     */
    @Update({
        "update OP.T_CT_NICE_MAC",
        "set CIRCUIT = #{circuit,jdbcType=VARCHAR},",
          "SVC_STATUS = #{svcStatus,jdbcType=VARCHAR},",
          "OPEN_CLOSE_YN = #{openCloseYn,jdbcType=VARCHAR},",
          "TEMP_YN = #{tempYn,jdbcType=VARCHAR},",
          "SRC_YN = #{srcYn,jdbcType=VARCHAR},",
          "SUPPLY_YN = #{supplyYn,jdbcType=VARCHAR},",
          "TRAN_YN = #{tranYn,jdbcType=VARCHAR},",
          "LEND_YN = #{lendYn,jdbcType=VARCHAR},",
          "SVC_SRC_YN = #{svcSrcYn,jdbcType=VARCHAR},",
          "SVC_SUPPLY_YN = #{svcSupplyYn,jdbcType=VARCHAR},",
          "IN_YN = #{inYn,jdbcType=VARCHAR},",
          "ARRANGE_YN = #{arrangeYn,jdbcType=VARCHAR},",
          "TICKET_YN = #{ticketYn,jdbcType=VARCHAR},",
          "SALE_YN = #{saleYn,jdbcType=VARCHAR},",
          "FOREIGN_YN = #{foreignYn,jdbcType=VARCHAR},",
          "LMK_TMK = #{lmkTmk,jdbcType=VARCHAR},",
          "LMK_TPK = #{lmkTpk,jdbcType=VARCHAR},",
          "UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},",
          "CIRCUIT_TYPE = #{circuitType,jdbcType=VARCHAR},",
          "REAL_IP = #{realIp,jdbcType=VARCHAR},",
          "VPN_IP = #{vpnIp,jdbcType=VARCHAR},",
          "JOIN_CD = #{joinCd,jdbcType=VARCHAR},",
          "JOIN_MOJUM_CD = #{joinMojumCd,jdbcType=VARCHAR},",
          "IN_AMT_YN = #{inAmtYn,jdbcType=VARCHAR},",
          "SPECS_YN = #{specsYn,jdbcType=VARCHAR},",
          "REFLUX_5_ALLOW_YN = #{reflux5AllowYn,jdbcType=VARCHAR},",
          "REMOTE_YN = #{remoteYn,jdbcType=VARCHAR},",
          "RPC_YN = #{rpcYn,jdbcType=VARCHAR},",
          "MODEM_RELAY_YN = #{modemRelayYn,jdbcType=VARCHAR}",
        "where MAC_NO = #{macNo,jdbcType=VARCHAR}",
          "and BRANCH_CD = #{branchCd,jdbcType=VARCHAR}",
          "and ORG_CD = #{orgCd,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(TCtNiceMac record);
}