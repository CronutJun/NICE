package com.nicetcm.nibsplus.broker.msg.mapper;

import com.nicetcm.nibsplus.broker.msg.model.TCtOpen;
import com.nicetcm.nibsplus.broker.msg.model.TCtOpenKey;
import com.nicetcm.nibsplus.broker.msg.model.TCtOpenSpec;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface TCtOpenMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_OPEN
     *
     * @mbggenerated Wed Jul 23 14:42:30 KST 2014
     */
    @SelectProvider(type=TCtOpenSqlProvider.class, method="countBySpec")
    int countBySpec(TCtOpenSpec spec);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_OPEN
     *
     * @mbggenerated Wed Jul 23 14:42:30 KST 2014
     */
    @DeleteProvider(type=TCtOpenSqlProvider.class, method="deleteBySpec")
    int deleteBySpec(TCtOpenSpec spec);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_OPEN
     *
     * @mbggenerated Wed Jul 23 14:42:30 KST 2014
     */
    @Delete({
        "delete from OP.T_CT_OPEN",
        "where ORG_CD = #{orgCd,jdbcType=VARCHAR}",
          "and BRANCH_CD = #{branchCd,jdbcType=VARCHAR}",
          "and MAC_NO = #{macNo,jdbcType=VARCHAR}",
          "and OPEN_DATE = #{openDate,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(TCtOpenKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_OPEN
     *
     * @mbggenerated Wed Jul 23 14:42:30 KST 2014
     */
    @Insert({
        "insert into OP.T_CT_OPEN (ORG_CD, BRANCH_CD, ",
        "MAC_NO, OPEN_DATE, ",
        "OPEN_TIME, REG_DT, ",
        "REG_ID, UPDATE_DATE, ",
        "UPDATE_UID, SERIAL_NO, ",
        "MAC_ADDRESS)",
        "values (#{orgCd,jdbcType=VARCHAR}, #{branchCd,jdbcType=VARCHAR}, ",
        "#{macNo,jdbcType=VARCHAR}, #{openDate,jdbcType=VARCHAR}, ",
        "#{openTime,jdbcType=VARCHAR}, #{regDt,jdbcType=TIMESTAMP}, ",
        "#{regId,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP}, ",
        "#{updateUid,jdbcType=VARCHAR}, #{serialNo,jdbcType=VARCHAR}, ",
        "#{macAddress,jdbcType=VARCHAR})"
    })
    int insert(TCtOpen record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_OPEN
     *
     * @mbggenerated Wed Jul 23 14:42:30 KST 2014
     */
    @InsertProvider(type=TCtOpenSqlProvider.class, method="insertSelective")
    int insertSelective(TCtOpen record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_OPEN
     *
     * @mbggenerated Wed Jul 23 14:42:30 KST 2014
     */
    @SelectProvider(type=TCtOpenSqlProvider.class, method="selectBySpec")
    @Results({
        @Result(column="ORG_CD", property="orgCd", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="BRANCH_CD", property="branchCd", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="MAC_NO", property="macNo", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="OPEN_DATE", property="openDate", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="OPEN_TIME", property="openTime", jdbcType=JdbcType.VARCHAR),
        @Result(column="REG_DT", property="regDt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="REG_ID", property="regId", jdbcType=JdbcType.VARCHAR),
        @Result(column="UPDATE_DATE", property="updateDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="UPDATE_UID", property="updateUid", jdbcType=JdbcType.VARCHAR),
        @Result(column="SERIAL_NO", property="serialNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="MAC_ADDRESS", property="macAddress", jdbcType=JdbcType.VARCHAR)
    })
    List<TCtOpen> selectBySpec(TCtOpenSpec spec);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_OPEN
     *
     * @mbggenerated Wed Jul 23 14:42:30 KST 2014
     */
    @Select({
        "select",
        "ORG_CD, BRANCH_CD, MAC_NO, OPEN_DATE, OPEN_TIME, REG_DT, REG_ID, UPDATE_DATE, ",
        "UPDATE_UID, SERIAL_NO, MAC_ADDRESS",
        "from OP.T_CT_OPEN",
        "where ORG_CD = #{orgCd,jdbcType=VARCHAR}",
          "and BRANCH_CD = #{branchCd,jdbcType=VARCHAR}",
          "and MAC_NO = #{macNo,jdbcType=VARCHAR}",
          "and OPEN_DATE = #{openDate,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="ORG_CD", property="orgCd", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="BRANCH_CD", property="branchCd", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="MAC_NO", property="macNo", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="OPEN_DATE", property="openDate", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="OPEN_TIME", property="openTime", jdbcType=JdbcType.VARCHAR),
        @Result(column="REG_DT", property="regDt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="REG_ID", property="regId", jdbcType=JdbcType.VARCHAR),
        @Result(column="UPDATE_DATE", property="updateDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="UPDATE_UID", property="updateUid", jdbcType=JdbcType.VARCHAR),
        @Result(column="SERIAL_NO", property="serialNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="MAC_ADDRESS", property="macAddress", jdbcType=JdbcType.VARCHAR)
    })
    TCtOpen selectByPrimaryKey(TCtOpenKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_OPEN
     *
     * @mbggenerated Wed Jul 23 14:42:30 KST 2014
     */
    @UpdateProvider(type=TCtOpenSqlProvider.class, method="updateBySpecSelective")
    int updateBySpecSelective(@Param("record") TCtOpen record, @Param("spec") TCtOpenSpec spec);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_OPEN
     *
     * @mbggenerated Wed Jul 23 14:42:30 KST 2014
     */
    @UpdateProvider(type=TCtOpenSqlProvider.class, method="updateBySpec")
    int updateBySpec(@Param("record") TCtOpen record, @Param("spec") TCtOpenSpec spec);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_OPEN
     *
     * @mbggenerated Wed Jul 23 14:42:30 KST 2014
     */
    @UpdateProvider(type=TCtOpenSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(TCtOpen record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_OPEN
     *
     * @mbggenerated Wed Jul 23 14:42:30 KST 2014
     */
    @Update({
        "update OP.T_CT_OPEN",
        "set OPEN_TIME = #{openTime,jdbcType=VARCHAR},",
          "REG_DT = #{regDt,jdbcType=TIMESTAMP},",
          "REG_ID = #{regId,jdbcType=VARCHAR},",
          "UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},",
          "UPDATE_UID = #{updateUid,jdbcType=VARCHAR},",
          "SERIAL_NO = #{serialNo,jdbcType=VARCHAR},",
          "MAC_ADDRESS = #{macAddress,jdbcType=VARCHAR}",
        "where ORG_CD = #{orgCd,jdbcType=VARCHAR}",
          "and BRANCH_CD = #{branchCd,jdbcType=VARCHAR}",
          "and MAC_NO = #{macNo,jdbcType=VARCHAR}",
          "and OPEN_DATE = #{openDate,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(TCtOpen record);
}