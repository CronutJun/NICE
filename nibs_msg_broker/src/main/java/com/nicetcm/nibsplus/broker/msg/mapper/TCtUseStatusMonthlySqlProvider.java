package com.nicetcm.nibsplus.broker.msg.mapper;

import static org.apache.ibatis.jdbc.SqlBuilder.BEGIN;
import static org.apache.ibatis.jdbc.SqlBuilder.DELETE_FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.INSERT_INTO;
import static org.apache.ibatis.jdbc.SqlBuilder.ORDER_BY;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT_DISTINCT;
import static org.apache.ibatis.jdbc.SqlBuilder.SET;
import static org.apache.ibatis.jdbc.SqlBuilder.SQL;
import static org.apache.ibatis.jdbc.SqlBuilder.UPDATE;
import static org.apache.ibatis.jdbc.SqlBuilder.VALUES;
import static org.apache.ibatis.jdbc.SqlBuilder.WHERE;

import com.nicetcm.nibsplus.broker.msg.model.TCtUseStatusMonthly;
import com.nicetcm.nibsplus.broker.msg.model.TCtUseStatusMonthlySpec.Criteria;
import com.nicetcm.nibsplus.broker.msg.model.TCtUseStatusMonthlySpec.Criterion;
import com.nicetcm.nibsplus.broker.msg.model.TCtUseStatusMonthlySpec;
import java.util.List;
import java.util.Map;

public class TCtUseStatusMonthlySqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_USE_STATUS_MONTHLY
     *
     * @mbggenerated Tue Jul 22 11:13:55 KST 2014
     */
    public String countBySpec(TCtUseStatusMonthlySpec spec) {
        BEGIN();
        SELECT("count(*)");
        FROM("OP.T_CT_USE_STATUS_MONTHLY");
        applyWhere(spec, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_USE_STATUS_MONTHLY
     *
     * @mbggenerated Tue Jul 22 11:13:55 KST 2014
     */
    public String deleteBySpec(TCtUseStatusMonthlySpec spec) {
        BEGIN();
        DELETE_FROM("OP.T_CT_USE_STATUS_MONTHLY");
        applyWhere(spec, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_USE_STATUS_MONTHLY
     *
     * @mbggenerated Tue Jul 22 11:13:55 KST 2014
     */
    public String insertSelective(TCtUseStatusMonthly record) {
        BEGIN();
        INSERT_INTO("OP.T_CT_USE_STATUS_MONTHLY");
        
        if (record.getYearMon() != null) {
            VALUES("YEAR_MON", "#{yearMon,jdbcType=VARCHAR}");
        }
        
        if (record.getOrgCd() != null) {
            VALUES("ORG_CD", "#{orgCd,jdbcType=VARCHAR}");
        }
        
        if (record.getBranchCd() != null) {
            VALUES("BRANCH_CD", "#{branchCd,jdbcType=VARCHAR}");
        }
        
        if (record.getMacNo() != null) {
            VALUES("MAC_NO", "#{macNo,jdbcType=VARCHAR}");
        }
        
        if (record.getSetType() != null) {
            VALUES("SET_TYPE", "#{setType,jdbcType=VARCHAR}");
        }
        
        if (record.getSetDate() != null) {
            VALUES("SET_DATE", "#{setDate,jdbcType=VARCHAR}");
        }
        
        if (record.getUseDay() != null) {
            VALUES("USE_DAY", "#{useDay,jdbcType=VARCHAR}");
        }
        
        if (record.getMonthFee() != null) {
            VALUES("MONTH_FEE", "#{monthFee,jdbcType=VARCHAR}");
        }
        
        if (record.getBoothType() != null) {
            VALUES("BOOTH_TYPE", "#{boothType,jdbcType=VARCHAR}");
        }
        
        if (record.getUseCntTotalWithdraw() != null) {
            VALUES("USE_CNT_TOTAL_WITHDRAW", "#{useCntTotalWithdraw,jdbcType=VARCHAR}");
        }
        
        if (record.getUseCntTotalTransfer() != null) {
            VALUES("USE_CNT_TOTAL_TRANSFER", "#{useCntTotalTransfer,jdbcType=VARCHAR}");
        }
        
        if (record.getUseCntTotalDeposit() != null) {
            VALUES("USE_CNT_TOTAL_DEPOSIT", "#{useCntTotalDeposit,jdbcType=VARCHAR}");
        }
        
        if (record.getUseCntTotalSum() != null) {
            VALUES("USE_CNT_TOTAL_SUM", "#{useCntTotalSum,jdbcType=VARCHAR}");
        }
        
        if (record.getUseCntSameWithdraw() != null) {
            VALUES("USE_CNT_SAME_WITHDRAW", "#{useCntSameWithdraw,jdbcType=VARCHAR}");
        }
        
        if (record.getUseCntSameTransfer() != null) {
            VALUES("USE_CNT_SAME_TRANSFER", "#{useCntSameTransfer,jdbcType=VARCHAR}");
        }
        
        if (record.getUseCntSameDeposit() != null) {
            VALUES("USE_CNT_SAME_DEPOSIT", "#{useCntSameDeposit,jdbcType=VARCHAR}");
        }
        
        if (record.getUseCntSameSum() != null) {
            VALUES("USE_CNT_SAME_SUM", "#{useCntSameSum,jdbcType=VARCHAR}");
        }
        
        if (record.getUseCntDiffWithdraw() != null) {
            VALUES("USE_CNT_DIFF_WITHDRAW", "#{useCntDiffWithdraw,jdbcType=VARCHAR}");
        }
        
        if (record.getUseCntDiffTransfer() != null) {
            VALUES("USE_CNT_DIFF_TRANSFER", "#{useCntDiffTransfer,jdbcType=VARCHAR}");
        }
        
        if (record.getUseCntDiffDeposit() != null) {
            VALUES("USE_CNT_DIFF_DEPOSIT", "#{useCntDiffDeposit,jdbcType=VARCHAR}");
        }
        
        if (record.getUseCntDiffSum() != null) {
            VALUES("USE_CNT_DIFF_SUM", "#{useCntDiffSum,jdbcType=VARCHAR}");
        }
        
        if (record.getBankbookUpdateCnt() != null) {
            VALUES("BANKBOOK_UPDATE_CNT", "#{bankbookUpdateCnt,jdbcType=VARCHAR}");
        }
        
        if (record.getEarnedFeeIbk() != null) {
            VALUES("EARNED_FEE_IBK", "#{earnedFeeIbk,jdbcType=VARCHAR}");
        }
        
        if (record.getEarnedFeeVan() != null) {
            VALUES("EARNED_FEE_VAN", "#{earnedFeeVan,jdbcType=VARCHAR}");
        }
        
        if (record.getOrgSendYn() != null) {
            VALUES("ORG_SEND_YN", "#{orgSendYn,jdbcType=VARCHAR}");
        }
        
        if (record.getInsertUid() != null) {
            VALUES("INSERT_UID", "#{insertUid,jdbcType=VARCHAR}");
        }
        
        if (record.getInsertDate() != null) {
            VALUES("INSERT_DATE", "#{insertDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdateUid() != null) {
            VALUES("UPDATE_UID", "#{updateUid,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdateDate() != null) {
            VALUES("UPDATE_DATE", "#{updateDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getBranchNm() != null) {
            VALUES("BRANCH_NM", "#{branchNm,jdbcType=VARCHAR}");
        }
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_USE_STATUS_MONTHLY
     *
     * @mbggenerated Tue Jul 22 11:13:55 KST 2014
     */
    public String selectBySpec(TCtUseStatusMonthlySpec spec) {
        BEGIN();
        if (spec != null && spec.isDistinct()) {
            SELECT_DISTINCT("YEAR_MON");
        } else {
            SELECT("YEAR_MON");
        }
        SELECT("ORG_CD");
        SELECT("BRANCH_CD");
        SELECT("MAC_NO");
        SELECT("SET_TYPE");
        SELECT("SET_DATE");
        SELECT("USE_DAY");
        SELECT("MONTH_FEE");
        SELECT("BOOTH_TYPE");
        SELECT("USE_CNT_TOTAL_WITHDRAW");
        SELECT("USE_CNT_TOTAL_TRANSFER");
        SELECT("USE_CNT_TOTAL_DEPOSIT");
        SELECT("USE_CNT_TOTAL_SUM");
        SELECT("USE_CNT_SAME_WITHDRAW");
        SELECT("USE_CNT_SAME_TRANSFER");
        SELECT("USE_CNT_SAME_DEPOSIT");
        SELECT("USE_CNT_SAME_SUM");
        SELECT("USE_CNT_DIFF_WITHDRAW");
        SELECT("USE_CNT_DIFF_TRANSFER");
        SELECT("USE_CNT_DIFF_DEPOSIT");
        SELECT("USE_CNT_DIFF_SUM");
        SELECT("BANKBOOK_UPDATE_CNT");
        SELECT("EARNED_FEE_IBK");
        SELECT("EARNED_FEE_VAN");
        SELECT("ORG_SEND_YN");
        SELECT("INSERT_UID");
        SELECT("INSERT_DATE");
        SELECT("UPDATE_UID");
        SELECT("UPDATE_DATE");
        SELECT("BRANCH_NM");
        FROM("OP.T_CT_USE_STATUS_MONTHLY");
        applyWhere(spec, false);
        
        if (spec != null && spec.getOrderByClause() != null) {
            ORDER_BY(spec.getOrderByClause());
        }
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_USE_STATUS_MONTHLY
     *
     * @mbggenerated Tue Jul 22 11:13:55 KST 2014
     */
    public String updateBySpecSelective(Map<String, Object> parameter) {
        TCtUseStatusMonthly record = (TCtUseStatusMonthly) parameter.get("record");
        TCtUseStatusMonthlySpec spec = (TCtUseStatusMonthlySpec) parameter.get("spec");
        
        BEGIN();
        UPDATE("OP.T_CT_USE_STATUS_MONTHLY");
        
        if (record.getYearMon() != null) {
            SET("YEAR_MON = #{record.yearMon,jdbcType=VARCHAR}");
        }
        
        if (record.getOrgCd() != null) {
            SET("ORG_CD = #{record.orgCd,jdbcType=VARCHAR}");
        }
        
        if (record.getBranchCd() != null) {
            SET("BRANCH_CD = #{record.branchCd,jdbcType=VARCHAR}");
        }
        
        if (record.getMacNo() != null) {
            SET("MAC_NO = #{record.macNo,jdbcType=VARCHAR}");
        }
        
        if (record.getSetType() != null) {
            SET("SET_TYPE = #{record.setType,jdbcType=VARCHAR}");
        }
        
        if (record.getSetDate() != null) {
            SET("SET_DATE = #{record.setDate,jdbcType=VARCHAR}");
        }
        
        if (record.getUseDay() != null) {
            SET("USE_DAY = #{record.useDay,jdbcType=VARCHAR}");
        }
        
        if (record.getMonthFee() != null) {
            SET("MONTH_FEE = #{record.monthFee,jdbcType=VARCHAR}");
        }
        
        if (record.getBoothType() != null) {
            SET("BOOTH_TYPE = #{record.boothType,jdbcType=VARCHAR}");
        }
        
        if (record.getUseCntTotalWithdraw() != null) {
            SET("USE_CNT_TOTAL_WITHDRAW = #{record.useCntTotalWithdraw,jdbcType=VARCHAR}");
        }
        
        if (record.getUseCntTotalTransfer() != null) {
            SET("USE_CNT_TOTAL_TRANSFER = #{record.useCntTotalTransfer,jdbcType=VARCHAR}");
        }
        
        if (record.getUseCntTotalDeposit() != null) {
            SET("USE_CNT_TOTAL_DEPOSIT = #{record.useCntTotalDeposit,jdbcType=VARCHAR}");
        }
        
        if (record.getUseCntTotalSum() != null) {
            SET("USE_CNT_TOTAL_SUM = #{record.useCntTotalSum,jdbcType=VARCHAR}");
        }
        
        if (record.getUseCntSameWithdraw() != null) {
            SET("USE_CNT_SAME_WITHDRAW = #{record.useCntSameWithdraw,jdbcType=VARCHAR}");
        }
        
        if (record.getUseCntSameTransfer() != null) {
            SET("USE_CNT_SAME_TRANSFER = #{record.useCntSameTransfer,jdbcType=VARCHAR}");
        }
        
        if (record.getUseCntSameDeposit() != null) {
            SET("USE_CNT_SAME_DEPOSIT = #{record.useCntSameDeposit,jdbcType=VARCHAR}");
        }
        
        if (record.getUseCntSameSum() != null) {
            SET("USE_CNT_SAME_SUM = #{record.useCntSameSum,jdbcType=VARCHAR}");
        }
        
        if (record.getUseCntDiffWithdraw() != null) {
            SET("USE_CNT_DIFF_WITHDRAW = #{record.useCntDiffWithdraw,jdbcType=VARCHAR}");
        }
        
        if (record.getUseCntDiffTransfer() != null) {
            SET("USE_CNT_DIFF_TRANSFER = #{record.useCntDiffTransfer,jdbcType=VARCHAR}");
        }
        
        if (record.getUseCntDiffDeposit() != null) {
            SET("USE_CNT_DIFF_DEPOSIT = #{record.useCntDiffDeposit,jdbcType=VARCHAR}");
        }
        
        if (record.getUseCntDiffSum() != null) {
            SET("USE_CNT_DIFF_SUM = #{record.useCntDiffSum,jdbcType=VARCHAR}");
        }
        
        if (record.getBankbookUpdateCnt() != null) {
            SET("BANKBOOK_UPDATE_CNT = #{record.bankbookUpdateCnt,jdbcType=VARCHAR}");
        }
        
        if (record.getEarnedFeeIbk() != null) {
            SET("EARNED_FEE_IBK = #{record.earnedFeeIbk,jdbcType=VARCHAR}");
        }
        
        if (record.getEarnedFeeVan() != null) {
            SET("EARNED_FEE_VAN = #{record.earnedFeeVan,jdbcType=VARCHAR}");
        }
        
        if (record.getOrgSendYn() != null) {
            SET("ORG_SEND_YN = #{record.orgSendYn,jdbcType=VARCHAR}");
        }
        
        if (record.getInsertUid() != null) {
            SET("INSERT_UID = #{record.insertUid,jdbcType=VARCHAR}");
        }
        
        if (record.getInsertDate() != null) {
            SET("INSERT_DATE = #{record.insertDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdateUid() != null) {
            SET("UPDATE_UID = #{record.updateUid,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdateDate() != null) {
            SET("UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getBranchNm() != null) {
            SET("BRANCH_NM = #{record.branchNm,jdbcType=VARCHAR}");
        }
        
        applyWhere(spec, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_USE_STATUS_MONTHLY
     *
     * @mbggenerated Tue Jul 22 11:13:55 KST 2014
     */
    public String updateBySpec(Map<String, Object> parameter) {
        BEGIN();
        UPDATE("OP.T_CT_USE_STATUS_MONTHLY");
        
        SET("YEAR_MON = #{record.yearMon,jdbcType=VARCHAR}");
        SET("ORG_CD = #{record.orgCd,jdbcType=VARCHAR}");
        SET("BRANCH_CD = #{record.branchCd,jdbcType=VARCHAR}");
        SET("MAC_NO = #{record.macNo,jdbcType=VARCHAR}");
        SET("SET_TYPE = #{record.setType,jdbcType=VARCHAR}");
        SET("SET_DATE = #{record.setDate,jdbcType=VARCHAR}");
        SET("USE_DAY = #{record.useDay,jdbcType=VARCHAR}");
        SET("MONTH_FEE = #{record.monthFee,jdbcType=VARCHAR}");
        SET("BOOTH_TYPE = #{record.boothType,jdbcType=VARCHAR}");
        SET("USE_CNT_TOTAL_WITHDRAW = #{record.useCntTotalWithdraw,jdbcType=VARCHAR}");
        SET("USE_CNT_TOTAL_TRANSFER = #{record.useCntTotalTransfer,jdbcType=VARCHAR}");
        SET("USE_CNT_TOTAL_DEPOSIT = #{record.useCntTotalDeposit,jdbcType=VARCHAR}");
        SET("USE_CNT_TOTAL_SUM = #{record.useCntTotalSum,jdbcType=VARCHAR}");
        SET("USE_CNT_SAME_WITHDRAW = #{record.useCntSameWithdraw,jdbcType=VARCHAR}");
        SET("USE_CNT_SAME_TRANSFER = #{record.useCntSameTransfer,jdbcType=VARCHAR}");
        SET("USE_CNT_SAME_DEPOSIT = #{record.useCntSameDeposit,jdbcType=VARCHAR}");
        SET("USE_CNT_SAME_SUM = #{record.useCntSameSum,jdbcType=VARCHAR}");
        SET("USE_CNT_DIFF_WITHDRAW = #{record.useCntDiffWithdraw,jdbcType=VARCHAR}");
        SET("USE_CNT_DIFF_TRANSFER = #{record.useCntDiffTransfer,jdbcType=VARCHAR}");
        SET("USE_CNT_DIFF_DEPOSIT = #{record.useCntDiffDeposit,jdbcType=VARCHAR}");
        SET("USE_CNT_DIFF_SUM = #{record.useCntDiffSum,jdbcType=VARCHAR}");
        SET("BANKBOOK_UPDATE_CNT = #{record.bankbookUpdateCnt,jdbcType=VARCHAR}");
        SET("EARNED_FEE_IBK = #{record.earnedFeeIbk,jdbcType=VARCHAR}");
        SET("EARNED_FEE_VAN = #{record.earnedFeeVan,jdbcType=VARCHAR}");
        SET("ORG_SEND_YN = #{record.orgSendYn,jdbcType=VARCHAR}");
        SET("INSERT_UID = #{record.insertUid,jdbcType=VARCHAR}");
        SET("INSERT_DATE = #{record.insertDate,jdbcType=TIMESTAMP}");
        SET("UPDATE_UID = #{record.updateUid,jdbcType=VARCHAR}");
        SET("UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP}");
        SET("BRANCH_NM = #{record.branchNm,jdbcType=VARCHAR}");
        
        TCtUseStatusMonthlySpec spec = (TCtUseStatusMonthlySpec) parameter.get("spec");
        applyWhere(spec, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_USE_STATUS_MONTHLY
     *
     * @mbggenerated Tue Jul 22 11:13:55 KST 2014
     */
    public String updateByPrimaryKeySelective(TCtUseStatusMonthly record) {
        BEGIN();
        UPDATE("OP.T_CT_USE_STATUS_MONTHLY");
        
        if (record.getSetType() != null) {
            SET("SET_TYPE = #{setType,jdbcType=VARCHAR}");
        }
        
        if (record.getSetDate() != null) {
            SET("SET_DATE = #{setDate,jdbcType=VARCHAR}");
        }
        
        if (record.getUseDay() != null) {
            SET("USE_DAY = #{useDay,jdbcType=VARCHAR}");
        }
        
        if (record.getMonthFee() != null) {
            SET("MONTH_FEE = #{monthFee,jdbcType=VARCHAR}");
        }
        
        if (record.getBoothType() != null) {
            SET("BOOTH_TYPE = #{boothType,jdbcType=VARCHAR}");
        }
        
        if (record.getUseCntTotalWithdraw() != null) {
            SET("USE_CNT_TOTAL_WITHDRAW = #{useCntTotalWithdraw,jdbcType=VARCHAR}");
        }
        
        if (record.getUseCntTotalTransfer() != null) {
            SET("USE_CNT_TOTAL_TRANSFER = #{useCntTotalTransfer,jdbcType=VARCHAR}");
        }
        
        if (record.getUseCntTotalDeposit() != null) {
            SET("USE_CNT_TOTAL_DEPOSIT = #{useCntTotalDeposit,jdbcType=VARCHAR}");
        }
        
        if (record.getUseCntTotalSum() != null) {
            SET("USE_CNT_TOTAL_SUM = #{useCntTotalSum,jdbcType=VARCHAR}");
        }
        
        if (record.getUseCntSameWithdraw() != null) {
            SET("USE_CNT_SAME_WITHDRAW = #{useCntSameWithdraw,jdbcType=VARCHAR}");
        }
        
        if (record.getUseCntSameTransfer() != null) {
            SET("USE_CNT_SAME_TRANSFER = #{useCntSameTransfer,jdbcType=VARCHAR}");
        }
        
        if (record.getUseCntSameDeposit() != null) {
            SET("USE_CNT_SAME_DEPOSIT = #{useCntSameDeposit,jdbcType=VARCHAR}");
        }
        
        if (record.getUseCntSameSum() != null) {
            SET("USE_CNT_SAME_SUM = #{useCntSameSum,jdbcType=VARCHAR}");
        }
        
        if (record.getUseCntDiffWithdraw() != null) {
            SET("USE_CNT_DIFF_WITHDRAW = #{useCntDiffWithdraw,jdbcType=VARCHAR}");
        }
        
        if (record.getUseCntDiffTransfer() != null) {
            SET("USE_CNT_DIFF_TRANSFER = #{useCntDiffTransfer,jdbcType=VARCHAR}");
        }
        
        if (record.getUseCntDiffDeposit() != null) {
            SET("USE_CNT_DIFF_DEPOSIT = #{useCntDiffDeposit,jdbcType=VARCHAR}");
        }
        
        if (record.getUseCntDiffSum() != null) {
            SET("USE_CNT_DIFF_SUM = #{useCntDiffSum,jdbcType=VARCHAR}");
        }
        
        if (record.getBankbookUpdateCnt() != null) {
            SET("BANKBOOK_UPDATE_CNT = #{bankbookUpdateCnt,jdbcType=VARCHAR}");
        }
        
        if (record.getEarnedFeeIbk() != null) {
            SET("EARNED_FEE_IBK = #{earnedFeeIbk,jdbcType=VARCHAR}");
        }
        
        if (record.getEarnedFeeVan() != null) {
            SET("EARNED_FEE_VAN = #{earnedFeeVan,jdbcType=VARCHAR}");
        }
        
        if (record.getOrgSendYn() != null) {
            SET("ORG_SEND_YN = #{orgSendYn,jdbcType=VARCHAR}");
        }
        
        if (record.getInsertUid() != null) {
            SET("INSERT_UID = #{insertUid,jdbcType=VARCHAR}");
        }
        
        if (record.getInsertDate() != null) {
            SET("INSERT_DATE = #{insertDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdateUid() != null) {
            SET("UPDATE_UID = #{updateUid,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdateDate() != null) {
            SET("UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getBranchNm() != null) {
            SET("BRANCH_NM = #{branchNm,jdbcType=VARCHAR}");
        }
        
        WHERE("YEAR_MON = #{yearMon,jdbcType=VARCHAR}");
        WHERE("ORG_CD = #{orgCd,jdbcType=VARCHAR}");
        WHERE("BRANCH_CD = #{branchCd,jdbcType=VARCHAR}");
        WHERE("MAC_NO = #{macNo,jdbcType=VARCHAR}");
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_USE_STATUS_MONTHLY
     *
     * @mbggenerated Tue Jul 22 11:13:55 KST 2014
     */
    protected void applyWhere(TCtUseStatusMonthlySpec spec, boolean includeSpecPhrase) {
        if (spec == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeSpecPhrase) {
            parmPhrase1 = "%s #{spec.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{spec.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{spec.oredCriteria[%d].allCriteria[%d].value} and #{spec.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{spec.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{spec.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{spec.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{spec.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = spec.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            WHERE(sb.toString());
        }
    }
}