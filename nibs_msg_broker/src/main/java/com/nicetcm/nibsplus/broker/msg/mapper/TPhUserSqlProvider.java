package com.nicetcm.nibsplus.broker.msg.mapper;

import static org.apache.ibatis.jdbc.SqlBuilder.BEGIN;
import static org.apache.ibatis.jdbc.SqlBuilder.DELETE_FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.INSERT_INTO;
import static org.apache.ibatis.jdbc.SqlBuilder.ORDER_BY;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT_DISTINCT;
import static org.apache.ibatis.jdbc.SqlBuilder.SET;
import static org.apache.ibatis.jdbc.SqlBuilder.SQL;
import static org.apache.ibatis.jdbc.SqlBuilder.UPDATE;
import static org.apache.ibatis.jdbc.SqlBuilder.VALUES;
import static org.apache.ibatis.jdbc.SqlBuilder.WHERE;

import com.nicetcm.nibsplus.broker.msg.model.TPhUser;
import com.nicetcm.nibsplus.broker.msg.model.TPhUserSpec.Criteria;
import com.nicetcm.nibsplus.broker.msg.model.TPhUserSpec.Criterion;
import com.nicetcm.nibsplus.broker.msg.model.TPhUserSpec;
import java.util.List;
import java.util.Map;

public class TPhUserSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_PH_USER
     *
     * @mbggenerated Thu Nov 06 17:17:41 KST 2014
     */
    public String countBySpec(TPhUserSpec Spec) {
        BEGIN();
        SELECT("count(*)");
        FROM("OP.T_PH_USER");
        applyWhere(Spec, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_PH_USER
     *
     * @mbggenerated Thu Nov 06 17:17:41 KST 2014
     */
    public String deleteBySpec(TPhUserSpec Spec) {
        BEGIN();
        DELETE_FROM("OP.T_PH_USER");
        applyWhere(Spec, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_PH_USER
     *
     * @mbggenerated Thu Nov 06 17:17:41 KST 2014
     */
    public String insertSelective(TPhUser record) {
        BEGIN();
        INSERT_INTO("OP.T_PH_USER");

        if (record.getUserIdx() != null) {
            VALUES("USER_IDX", "#{userIdx,jdbcType=DECIMAL}");
        }

        if (record.getPhoneNumber() != null) {
            VALUES("PHONE_NUMBER", "#{phoneNumber,jdbcType=VARCHAR}");
        }

        if (record.getUserNumber() != null) {
            VALUES("USER_NUMBER", "#{userNumber,jdbcType=VARCHAR}");
        }

        if (record.getStatus() != null) {
            VALUES("STATUS", "#{status,jdbcType=VARCHAR}");
        }

        if (record.getDeviceToken() != null) {
            VALUES("DEVICE_TOKEN", "#{deviceToken,jdbcType=VARCHAR}");
        }

        if (record.getDeviceModel() != null) {
            VALUES("DEVICE_MODEL", "#{deviceModel,jdbcType=VARCHAR}");
        }

        if (record.getDeviceVersion() != null) {
            VALUES("DEVICE_VERSION", "#{deviceVersion,jdbcType=VARCHAR}");
        }

        if (record.getAppVersion() != null) {
            VALUES("APP_VERSION", "#{appVersion,jdbcType=VARCHAR}");
        }

        if (record.getCreateDate() != null) {
            VALUES("CREATE_DATE", "#{createDate,jdbcType=VARCHAR}");
        }

        if (record.getCreateTime() != null) {
            VALUES("CREATE_TIME", "#{createTime,jdbcType=VARCHAR}");
        }

        if (record.getUpdateDate() != null) {
            VALUES("UPDATE_DATE", "#{updateDate,jdbcType=VARCHAR}");
        }

        if (record.getUpdateTime() != null) {
            VALUES("UPDATE_TIME", "#{updateTime,jdbcType=VARCHAR}");
        }

        if (record.getWorker() != null) {
            VALUES("WORKER", "#{worker,jdbcType=VARCHAR}");
        }

        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_PH_USER
     *
     * @mbggenerated Thu Nov 06 17:17:41 KST 2014
     */
    public String selectBySpec(TPhUserSpec Spec) {
        BEGIN();
        if (Spec != null && Spec.isDistinct()) {
            SELECT_DISTINCT("USER_IDX");
        } else {
            SELECT("USER_IDX");
        }
        SELECT("PHONE_NUMBER");
        SELECT("USER_NUMBER");
        SELECT("STATUS");
        SELECT("DEVICE_TOKEN");
        SELECT("DEVICE_MODEL");
        SELECT("DEVICE_VERSION");
        SELECT("APP_VERSION");
        SELECT("CREATE_DATE");
        SELECT("CREATE_TIME");
        SELECT("UPDATE_DATE");
        SELECT("UPDATE_TIME");
        SELECT("WORKER");
        FROM("OP.T_PH_USER");
        applyWhere(Spec, false);

        if (Spec != null && Spec.getOrderByClause() != null) {
            ORDER_BY(Spec.getOrderByClause());
        }

        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_PH_USER
     *
     * @mbggenerated Thu Nov 06 17:17:41 KST 2014
     */
    public String updateBySpecSelective(Map<String, Object> parameter) {
        TPhUser record = (TPhUser) parameter.get("record");
        TPhUserSpec Spec = (TPhUserSpec) parameter.get("Spec");

        BEGIN();
        UPDATE("OP.T_PH_USER");

        if (record.getUserIdx() != null) {
            SET("USER_IDX = #{record.userIdx,jdbcType=DECIMAL}");
        }

        if (record.getPhoneNumber() != null) {
            SET("PHONE_NUMBER = #{record.phoneNumber,jdbcType=VARCHAR}");
        }

        if (record.getUserNumber() != null) {
            SET("USER_NUMBER = #{record.userNumber,jdbcType=VARCHAR}");
        }

        if (record.getStatus() != null) {
            SET("STATUS = #{record.status,jdbcType=VARCHAR}");
        }

        if (record.getDeviceToken() != null) {
            SET("DEVICE_TOKEN = #{record.deviceToken,jdbcType=VARCHAR}");
        }

        if (record.getDeviceModel() != null) {
            SET("DEVICE_MODEL = #{record.deviceModel,jdbcType=VARCHAR}");
        }

        if (record.getDeviceVersion() != null) {
            SET("DEVICE_VERSION = #{record.deviceVersion,jdbcType=VARCHAR}");
        }

        if (record.getAppVersion() != null) {
            SET("APP_VERSION = #{record.appVersion,jdbcType=VARCHAR}");
        }

        if (record.getCreateDate() != null) {
            SET("CREATE_DATE = #{record.createDate,jdbcType=VARCHAR}");
        }

        if (record.getCreateTime() != null) {
            SET("CREATE_TIME = #{record.createTime,jdbcType=VARCHAR}");
        }

        if (record.getUpdateDate() != null) {
            SET("UPDATE_DATE = #{record.updateDate,jdbcType=VARCHAR}");
        }

        if (record.getUpdateTime() != null) {
            SET("UPDATE_TIME = #{record.updateTime,jdbcType=VARCHAR}");
        }

        if (record.getWorker() != null) {
            SET("WORKER = #{record.worker,jdbcType=VARCHAR}");
        }

        applyWhere(Spec, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_PH_USER
     *
     * @mbggenerated Thu Nov 06 17:17:41 KST 2014
     */
    public String updateBySpec(Map<String, Object> parameter) {
        BEGIN();
        UPDATE("OP.T_PH_USER");

        SET("USER_IDX = #{record.userIdx,jdbcType=DECIMAL}");
        SET("PHONE_NUMBER = #{record.phoneNumber,jdbcType=VARCHAR}");
        SET("USER_NUMBER = #{record.userNumber,jdbcType=VARCHAR}");
        SET("STATUS = #{record.status,jdbcType=VARCHAR}");
        SET("DEVICE_TOKEN = #{record.deviceToken,jdbcType=VARCHAR}");
        SET("DEVICE_MODEL = #{record.deviceModel,jdbcType=VARCHAR}");
        SET("DEVICE_VERSION = #{record.deviceVersion,jdbcType=VARCHAR}");
        SET("APP_VERSION = #{record.appVersion,jdbcType=VARCHAR}");
        SET("CREATE_DATE = #{record.createDate,jdbcType=VARCHAR}");
        SET("CREATE_TIME = #{record.createTime,jdbcType=VARCHAR}");
        SET("UPDATE_DATE = #{record.updateDate,jdbcType=VARCHAR}");
        SET("UPDATE_TIME = #{record.updateTime,jdbcType=VARCHAR}");
        SET("WORKER = #{record.worker,jdbcType=VARCHAR}");

        TPhUserSpec Spec = (TPhUserSpec) parameter.get("Spec");
        applyWhere(Spec, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_PH_USER
     *
     * @mbggenerated Thu Nov 06 17:17:41 KST 2014
     */
    public String updateByPrimaryKeySelective(TPhUser record) {
        BEGIN();
        UPDATE("OP.T_PH_USER");

        if (record.getPhoneNumber() != null) {
            SET("PHONE_NUMBER = #{phoneNumber,jdbcType=VARCHAR}");
        }

        if (record.getUserNumber() != null) {
            SET("USER_NUMBER = #{userNumber,jdbcType=VARCHAR}");
        }

        if (record.getStatus() != null) {
            SET("STATUS = #{status,jdbcType=VARCHAR}");
        }

        if (record.getDeviceToken() != null) {
            SET("DEVICE_TOKEN = #{deviceToken,jdbcType=VARCHAR}");
        }

        if (record.getDeviceModel() != null) {
            SET("DEVICE_MODEL = #{deviceModel,jdbcType=VARCHAR}");
        }

        if (record.getDeviceVersion() != null) {
            SET("DEVICE_VERSION = #{deviceVersion,jdbcType=VARCHAR}");
        }

        if (record.getAppVersion() != null) {
            SET("APP_VERSION = #{appVersion,jdbcType=VARCHAR}");
        }

        if (record.getCreateDate() != null) {
            SET("CREATE_DATE = #{createDate,jdbcType=VARCHAR}");
        }

        if (record.getCreateTime() != null) {
            SET("CREATE_TIME = #{createTime,jdbcType=VARCHAR}");
        }

        if (record.getUpdateDate() != null) {
            SET("UPDATE_DATE = #{updateDate,jdbcType=VARCHAR}");
        }

        if (record.getUpdateTime() != null) {
            SET("UPDATE_TIME = #{updateTime,jdbcType=VARCHAR}");
        }

        if (record.getWorker() != null) {
            SET("WORKER = #{worker,jdbcType=VARCHAR}");
        }

        WHERE("USER_IDX = #{userIdx,jdbcType=DECIMAL}");

        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_PH_USER
     *
     * @mbggenerated Thu Nov 06 17:17:41 KST 2014
     */
    protected void applyWhere(TPhUserSpec Spec, boolean includeSpecPhrase) {
        if (Spec == null) {
            return;
        }

        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeSpecPhrase) {
            parmPhrase1 = "%s #{Spec.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{Spec.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{Spec.oredCriteria[%d].allCriteria[%d].value} and #{Spec.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{Spec.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{Spec.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{Spec.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{Spec.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }

        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = Spec.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }

                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }

                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }

        if (sb.length() > 0) {
            WHERE(sb.toString());
        }
    }
}