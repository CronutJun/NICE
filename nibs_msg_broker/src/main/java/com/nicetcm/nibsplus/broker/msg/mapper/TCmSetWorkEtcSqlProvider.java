package com.nicetcm.nibsplus.broker.msg.mapper;

import static org.apache.ibatis.jdbc.SqlBuilder.BEGIN;
import static org.apache.ibatis.jdbc.SqlBuilder.DELETE_FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.INSERT_INTO;
import static org.apache.ibatis.jdbc.SqlBuilder.ORDER_BY;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT_DISTINCT;
import static org.apache.ibatis.jdbc.SqlBuilder.SET;
import static org.apache.ibatis.jdbc.SqlBuilder.SQL;
import static org.apache.ibatis.jdbc.SqlBuilder.UPDATE;
import static org.apache.ibatis.jdbc.SqlBuilder.VALUES;
import static org.apache.ibatis.jdbc.SqlBuilder.WHERE;

import com.nicetcm.nibsplus.broker.msg.model.TCmSetWorkEtc;
import com.nicetcm.nibsplus.broker.msg.model.TCmSetWorkEtcSpec.Criteria;
import com.nicetcm.nibsplus.broker.msg.model.TCmSetWorkEtcSpec.Criterion;
import com.nicetcm.nibsplus.broker.msg.model.TCmSetWorkEtcSpec;
import java.util.List;
import java.util.Map;

public class TCmSetWorkEtcSqlProvider {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table OP.T_CM_SET_WORK_ETC
	 * @mbggenerated  Thu Nov 13 17:36:06 KST 2014
	 */
	public String countByspec(TCmSetWorkEtcSpec spec) {
		BEGIN();
		SELECT("count(*)");
		FROM("OP.T_CM_SET_WORK_ETC");
		applyWhere(spec, false);
		return SQL();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table OP.T_CM_SET_WORK_ETC
	 * @mbggenerated  Thu Nov 13 17:36:06 KST 2014
	 */
	public String deleteByspec(TCmSetWorkEtcSpec spec) {
		BEGIN();
		DELETE_FROM("OP.T_CM_SET_WORK_ETC");
		applyWhere(spec, false);
		return SQL();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table OP.T_CM_SET_WORK_ETC
	 * @mbggenerated  Thu Nov 13 17:36:06 KST 2014
	 */
	public String insertSelective(TCmSetWorkEtc record) {
		BEGIN();
		INSERT_INTO("OP.T_CM_SET_WORK_ETC");
		if (record.getOrgCd() != null) {
			VALUES("ORG_CD", "#{orgCd,jdbcType=VARCHAR}");
		}
		if (record.getWorkSeq() != null) {
			VALUES("WORK_SEQ", "#{workSeq,jdbcType=VARCHAR}");
		}
		if (record.getBranchCd() != null) {
			VALUES("BRANCH_CD", "#{branchCd,jdbcType=VARCHAR}");
		}
		if (record.getSiteCd() != null) {
			VALUES("SITE_CD", "#{siteCd,jdbcType=VARCHAR}");
		}
		if (record.getSiteNm() != null) {
			VALUES("SITE_NM", "#{siteNm,jdbcType=VARCHAR}");
		}
		if (record.getWorkDate() != null) {
			VALUES("WORK_DATE", "#{workDate,jdbcType=VARCHAR}");
		}
		if (record.getWorkCont() != null) {
			VALUES("WORK_CONT", "#{workCont,jdbcType=VARCHAR}");
		}
		if (record.getInsertDate() != null) {
			VALUES("INSERT_DATE", "#{insertDate,jdbcType=TIMESTAMP}");
		}
		if (record.getUpdateDate() != null) {
			VALUES("UPDATE_DATE", "#{updateDate,jdbcType=TIMESTAMP}");
		}
		return SQL();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table OP.T_CM_SET_WORK_ETC
	 * @mbggenerated  Thu Nov 13 17:36:06 KST 2014
	 */
	public String selectByspec(TCmSetWorkEtcSpec spec) {
		BEGIN();
		if (spec != null && spec.isDistinct()) {
			SELECT_DISTINCT("ORG_CD");
		} else {
			SELECT("ORG_CD");
		}
		SELECT("WORK_SEQ");
		SELECT("BRANCH_CD");
		SELECT("SITE_CD");
		SELECT("SITE_NM");
		SELECT("WORK_DATE");
		SELECT("WORK_CONT");
		SELECT("INSERT_DATE");
		SELECT("UPDATE_DATE");
		FROM("OP.T_CM_SET_WORK_ETC");
		applyWhere(spec, false);
		if (spec != null && spec.getOrderByClause() != null) {
			ORDER_BY(spec.getOrderByClause());
		}
		return SQL();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table OP.T_CM_SET_WORK_ETC
	 * @mbggenerated  Thu Nov 13 17:36:06 KST 2014
	 */
	public String updateByspecSelective(Map<String, Object> parameter) {
		TCmSetWorkEtc record = (TCmSetWorkEtc) parameter.get("record");
		TCmSetWorkEtcSpec spec = (TCmSetWorkEtcSpec) parameter
				.get("spec");
		BEGIN();
		UPDATE("OP.T_CM_SET_WORK_ETC");
		if (record.getOrgCd() != null) {
			SET("ORG_CD = #{record.orgCd,jdbcType=VARCHAR}");
		}
		if (record.getWorkSeq() != null) {
			SET("WORK_SEQ = #{record.workSeq,jdbcType=VARCHAR}");
		}
		if (record.getBranchCd() != null) {
			SET("BRANCH_CD = #{record.branchCd,jdbcType=VARCHAR}");
		}
		if (record.getSiteCd() != null) {
			SET("SITE_CD = #{record.siteCd,jdbcType=VARCHAR}");
		}
		if (record.getSiteNm() != null) {
			SET("SITE_NM = #{record.siteNm,jdbcType=VARCHAR}");
		}
		if (record.getWorkDate() != null) {
			SET("WORK_DATE = #{record.workDate,jdbcType=VARCHAR}");
		}
		if (record.getWorkCont() != null) {
			SET("WORK_CONT = #{record.workCont,jdbcType=VARCHAR}");
		}
		if (record.getInsertDate() != null) {
			SET("INSERT_DATE = #{record.insertDate,jdbcType=TIMESTAMP}");
		}
		if (record.getUpdateDate() != null) {
			SET("UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP}");
		}
		applyWhere(spec, true);
		return SQL();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table OP.T_CM_SET_WORK_ETC
	 * @mbggenerated  Thu Nov 13 17:36:06 KST 2014
	 */
	public String updateByspec(Map<String, Object> parameter) {
		BEGIN();
		UPDATE("OP.T_CM_SET_WORK_ETC");
		SET("ORG_CD = #{record.orgCd,jdbcType=VARCHAR}");
		SET("WORK_SEQ = #{record.workSeq,jdbcType=VARCHAR}");
		SET("BRANCH_CD = #{record.branchCd,jdbcType=VARCHAR}");
		SET("SITE_CD = #{record.siteCd,jdbcType=VARCHAR}");
		SET("SITE_NM = #{record.siteNm,jdbcType=VARCHAR}");
		SET("WORK_DATE = #{record.workDate,jdbcType=VARCHAR}");
		SET("WORK_CONT = #{record.workCont,jdbcType=VARCHAR}");
		SET("INSERT_DATE = #{record.insertDate,jdbcType=TIMESTAMP}");
		SET("UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP}");
		TCmSetWorkEtcSpec spec = (TCmSetWorkEtcSpec) parameter
				.get("spec");
		applyWhere(spec, true);
		return SQL();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table OP.T_CM_SET_WORK_ETC
	 * @mbggenerated  Thu Nov 13 17:36:06 KST 2014
	 */
	protected void applyWhere(TCmSetWorkEtcSpec spec,
			boolean includespecPhrase) {
		if (spec == null) {
			return;
		}
		String parmPhrase1;
		String parmPhrase1_th;
		String parmPhrase2;
		String parmPhrase2_th;
		String parmPhrase3;
		String parmPhrase3_th;
		if (includespecPhrase) {
			parmPhrase1 = "%s #{spec.oredCriteria[%d].allCriteria[%d].value}";
			parmPhrase1_th = "%s #{spec.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
			parmPhrase2 = "%s #{spec.oredCriteria[%d].allCriteria[%d].value} and #{spec.oredCriteria[%d].criteria[%d].secondValue}";
			parmPhrase2_th = "%s #{spec.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{spec.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
			parmPhrase3 = "#{spec.oredCriteria[%d].allCriteria[%d].value[%d]}";
			parmPhrase3_th = "#{spec.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
		} else {
			parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
			parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
			parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
			parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
			parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
			parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
		}
		StringBuilder sb = new StringBuilder();
		List<Criteria> oredCriteria = spec.getOredCriteria();
		boolean firstCriteria = true;
		for (int i = 0; i < oredCriteria.size(); i++) {
			Criteria criteria = oredCriteria.get(i);
			if (criteria.isValid()) {
				if (firstCriteria) {
					firstCriteria = false;
				} else {
					sb.append(" or ");
				}
				sb.append('(');
				List<Criterion> criterions = criteria.getAllCriteria();
				boolean firstCriterion = true;
				for (int j = 0; j < criterions.size(); j++) {
					Criterion criterion = criterions.get(j);
					if (firstCriterion) {
						firstCriterion = false;
					} else {
						sb.append(" and ");
					}
					if (criterion.isNoValue()) {
						sb.append(criterion.getCondition());
					} else if (criterion.isSingleValue()) {
						if (criterion.getTypeHandler() == null) {
							sb.append(String.format(parmPhrase1,
									criterion.getCondition(), i, j));
						} else {
							sb.append(String.format(parmPhrase1_th,
									criterion.getCondition(), i, j,
									criterion.getTypeHandler()));
						}
					} else if (criterion.isBetweenValue()) {
						if (criterion.getTypeHandler() == null) {
							sb.append(String.format(parmPhrase2,
									criterion.getCondition(), i, j, i, j));
						} else {
							sb.append(String.format(parmPhrase2_th,
									criterion.getCondition(), i, j,
									criterion.getTypeHandler(), i, j,
									criterion.getTypeHandler()));
						}
					} else if (criterion.isListValue()) {
						sb.append(criterion.getCondition());
						sb.append(" (");
						List<?> listItems = (List<?>) criterion.getValue();
						boolean comma = false;
						for (int k = 0; k < listItems.size(); k++) {
							if (comma) {
								sb.append(", ");
							} else {
								comma = true;
							}
							if (criterion.getTypeHandler() == null) {
								sb.append(String.format(parmPhrase3, i, j, k));
							} else {
								sb.append(String.format(parmPhrase3_th, i, j,
										k, criterion.getTypeHandler()));
							}
						}
						sb.append(')');
					}
				}
				sb.append(')');
			}
		}
		if (sb.length() > 0) {
			WHERE(sb.toString());
		}
	}
}