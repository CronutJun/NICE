package com.nicetcm.nibsplus.broker.msg.mapper;

import static org.apache.ibatis.jdbc.SqlBuilder.BEGIN;
import static org.apache.ibatis.jdbc.SqlBuilder.DELETE_FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.INSERT_INTO;
import static org.apache.ibatis.jdbc.SqlBuilder.ORDER_BY;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT_DISTINCT;
import static org.apache.ibatis.jdbc.SqlBuilder.SET;
import static org.apache.ibatis.jdbc.SqlBuilder.SQL;
import static org.apache.ibatis.jdbc.SqlBuilder.UPDATE;
import static org.apache.ibatis.jdbc.SqlBuilder.VALUES;
import static org.apache.ibatis.jdbc.SqlBuilder.WHERE;

import com.nicetcm.nibsplus.broker.msg.model.TCmEmartMember;
import com.nicetcm.nibsplus.broker.msg.model.TCmEmartMemberSpec.Criteria;
import com.nicetcm.nibsplus.broker.msg.model.TCmEmartMemberSpec.Criterion;
import com.nicetcm.nibsplus.broker.msg.model.TCmEmartMemberSpec;
import java.util.List;
import java.util.Map;

public class TCmEmartMemberSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CM_EMART_MEMBER
     *
     * @mbggenerated Thu Jul 31 14:31:01 KST 2014
     */
    public String countBySpec(TCmEmartMemberSpec spec) {
        BEGIN();
        SELECT("count(*)");
        FROM("OP.T_CM_EMART_MEMBER");
        applyWhere(spec, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CM_EMART_MEMBER
     *
     * @mbggenerated Thu Jul 31 14:31:01 KST 2014
     */
    public String deleteBySpec(TCmEmartMemberSpec spec) {
        BEGIN();
        DELETE_FROM("OP.T_CM_EMART_MEMBER");
        applyWhere(spec, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CM_EMART_MEMBER
     *
     * @mbggenerated Thu Jul 31 14:31:01 KST 2014
     */
    public String insertSelective(TCmEmartMember record) {
        BEGIN();
        INSERT_INTO("OP.T_CM_EMART_MEMBER");
        
        if (record.getMemberId() != null) {
            VALUES("MEMBER_ID", "#{memberId,jdbcType=VARCHAR}");
        }
        
        if (record.getBranchCd() != null) {
            VALUES("BRANCH_CD", "#{branchCd,jdbcType=VARCHAR}");
        }
        
        if (record.getMemberNm() != null) {
            VALUES("MEMBER_NM", "#{memberNm,jdbcType=VARCHAR}");
        }
        
        if (record.getPassWord() != null) {
            VALUES("PASS_WORD", "#{passWord,jdbcType=VARCHAR}");
        }
        
        if (record.getUseYn() != null) {
            VALUES("USE_YN", "#{useYn,jdbcType=VARCHAR}");
        }
        
        if (record.getTeleNo() != null) {
            VALUES("TELE_NO", "#{teleNo,jdbcType=VARCHAR}");
        }
        
        if (record.getCellNo() != null) {
            VALUES("CELL_NO", "#{cellNo,jdbcType=VARCHAR}");
        }
        
        if (record.getHomeNo() != null) {
            VALUES("HOME_NO", "#{homeNo,jdbcType=VARCHAR}");
        }
        
        if (record.getAuthCd() != null) {
            VALUES("AUTH_CD", "#{authCd,jdbcType=VARCHAR}");
        }
        
        if (record.getUseType() != null) {
            VALUES("USE_TYPE", "#{useType,jdbcType=VARCHAR}");
        }
        
        if (record.getCashierType() != null) {
            VALUES("CASHIER_TYPE", "#{cashierType,jdbcType=VARCHAR}");
        }
        
        if (record.getMemo() != null) {
            VALUES("MEMO", "#{memo,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdateUid() != null) {
            VALUES("UPDATE_UID", "#{updateUid,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdateDate() != null) {
            VALUES("UPDATE_DATE", "#{updateDate,jdbcType=TIMESTAMP}");
        }
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CM_EMART_MEMBER
     *
     * @mbggenerated Thu Jul 31 14:31:01 KST 2014
     */
    public String selectBySpec(TCmEmartMemberSpec spec) {
        BEGIN();
        if (spec != null && spec.isDistinct()) {
            SELECT_DISTINCT("MEMBER_ID");
        } else {
            SELECT("MEMBER_ID");
        }
        SELECT("BRANCH_CD");
        SELECT("MEMBER_NM");
        SELECT("PASS_WORD");
        SELECT("USE_YN");
        SELECT("TELE_NO");
        SELECT("CELL_NO");
        SELECT("HOME_NO");
        SELECT("AUTH_CD");
        SELECT("USE_TYPE");
        SELECT("CASHIER_TYPE");
        SELECT("MEMO");
        SELECT("UPDATE_UID");
        SELECT("UPDATE_DATE");
        FROM("OP.T_CM_EMART_MEMBER");
        applyWhere(spec, false);
        
        if (spec != null && spec.getOrderByClause() != null) {
            ORDER_BY(spec.getOrderByClause());
        }
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CM_EMART_MEMBER
     *
     * @mbggenerated Thu Jul 31 14:31:01 KST 2014
     */
    public String updateBySpecSelective(Map<String, Object> parameter) {
        TCmEmartMember record = (TCmEmartMember) parameter.get("record");
        TCmEmartMemberSpec spec = (TCmEmartMemberSpec) parameter.get("spec");
        
        BEGIN();
        UPDATE("OP.T_CM_EMART_MEMBER");
        
        if (record.getMemberId() != null) {
            SET("MEMBER_ID = #{record.memberId,jdbcType=VARCHAR}");
        }
        
        if (record.getBranchCd() != null) {
            SET("BRANCH_CD = #{record.branchCd,jdbcType=VARCHAR}");
        }
        
        if (record.getMemberNm() != null) {
            SET("MEMBER_NM = #{record.memberNm,jdbcType=VARCHAR}");
        }
        
        if (record.getPassWord() != null) {
            SET("PASS_WORD = #{record.passWord,jdbcType=VARCHAR}");
        }
        
        if (record.getUseYn() != null) {
            SET("USE_YN = #{record.useYn,jdbcType=VARCHAR}");
        }
        
        if (record.getTeleNo() != null) {
            SET("TELE_NO = #{record.teleNo,jdbcType=VARCHAR}");
        }
        
        if (record.getCellNo() != null) {
            SET("CELL_NO = #{record.cellNo,jdbcType=VARCHAR}");
        }
        
        if (record.getHomeNo() != null) {
            SET("HOME_NO = #{record.homeNo,jdbcType=VARCHAR}");
        }
        
        if (record.getAuthCd() != null) {
            SET("AUTH_CD = #{record.authCd,jdbcType=VARCHAR}");
        }
        
        if (record.getUseType() != null) {
            SET("USE_TYPE = #{record.useType,jdbcType=VARCHAR}");
        }
        
        if (record.getCashierType() != null) {
            SET("CASHIER_TYPE = #{record.cashierType,jdbcType=VARCHAR}");
        }
        
        if (record.getMemo() != null) {
            SET("MEMO = #{record.memo,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdateUid() != null) {
            SET("UPDATE_UID = #{record.updateUid,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdateDate() != null) {
            SET("UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP}");
        }
        
        applyWhere(spec, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CM_EMART_MEMBER
     *
     * @mbggenerated Thu Jul 31 14:31:01 KST 2014
     */
    public String updateBySpec(Map<String, Object> parameter) {
        BEGIN();
        UPDATE("OP.T_CM_EMART_MEMBER");
        
        SET("MEMBER_ID = #{record.memberId,jdbcType=VARCHAR}");
        SET("BRANCH_CD = #{record.branchCd,jdbcType=VARCHAR}");
        SET("MEMBER_NM = #{record.memberNm,jdbcType=VARCHAR}");
        SET("PASS_WORD = #{record.passWord,jdbcType=VARCHAR}");
        SET("USE_YN = #{record.useYn,jdbcType=VARCHAR}");
        SET("TELE_NO = #{record.teleNo,jdbcType=VARCHAR}");
        SET("CELL_NO = #{record.cellNo,jdbcType=VARCHAR}");
        SET("HOME_NO = #{record.homeNo,jdbcType=VARCHAR}");
        SET("AUTH_CD = #{record.authCd,jdbcType=VARCHAR}");
        SET("USE_TYPE = #{record.useType,jdbcType=VARCHAR}");
        SET("CASHIER_TYPE = #{record.cashierType,jdbcType=VARCHAR}");
        SET("MEMO = #{record.memo,jdbcType=VARCHAR}");
        SET("UPDATE_UID = #{record.updateUid,jdbcType=VARCHAR}");
        SET("UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP}");
        
        TCmEmartMemberSpec spec = (TCmEmartMemberSpec) parameter.get("spec");
        applyWhere(spec, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CM_EMART_MEMBER
     *
     * @mbggenerated Thu Jul 31 14:31:01 KST 2014
     */
    public String updateByPrimaryKeySelective(TCmEmartMember record) {
        BEGIN();
        UPDATE("OP.T_CM_EMART_MEMBER");
        
        if (record.getMemberNm() != null) {
            SET("MEMBER_NM = #{memberNm,jdbcType=VARCHAR}");
        }
        
        if (record.getPassWord() != null) {
            SET("PASS_WORD = #{passWord,jdbcType=VARCHAR}");
        }
        
        if (record.getUseYn() != null) {
            SET("USE_YN = #{useYn,jdbcType=VARCHAR}");
        }
        
        if (record.getTeleNo() != null) {
            SET("TELE_NO = #{teleNo,jdbcType=VARCHAR}");
        }
        
        if (record.getCellNo() != null) {
            SET("CELL_NO = #{cellNo,jdbcType=VARCHAR}");
        }
        
        if (record.getHomeNo() != null) {
            SET("HOME_NO = #{homeNo,jdbcType=VARCHAR}");
        }
        
        if (record.getAuthCd() != null) {
            SET("AUTH_CD = #{authCd,jdbcType=VARCHAR}");
        }
        
        if (record.getUseType() != null) {
            SET("USE_TYPE = #{useType,jdbcType=VARCHAR}");
        }
        
        if (record.getCashierType() != null) {
            SET("CASHIER_TYPE = #{cashierType,jdbcType=VARCHAR}");
        }
        
        if (record.getMemo() != null) {
            SET("MEMO = #{memo,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdateUid() != null) {
            SET("UPDATE_UID = #{updateUid,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdateDate() != null) {
            SET("UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP}");
        }
        
        WHERE("MEMBER_ID = #{memberId,jdbcType=VARCHAR}");
        WHERE("BRANCH_CD = #{branchCd,jdbcType=VARCHAR}");
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CM_EMART_MEMBER
     *
     * @mbggenerated Thu Jul 31 14:31:01 KST 2014
     */
    protected void applyWhere(TCmEmartMemberSpec spec, boolean includeSpecPhrase) {
        if (spec == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeSpecPhrase) {
            parmPhrase1 = "%s #{spec.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{spec.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{spec.oredCriteria[%d].allCriteria[%d].value} and #{spec.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{spec.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{spec.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{spec.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{spec.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = spec.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            WHERE(sb.toString());
        }
    }
}