package com.nicetcm.nibsplus.broker.msg.mapper;

import static org.apache.ibatis.jdbc.SqlBuilder.BEGIN;
import static org.apache.ibatis.jdbc.SqlBuilder.DELETE_FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.INSERT_INTO;
import static org.apache.ibatis.jdbc.SqlBuilder.ORDER_BY;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT_DISTINCT;
import static org.apache.ibatis.jdbc.SqlBuilder.SET;
import static org.apache.ibatis.jdbc.SqlBuilder.SQL;
import static org.apache.ibatis.jdbc.SqlBuilder.UPDATE;
import static org.apache.ibatis.jdbc.SqlBuilder.VALUES;
import static org.apache.ibatis.jdbc.SqlBuilder.WHERE;

import com.nicetcm.nibsplus.broker.msg.model.TCtManyErrorMng;
import com.nicetcm.nibsplus.broker.msg.model.TCtManyErrorMngSpec.Criteria;
import com.nicetcm.nibsplus.broker.msg.model.TCtManyErrorMngSpec.Criterion;
import com.nicetcm.nibsplus.broker.msg.model.TCtManyErrorMngSpec;
import java.util.List;
import java.util.Map;

public class TCtManyErrorMngSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_MANY_ERROR_MNG
     *
     * @mbggenerated Thu Jul 31 14:31:00 KST 2014
     */
    public String countBySpec(TCtManyErrorMngSpec spec) {
        BEGIN();
        SELECT("count(*)");
        FROM("OP.T_CT_MANY_ERROR_MNG");
        applyWhere(spec, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_MANY_ERROR_MNG
     *
     * @mbggenerated Thu Jul 31 14:31:00 KST 2014
     */
    public String deleteBySpec(TCtManyErrorMngSpec spec) {
        BEGIN();
        DELETE_FROM("OP.T_CT_MANY_ERROR_MNG");
        applyWhere(spec, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_MANY_ERROR_MNG
     *
     * @mbggenerated Thu Jul 31 14:31:00 KST 2014
     */
    public String insertSelective(TCtManyErrorMng record) {
        BEGIN();
        INSERT_INTO("OP.T_CT_MANY_ERROR_MNG");
        
        if (record.getCallDate() != null) {
            VALUES("CALL_DATE", "#{callDate,jdbcType=VARCHAR}");
        }
        
        if (record.getCallNo() != null) {
            VALUES("CALL_NO", "#{callNo,jdbcType=VARCHAR}");
        }
        
        if (record.getMadeComCd() != null) {
            VALUES("MADE_COM_CD", "#{madeComCd,jdbcType=VARCHAR}");
        }
        
        if (record.getCallTime() != null) {
            VALUES("CALL_TIME", "#{callTime,jdbcType=VARCHAR}");
        }
        
        if (record.getBaseDayCnt() != null) {
            VALUES("BASE_DAY_CNT", "#{baseDayCnt,jdbcType=DECIMAL}");
        }
        
        if (record.getBaseLimit() != null) {
            VALUES("BASE_LIMIT", "#{baseLimit,jdbcType=DECIMAL}");
        }
        
        if (record.getErrCnt() != null) {
            VALUES("ERR_CNT", "#{errCnt,jdbcType=DECIMAL}");
        }
        
        if (record.getOrgCd() != null) {
            VALUES("ORG_CD", "#{orgCd,jdbcType=VARCHAR}");
        }
        
        if (record.getBranchCd() != null) {
            VALUES("BRANCH_CD", "#{branchCd,jdbcType=VARCHAR}");
        }
        
        if (record.getMacNo() != null) {
            VALUES("MAC_NO", "#{macNo,jdbcType=VARCHAR}");
        }
        
        if (record.getSiteCd() != null) {
            VALUES("SITE_CD", "#{siteCd,jdbcType=VARCHAR}");
        }
        
        if (record.getMacModel() != null) {
            VALUES("MAC_MODEL", "#{macModel,jdbcType=VARCHAR}");
        }
        
        if (record.getSiteNm() != null) {
            VALUES("SITE_NM", "#{siteNm,jdbcType=VARCHAR}");
        }
        
        if (record.getMsg() != null) {
            VALUES("MSG", "#{msg,jdbcType=VARCHAR}");
        }
        
        if (record.getRemark() != null) {
            VALUES("REMARK", "#{remark,jdbcType=VARCHAR}");
        }
        
        if (record.getAsMedia() != null) {
            VALUES("AS_MEDIA", "#{asMedia,jdbcType=VARCHAR}");
        }
        
        if (record.getManyErrGb() != null) {
            VALUES("MANY_ERR_GB", "#{manyErrGb,jdbcType=VARCHAR}");
        }
        
        if (record.getErrorCd() != null) {
            VALUES("ERROR_CD", "#{errorCd,jdbcType=VARCHAR}");
        }
        
        if (record.getLcCd() != null) {
            VALUES("LC_CD", "#{lcCd,jdbcType=VARCHAR}");
        }
        
        if (record.getMtcCd() != null) {
            VALUES("MTC_CD", "#{mtcCd,jdbcType=VARCHAR}");
        }
        
        if (record.getFinishDate() != null) {
            VALUES("FINISH_DATE", "#{finishDate,jdbcType=VARCHAR}");
        }
        
        if (record.getFinishTime() != null) {
            VALUES("FINISH_TIME", "#{finishTime,jdbcType=VARCHAR}");
        }
        
        if (record.getFinishNm() != null) {
            VALUES("FINISH_NM", "#{finishNm,jdbcType=VARCHAR}");
        }
        
        if (record.getOrgSendYn() != null) {
            VALUES("ORG_SEND_YN", "#{orgSendYn,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdateDate() != null) {
            VALUES("UPDATE_DATE", "#{updateDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdateUid() != null) {
            VALUES("UPDATE_UID", "#{updateUid,jdbcType=VARCHAR}");
        }
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_MANY_ERROR_MNG
     *
     * @mbggenerated Thu Jul 31 14:31:00 KST 2014
     */
    public String selectBySpec(TCtManyErrorMngSpec spec) {
        BEGIN();
        if (spec != null && spec.isDistinct()) {
            SELECT_DISTINCT("CALL_DATE");
        } else {
            SELECT("CALL_DATE");
        }
        SELECT("CALL_NO");
        SELECT("MADE_COM_CD");
        SELECT("CALL_TIME");
        SELECT("BASE_DAY_CNT");
        SELECT("BASE_LIMIT");
        SELECT("ERR_CNT");
        SELECT("ORG_CD");
        SELECT("BRANCH_CD");
        SELECT("MAC_NO");
        SELECT("SITE_CD");
        SELECT("MAC_MODEL");
        SELECT("SITE_NM");
        SELECT("MSG");
        SELECT("REMARK");
        SELECT("AS_MEDIA");
        SELECT("MANY_ERR_GB");
        SELECT("ERROR_CD");
        SELECT("LC_CD");
        SELECT("MTC_CD");
        SELECT("FINISH_DATE");
        SELECT("FINISH_TIME");
        SELECT("FINISH_NM");
        SELECT("ORG_SEND_YN");
        SELECT("UPDATE_DATE");
        SELECT("UPDATE_UID");
        FROM("OP.T_CT_MANY_ERROR_MNG");
        applyWhere(spec, false);
        
        if (spec != null && spec.getOrderByClause() != null) {
            ORDER_BY(spec.getOrderByClause());
        }
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_MANY_ERROR_MNG
     *
     * @mbggenerated Thu Jul 31 14:31:00 KST 2014
     */
    public String updateBySpecSelective(Map<String, Object> parameter) {
        TCtManyErrorMng record = (TCtManyErrorMng) parameter.get("record");
        TCtManyErrorMngSpec spec = (TCtManyErrorMngSpec) parameter.get("spec");
        
        BEGIN();
        UPDATE("OP.T_CT_MANY_ERROR_MNG");
        
        if (record.getCallDate() != null) {
            SET("CALL_DATE = #{record.callDate,jdbcType=VARCHAR}");
        }
        
        if (record.getCallNo() != null) {
            SET("CALL_NO = #{record.callNo,jdbcType=VARCHAR}");
        }
        
        if (record.getMadeComCd() != null) {
            SET("MADE_COM_CD = #{record.madeComCd,jdbcType=VARCHAR}");
        }
        
        if (record.getCallTime() != null) {
            SET("CALL_TIME = #{record.callTime,jdbcType=VARCHAR}");
        }
        
        if (record.getBaseDayCnt() != null) {
            SET("BASE_DAY_CNT = #{record.baseDayCnt,jdbcType=DECIMAL}");
        }
        
        if (record.getBaseLimit() != null) {
            SET("BASE_LIMIT = #{record.baseLimit,jdbcType=DECIMAL}");
        }
        
        if (record.getErrCnt() != null) {
            SET("ERR_CNT = #{record.errCnt,jdbcType=DECIMAL}");
        }
        
        if (record.getOrgCd() != null) {
            SET("ORG_CD = #{record.orgCd,jdbcType=VARCHAR}");
        }
        
        if (record.getBranchCd() != null) {
            SET("BRANCH_CD = #{record.branchCd,jdbcType=VARCHAR}");
        }
        
        if (record.getMacNo() != null) {
            SET("MAC_NO = #{record.macNo,jdbcType=VARCHAR}");
        }
        
        if (record.getSiteCd() != null) {
            SET("SITE_CD = #{record.siteCd,jdbcType=VARCHAR}");
        }
        
        if (record.getMacModel() != null) {
            SET("MAC_MODEL = #{record.macModel,jdbcType=VARCHAR}");
        }
        
        if (record.getSiteNm() != null) {
            SET("SITE_NM = #{record.siteNm,jdbcType=VARCHAR}");
        }
        
        if (record.getMsg() != null) {
            SET("MSG = #{record.msg,jdbcType=VARCHAR}");
        }
        
        if (record.getRemark() != null) {
            SET("REMARK = #{record.remark,jdbcType=VARCHAR}");
        }
        
        if (record.getAsMedia() != null) {
            SET("AS_MEDIA = #{record.asMedia,jdbcType=VARCHAR}");
        }
        
        if (record.getManyErrGb() != null) {
            SET("MANY_ERR_GB = #{record.manyErrGb,jdbcType=VARCHAR}");
        }
        
        if (record.getErrorCd() != null) {
            SET("ERROR_CD = #{record.errorCd,jdbcType=VARCHAR}");
        }
        
        if (record.getLcCd() != null) {
            SET("LC_CD = #{record.lcCd,jdbcType=VARCHAR}");
        }
        
        if (record.getMtcCd() != null) {
            SET("MTC_CD = #{record.mtcCd,jdbcType=VARCHAR}");
        }
        
        if (record.getFinishDate() != null) {
            SET("FINISH_DATE = #{record.finishDate,jdbcType=VARCHAR}");
        }
        
        if (record.getFinishTime() != null) {
            SET("FINISH_TIME = #{record.finishTime,jdbcType=VARCHAR}");
        }
        
        if (record.getFinishNm() != null) {
            SET("FINISH_NM = #{record.finishNm,jdbcType=VARCHAR}");
        }
        
        if (record.getOrgSendYn() != null) {
            SET("ORG_SEND_YN = #{record.orgSendYn,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdateDate() != null) {
            SET("UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdateUid() != null) {
            SET("UPDATE_UID = #{record.updateUid,jdbcType=VARCHAR}");
        }
        
        applyWhere(spec, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_MANY_ERROR_MNG
     *
     * @mbggenerated Thu Jul 31 14:31:00 KST 2014
     */
    public String updateBySpec(Map<String, Object> parameter) {
        BEGIN();
        UPDATE("OP.T_CT_MANY_ERROR_MNG");
        
        SET("CALL_DATE = #{record.callDate,jdbcType=VARCHAR}");
        SET("CALL_NO = #{record.callNo,jdbcType=VARCHAR}");
        SET("MADE_COM_CD = #{record.madeComCd,jdbcType=VARCHAR}");
        SET("CALL_TIME = #{record.callTime,jdbcType=VARCHAR}");
        SET("BASE_DAY_CNT = #{record.baseDayCnt,jdbcType=DECIMAL}");
        SET("BASE_LIMIT = #{record.baseLimit,jdbcType=DECIMAL}");
        SET("ERR_CNT = #{record.errCnt,jdbcType=DECIMAL}");
        SET("ORG_CD = #{record.orgCd,jdbcType=VARCHAR}");
        SET("BRANCH_CD = #{record.branchCd,jdbcType=VARCHAR}");
        SET("MAC_NO = #{record.macNo,jdbcType=VARCHAR}");
        SET("SITE_CD = #{record.siteCd,jdbcType=VARCHAR}");
        SET("MAC_MODEL = #{record.macModel,jdbcType=VARCHAR}");
        SET("SITE_NM = #{record.siteNm,jdbcType=VARCHAR}");
        SET("MSG = #{record.msg,jdbcType=VARCHAR}");
        SET("REMARK = #{record.remark,jdbcType=VARCHAR}");
        SET("AS_MEDIA = #{record.asMedia,jdbcType=VARCHAR}");
        SET("MANY_ERR_GB = #{record.manyErrGb,jdbcType=VARCHAR}");
        SET("ERROR_CD = #{record.errorCd,jdbcType=VARCHAR}");
        SET("LC_CD = #{record.lcCd,jdbcType=VARCHAR}");
        SET("MTC_CD = #{record.mtcCd,jdbcType=VARCHAR}");
        SET("FINISH_DATE = #{record.finishDate,jdbcType=VARCHAR}");
        SET("FINISH_TIME = #{record.finishTime,jdbcType=VARCHAR}");
        SET("FINISH_NM = #{record.finishNm,jdbcType=VARCHAR}");
        SET("ORG_SEND_YN = #{record.orgSendYn,jdbcType=VARCHAR}");
        SET("UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP}");
        SET("UPDATE_UID = #{record.updateUid,jdbcType=VARCHAR}");
        
        TCtManyErrorMngSpec spec = (TCtManyErrorMngSpec) parameter.get("spec");
        applyWhere(spec, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_MANY_ERROR_MNG
     *
     * @mbggenerated Thu Jul 31 14:31:00 KST 2014
     */
    public String updateByPrimaryKeySelective(TCtManyErrorMng record) {
        BEGIN();
        UPDATE("OP.T_CT_MANY_ERROR_MNG");
        
        if (record.getMadeComCd() != null) {
            SET("MADE_COM_CD = #{madeComCd,jdbcType=VARCHAR}");
        }
        
        if (record.getCallTime() != null) {
            SET("CALL_TIME = #{callTime,jdbcType=VARCHAR}");
        }
        
        if (record.getBaseDayCnt() != null) {
            SET("BASE_DAY_CNT = #{baseDayCnt,jdbcType=DECIMAL}");
        }
        
        if (record.getBaseLimit() != null) {
            SET("BASE_LIMIT = #{baseLimit,jdbcType=DECIMAL}");
        }
        
        if (record.getErrCnt() != null) {
            SET("ERR_CNT = #{errCnt,jdbcType=DECIMAL}");
        }
        
        if (record.getOrgCd() != null) {
            SET("ORG_CD = #{orgCd,jdbcType=VARCHAR}");
        }
        
        if (record.getBranchCd() != null) {
            SET("BRANCH_CD = #{branchCd,jdbcType=VARCHAR}");
        }
        
        if (record.getMacNo() != null) {
            SET("MAC_NO = #{macNo,jdbcType=VARCHAR}");
        }
        
        if (record.getSiteCd() != null) {
            SET("SITE_CD = #{siteCd,jdbcType=VARCHAR}");
        }
        
        if (record.getMacModel() != null) {
            SET("MAC_MODEL = #{macModel,jdbcType=VARCHAR}");
        }
        
        if (record.getSiteNm() != null) {
            SET("SITE_NM = #{siteNm,jdbcType=VARCHAR}");
        }
        
        if (record.getMsg() != null) {
            SET("MSG = #{msg,jdbcType=VARCHAR}");
        }
        
        if (record.getRemark() != null) {
            SET("REMARK = #{remark,jdbcType=VARCHAR}");
        }
        
        if (record.getAsMedia() != null) {
            SET("AS_MEDIA = #{asMedia,jdbcType=VARCHAR}");
        }
        
        if (record.getManyErrGb() != null) {
            SET("MANY_ERR_GB = #{manyErrGb,jdbcType=VARCHAR}");
        }
        
        if (record.getErrorCd() != null) {
            SET("ERROR_CD = #{errorCd,jdbcType=VARCHAR}");
        }
        
        if (record.getLcCd() != null) {
            SET("LC_CD = #{lcCd,jdbcType=VARCHAR}");
        }
        
        if (record.getMtcCd() != null) {
            SET("MTC_CD = #{mtcCd,jdbcType=VARCHAR}");
        }
        
        if (record.getFinishDate() != null) {
            SET("FINISH_DATE = #{finishDate,jdbcType=VARCHAR}");
        }
        
        if (record.getFinishTime() != null) {
            SET("FINISH_TIME = #{finishTime,jdbcType=VARCHAR}");
        }
        
        if (record.getFinishNm() != null) {
            SET("FINISH_NM = #{finishNm,jdbcType=VARCHAR}");
        }
        
        if (record.getOrgSendYn() != null) {
            SET("ORG_SEND_YN = #{orgSendYn,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdateDate() != null) {
            SET("UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdateUid() != null) {
            SET("UPDATE_UID = #{updateUid,jdbcType=VARCHAR}");
        }
        
        WHERE("CALL_DATE = #{callDate,jdbcType=VARCHAR}");
        WHERE("CALL_NO = #{callNo,jdbcType=VARCHAR}");
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_MANY_ERROR_MNG
     *
     * @mbggenerated Thu Jul 31 14:31:00 KST 2014
     */
    protected void applyWhere(TCtManyErrorMngSpec spec, boolean includeSpecPhrase) {
        if (spec == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeSpecPhrase) {
            parmPhrase1 = "%s #{spec.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{spec.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{spec.oredCriteria[%d].allCriteria[%d].value} and #{spec.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{spec.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{spec.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{spec.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{spec.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = spec.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            WHERE(sb.toString());
        }
    }
}