package com.nicetcm.nibsplus.broker.msg.mapper;

import static org.apache.ibatis.jdbc.SqlBuilder.BEGIN;
import static org.apache.ibatis.jdbc.SqlBuilder.DELETE_FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.INSERT_INTO;
import static org.apache.ibatis.jdbc.SqlBuilder.ORDER_BY;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT_DISTINCT;
import static org.apache.ibatis.jdbc.SqlBuilder.SET;
import static org.apache.ibatis.jdbc.SqlBuilder.SQL;
import static org.apache.ibatis.jdbc.SqlBuilder.UPDATE;
import static org.apache.ibatis.jdbc.SqlBuilder.VALUES;
import static org.apache.ibatis.jdbc.SqlBuilder.WHERE;

import com.nicetcm.nibsplus.broker.msg.model.TCtErrorBasic;
import com.nicetcm.nibsplus.broker.msg.model.TCtErrorBasicSpec.Criteria;
import com.nicetcm.nibsplus.broker.msg.model.TCtErrorBasicSpec.Criterion;
import com.nicetcm.nibsplus.broker.msg.model.TCtErrorBasicSpec;
import java.util.List;
import java.util.Map;

public class TCtErrorBasicSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_ERROR_BASIC
     *
     * @mbggenerated Wed Nov 26 18:06:13 KST 2014
     */
    public String countBySpec(TCtErrorBasicSpec spec) {
        BEGIN();
        SELECT("count(*)");
        FROM("OP.T_CT_ERROR_BASIC");
        applyWhere(spec, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_ERROR_BASIC
     *
     * @mbggenerated Wed Nov 26 18:06:13 KST 2014
     */
    public String deleteBySpec(TCtErrorBasicSpec spec) {
        BEGIN();
        DELETE_FROM("OP.T_CT_ERROR_BASIC");
        applyWhere(spec, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_ERROR_BASIC
     *
     * @mbggenerated Wed Nov 26 18:06:13 KST 2014
     */
    public String insertSelective(TCtErrorBasic record) {
        BEGIN();
        INSERT_INTO("OP.T_CT_ERROR_BASIC");

        if (record.getErrorNo() != null) {
            VALUES("ERROR_NO", "#{errorNo,jdbcType=VARCHAR}");
        }

        if (record.getCreateDate() != null) {
            VALUES("CREATE_DATE", "#{createDate,jdbcType=VARCHAR}");
        }

        if (record.getCreateTime() != null) {
            VALUES("CREATE_TIME", "#{createTime,jdbcType=VARCHAR}");
        }

        if (record.getOrgCd() != null) {
            VALUES("ORG_CD", "#{orgCd,jdbcType=VARCHAR}");
        }

        if (record.getBranchCd() != null) {
            VALUES("BRANCH_CD", "#{branchCd,jdbcType=VARCHAR}");
        }

        if (record.getMacNo() != null) {
            VALUES("MAC_NO", "#{macNo,jdbcType=VARCHAR}");
        }

        if (record.getSiteCd() != null) {
            VALUES("SITE_CD", "#{siteCd,jdbcType=VARCHAR}");
        }

        if (record.getErrorCd() != null) {
            VALUES("ERROR_CD", "#{errorCd,jdbcType=VARCHAR}");
        }

        if (record.getMadeErrCd() != null) {
            VALUES("MADE_ERR_CD", "#{madeErrCd,jdbcType=VARCHAR}");
        }

        if (record.getMsg() != null) {
            VALUES("MSG", "#{msg,jdbcType=VARCHAR}");
        }

        if (record.getErrorStatus() != null) {
            VALUES("ERROR_STATUS", "#{errorStatus,jdbcType=VARCHAR}");
        }

        if (record.getSendYn() != null) {
            VALUES("SEND_YN", "#{sendYn,jdbcType=CHAR}");
        }

        if (record.getOrgMsgNo() != null) {
            VALUES("ORG_MSG_NO", "#{orgMsgNo,jdbcType=VARCHAR}");
        }

        if (record.getCurrentDate() != null) {
            VALUES("CURRENT_DATE", "#{currentDate,jdbcType=TIMESTAMP}");
        }

        if (record.getCurrentUid() != null) {
            VALUES("CURRENT_UID", "#{currentUid,jdbcType=VARCHAR}");
        }

        if (record.getFormatType() != null) {
            VALUES("FORMAT_TYPE", "#{formatType,jdbcType=VARCHAR}");
        }

        if (record.getTransDate() != null) {
            VALUES("TRANS_DATE", "#{transDate,jdbcType=VARCHAR}");
        }

        if (record.getMidErrorCd() != null) {
            VALUES("MID_ERROR_CD", "#{midErrorCd,jdbcType=VARCHAR}");
        }

        if (record.getGroupErrorCd() != null) {
            VALUES("GROUP_ERROR_CD", "#{groupErrorCd,jdbcType=VARCHAR}");
        }

        if (record.getAtmState() != null) {
            VALUES("ATM_STATE", "#{atmState,jdbcType=VARCHAR}");
        }

        if (record.getAsMedium() != null) {
            VALUES("AS_MEDIUM", "#{asMedium,jdbcType=VARCHAR}");
        }

        if (record.getOrgMsg() != null) {
            VALUES("ORG_MSG", "#{orgMsg,jdbcType=VARCHAR}");
        }

        if (record.getOrgSendYn() != null) {
            VALUES("ORG_SEND_YN", "#{orgSendYn,jdbcType=CHAR}");
        }

        if (record.getDeptCd() != null) {
            VALUES("DEPT_CD", "#{deptCd,jdbcType=VARCHAR}");
        }

        if (record.getOfficeCd() != null) {
            VALUES("OFFICE_CD", "#{officeCd,jdbcType=VARCHAR}");
        }

        if (record.getTeamCd() != null) {
            VALUES("TEAM_CD", "#{teamCd,jdbcType=VARCHAR}");
        }

        if (record.getSec() != null) {
            VALUES("SEC", "#{sec,jdbcType=VARCHAR}");
        }

        if (record.getOrgCustTel() != null) {
            VALUES("ORG_CUST_TEL", "#{orgCustTel,jdbcType=VARCHAR}");
        }

        if (record.getOrgCustNm() != null) {
            VALUES("ORG_CUST_NM", "#{orgCustNm,jdbcType=VARCHAR}");
        }

        if (record.getOrgCustMsg() != null) {
            VALUES("ORG_CUST_MSG", "#{orgCustMsg,jdbcType=VARCHAR}");
        }

        if (record.getOrgCustRecvYn() != null) {
            VALUES("ORG_CUST_RECV_YN", "#{orgCustRecvYn,jdbcType=CHAR}");
        }

        if (record.getSendStartTime() != null) {
            VALUES("SEND_START_TIME", "#{sendStartTime,jdbcType=VARCHAR}");
        }

        if (record.getSendFinishTime() != null) {
            VALUES("SEND_FINISH_TIME", "#{sendFinishTime,jdbcType=VARCHAR}");
        }

        if (record.getUnlockDate() != null) {
            VALUES("UNLOCK_DATE", "#{unlockDate,jdbcType=VARCHAR}");
        }

        if (record.getUnlockTime() != null) {
            VALUES("UNLOCK_TIME", "#{unlockTime,jdbcType=VARCHAR}");
        }

        if (record.getOrgErrSendYn() != null) {
            VALUES("ORG_ERR_SEND_YN", "#{orgErrSendYn,jdbcType=VARCHAR}");
        }

        if (record.getConflictYn() != null) {
            VALUES("CONFLICT_YN", "#{conflictYn,jdbcType=VARCHAR}");
        }

        if (record.getWorkStatus() != null) {
            VALUES("WORK_STATUS", "#{workStatus,jdbcType=VARCHAR}");
        }

        if (record.getSendCount() != null) {
            VALUES("SEND_COUNT", "#{sendCount,jdbcType=DECIMAL}");
        }

        if (record.getRemark() != null) {
            VALUES("REMARK", "#{remark,jdbcType=VARCHAR}");
        }

        if (record.getOrgSiteCd() != null) {
            VALUES("ORG_SITE_CD", "#{orgSiteCd,jdbcType=VARCHAR}");
        }

        if (record.getLockDate() != null) {
            VALUES("LOCK_DATE", "#{lockDate,jdbcType=VARCHAR}");
        }

        if (record.getLockTime() != null) {
            VALUES("LOCK_TIME", "#{lockTime,jdbcType=VARCHAR}");
        }

        if (record.getRealErrorCd() != null) {
            VALUES("REAL_ERROR_CD", "#{realErrorCd,jdbcType=VARCHAR}");
        }

        if (record.getRegDt() != null) {
            VALUES("REG_DT", "#{regDt,jdbcType=TIMESTAMP}");
        }

        if (record.getRegId() != null) {
            VALUES("REG_ID", "#{regId,jdbcType=VARCHAR}");
        }

        if (record.getUpdateDate() != null) {
            VALUES("UPDATE_DATE", "#{updateDate,jdbcType=TIMESTAMP}");
        }

        if (record.getUpdateUid() != null) {
            VALUES("UPDATE_UID", "#{updateUid,jdbcType=VARCHAR}");
        }

        if (record.getOrgCallCnt() != null) {
            VALUES("ORG_CALL_CNT", "#{orgCallCnt,jdbcType=OTHER}");
        }

        if (record.getCrtNo() != null) {
            VALUES("CRT_NO", "#{crtNo,jdbcType=VARCHAR}");
        }

        if (record.getCloseYn() != null) {
            VALUES("CLOSE_YN", "#{closeYn,jdbcType=CHAR}");
        }

        if (record.getIvrYn() != null) {
            VALUES("IVR_YN", "#{ivrYn,jdbcType=CHAR}");
        }

        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_ERROR_BASIC
     *
     * @mbggenerated Wed Nov 26 18:06:13 KST 2014
     */
    public String selectBySpec(TCtErrorBasicSpec spec) {
        BEGIN();
        if (spec != null && spec.isDistinct()) {
            SELECT_DISTINCT("ERROR_NO");
        } else {
            SELECT("ERROR_NO");
        }
        SELECT("CREATE_DATE");
        SELECT("CREATE_TIME");
        SELECT("ORG_CD");
        SELECT("BRANCH_CD");
        SELECT("MAC_NO");
        SELECT("SITE_CD");
        SELECT("ERROR_CD");
        SELECT("MADE_ERR_CD");
        SELECT("MSG");
        SELECT("ERROR_STATUS");
        SELECT("SEND_YN");
        SELECT("ORG_MSG_NO");
        SELECT("CURRENT_DATE");
        SELECT("CURRENT_UID");
        SELECT("FORMAT_TYPE");
        SELECT("TRANS_DATE");
        SELECT("MID_ERROR_CD");
        SELECT("GROUP_ERROR_CD");
        SELECT("ATM_STATE");
        SELECT("AS_MEDIUM");
        SELECT("ORG_MSG");
        SELECT("ORG_SEND_YN");
        SELECT("DEPT_CD");
        SELECT("OFFICE_CD");
        SELECT("TEAM_CD");
        SELECT("SEC");
        SELECT("ORG_CUST_TEL");
        SELECT("ORG_CUST_NM");
        SELECT("ORG_CUST_MSG");
        SELECT("ORG_CUST_RECV_YN");
        SELECT("SEND_START_TIME");
        SELECT("SEND_FINISH_TIME");
        SELECT("UNLOCK_DATE");
        SELECT("UNLOCK_TIME");
        SELECT("ORG_ERR_SEND_YN");
        SELECT("CONFLICT_YN");
        SELECT("WORK_STATUS");
        SELECT("SEND_COUNT");
        SELECT("REMARK");
        SELECT("ORG_SITE_CD");
        SELECT("LOCK_DATE");
        SELECT("LOCK_TIME");
        SELECT("REAL_ERROR_CD");
        SELECT("REG_DT");
        SELECT("REG_ID");
        SELECT("UPDATE_DATE");
        SELECT("UPDATE_UID");
        SELECT("ORG_CALL_CNT");
        SELECT("CRT_NO");
        SELECT("CLOSE_YN");
        SELECT("IVR_YN");
        FROM("OP.T_CT_ERROR_BASIC");
        applyWhere(spec, false);

        if (spec != null && spec.getOrderByClause() != null) {
            ORDER_BY(spec.getOrderByClause());
        }

        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_ERROR_BASIC
     *
     * @mbggenerated Wed Nov 26 18:06:13 KST 2014
     */
    public String updateBySpecSelective(Map<String, Object> parameter) {
        TCtErrorBasic record = (TCtErrorBasic) parameter.get("record");
        TCtErrorBasicSpec spec = (TCtErrorBasicSpec) parameter.get("spec");

        BEGIN();
        UPDATE("OP.T_CT_ERROR_BASIC");

        if (record.getErrorNo() != null) {
            SET("ERROR_NO = #{record.errorNo,jdbcType=VARCHAR}");
        }

        if (record.getCreateDate() != null) {
            SET("CREATE_DATE = #{record.createDate,jdbcType=VARCHAR}");
        }

        if (record.getCreateTime() != null) {
            SET("CREATE_TIME = #{record.createTime,jdbcType=VARCHAR}");
        }

        if (record.getOrgCd() != null) {
            SET("ORG_CD = #{record.orgCd,jdbcType=VARCHAR}");
        }

        if (record.getBranchCd() != null) {
            SET("BRANCH_CD = #{record.branchCd,jdbcType=VARCHAR}");
        }

        if (record.getMacNo() != null) {
            SET("MAC_NO = #{record.macNo,jdbcType=VARCHAR}");
        }

        if (record.getSiteCd() != null) {
            SET("SITE_CD = #{record.siteCd,jdbcType=VARCHAR}");
        }

        if (record.getErrorCd() != null) {
            SET("ERROR_CD = #{record.errorCd,jdbcType=VARCHAR}");
        }

        if (record.getMadeErrCd() != null) {
            SET("MADE_ERR_CD = #{record.madeErrCd,jdbcType=VARCHAR}");
        }

        if (record.getMsg() != null) {
            SET("MSG = #{record.msg,jdbcType=VARCHAR}");
        }

        if (record.getErrorStatus() != null) {
            SET("ERROR_STATUS = #{record.errorStatus,jdbcType=VARCHAR}");
        }

        if (record.getSendYn() != null) {
            SET("SEND_YN = #{record.sendYn,jdbcType=CHAR}");
        }

        if (record.getOrgMsgNo() != null) {
            SET("ORG_MSG_NO = #{record.orgMsgNo,jdbcType=VARCHAR}");
        }

        if (record.getCurrentDate() != null) {
            SET("CURRENT_DATE = #{record.currentDate,jdbcType=TIMESTAMP}");
        }

        if (record.getCurrentUid() != null) {
            SET("CURRENT_UID = #{record.currentUid,jdbcType=VARCHAR}");
        }

        if (record.getFormatType() != null) {
            SET("FORMAT_TYPE = #{record.formatType,jdbcType=VARCHAR}");
        }

        if (record.getTransDate() != null) {
            SET("TRANS_DATE = #{record.transDate,jdbcType=VARCHAR}");
        }

        if (record.getMidErrorCd() != null) {
            SET("MID_ERROR_CD = #{record.midErrorCd,jdbcType=VARCHAR}");
        }

        if (record.getGroupErrorCd() != null) {
            SET("GROUP_ERROR_CD = #{record.groupErrorCd,jdbcType=VARCHAR}");
        }

        if (record.getAtmState() != null) {
            SET("ATM_STATE = #{record.atmState,jdbcType=VARCHAR}");
        }

        if (record.getAsMedium() != null) {
            SET("AS_MEDIUM = #{record.asMedium,jdbcType=VARCHAR}");
        }

        if (record.getOrgMsg() != null) {
            SET("ORG_MSG = #{record.orgMsg,jdbcType=VARCHAR}");
        }

        if (record.getOrgSendYn() != null) {
            SET("ORG_SEND_YN = #{record.orgSendYn,jdbcType=CHAR}");
        }

        if (record.getDeptCd() != null) {
            SET("DEPT_CD = #{record.deptCd,jdbcType=VARCHAR}");
        }

        if (record.getOfficeCd() != null) {
            SET("OFFICE_CD = #{record.officeCd,jdbcType=VARCHAR}");
        }

        if (record.getTeamCd() != null) {
            SET("TEAM_CD = #{record.teamCd,jdbcType=VARCHAR}");
        }

        if (record.getSec() != null) {
            SET("SEC = #{record.sec,jdbcType=VARCHAR}");
        }

        if (record.getOrgCustTel() != null) {
            SET("ORG_CUST_TEL = #{record.orgCustTel,jdbcType=VARCHAR}");
        }

        if (record.getOrgCustNm() != null) {
            SET("ORG_CUST_NM = #{record.orgCustNm,jdbcType=VARCHAR}");
        }

        if (record.getOrgCustMsg() != null) {
            SET("ORG_CUST_MSG = #{record.orgCustMsg,jdbcType=VARCHAR}");
        }

        if (record.getOrgCustRecvYn() != null) {
            SET("ORG_CUST_RECV_YN = #{record.orgCustRecvYn,jdbcType=CHAR}");
        }

        if (record.getSendStartTime() != null) {
            SET("SEND_START_TIME = #{record.sendStartTime,jdbcType=VARCHAR}");
        }

        if (record.getSendFinishTime() != null) {
            SET("SEND_FINISH_TIME = #{record.sendFinishTime,jdbcType=VARCHAR}");
        }

        if (record.getUnlockDate() != null) {
            SET("UNLOCK_DATE = #{record.unlockDate,jdbcType=VARCHAR}");
        }

        if (record.getUnlockTime() != null) {
            SET("UNLOCK_TIME = #{record.unlockTime,jdbcType=VARCHAR}");
        }

        if (record.getOrgErrSendYn() != null) {
            SET("ORG_ERR_SEND_YN = #{record.orgErrSendYn,jdbcType=VARCHAR}");
        }

        if (record.getConflictYn() != null) {
            SET("CONFLICT_YN = #{record.conflictYn,jdbcType=VARCHAR}");
        }

        if (record.getWorkStatus() != null) {
            SET("WORK_STATUS = #{record.workStatus,jdbcType=VARCHAR}");
        }

        if (record.getSendCount() != null) {
            SET("SEND_COUNT = #{record.sendCount,jdbcType=DECIMAL}");
        }

        if (record.getRemark() != null) {
            SET("REMARK = #{record.remark,jdbcType=VARCHAR}");
        }

        if (record.getOrgSiteCd() != null) {
            SET("ORG_SITE_CD = #{record.orgSiteCd,jdbcType=VARCHAR}");
        }

        if (record.getLockDate() != null) {
            SET("LOCK_DATE = #{record.lockDate,jdbcType=VARCHAR}");
        }

        if (record.getLockTime() != null) {
            SET("LOCK_TIME = #{record.lockTime,jdbcType=VARCHAR}");
        }

        if (record.getRealErrorCd() != null) {
            SET("REAL_ERROR_CD = #{record.realErrorCd,jdbcType=VARCHAR}");
        }

        if (record.getRegDt() != null) {
            SET("REG_DT = #{record.regDt,jdbcType=TIMESTAMP}");
        }

        if (record.getRegId() != null) {
            SET("REG_ID = #{record.regId,jdbcType=VARCHAR}");
        }

        if (record.getUpdateDate() != null) {
            SET("UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP}");
        }

        if (record.getUpdateUid() != null) {
            SET("UPDATE_UID = #{record.updateUid,jdbcType=VARCHAR}");
        }

        if (record.getOrgCallCnt() != null) {
            SET("ORG_CALL_CNT = #{record.orgCallCnt,jdbcType=OTHER}");
        }

        if (record.getCrtNo() != null) {
            SET("CRT_NO = #{record.crtNo,jdbcType=VARCHAR}");
        }

        if (record.getCloseYn() != null) {
            SET("CLOSE_YN = #{record.closeYn,jdbcType=CHAR}");
        }

        if (record.getIvrYn() != null) {
            SET("IVR_YN = #{record.ivrYn,jdbcType=CHAR}");
        }

        applyWhere(spec, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_ERROR_BASIC
     *
     * @mbggenerated Wed Nov 26 18:06:13 KST 2014
     */
    public String updateBySpec(Map<String, Object> parameter) {
        BEGIN();
        UPDATE("OP.T_CT_ERROR_BASIC");

        SET("ERROR_NO = #{record.errorNo,jdbcType=VARCHAR}");
        SET("CREATE_DATE = #{record.createDate,jdbcType=VARCHAR}");
        SET("CREATE_TIME = #{record.createTime,jdbcType=VARCHAR}");
        SET("ORG_CD = #{record.orgCd,jdbcType=VARCHAR}");
        SET("BRANCH_CD = #{record.branchCd,jdbcType=VARCHAR}");
        SET("MAC_NO = #{record.macNo,jdbcType=VARCHAR}");
        SET("SITE_CD = #{record.siteCd,jdbcType=VARCHAR}");
        SET("ERROR_CD = #{record.errorCd,jdbcType=VARCHAR}");
        SET("MADE_ERR_CD = #{record.madeErrCd,jdbcType=VARCHAR}");
        SET("MSG = #{record.msg,jdbcType=VARCHAR}");
        SET("ERROR_STATUS = #{record.errorStatus,jdbcType=VARCHAR}");
        SET("SEND_YN = #{record.sendYn,jdbcType=CHAR}");
        SET("ORG_MSG_NO = #{record.orgMsgNo,jdbcType=VARCHAR}");
        SET("CURRENT_DATE = #{record.currentDate,jdbcType=TIMESTAMP}");
        SET("CURRENT_UID = #{record.currentUid,jdbcType=VARCHAR}");
        SET("FORMAT_TYPE = #{record.formatType,jdbcType=VARCHAR}");
        SET("TRANS_DATE = #{record.transDate,jdbcType=VARCHAR}");
        SET("MID_ERROR_CD = #{record.midErrorCd,jdbcType=VARCHAR}");
        SET("GROUP_ERROR_CD = #{record.groupErrorCd,jdbcType=VARCHAR}");
        SET("ATM_STATE = #{record.atmState,jdbcType=VARCHAR}");
        SET("AS_MEDIUM = #{record.asMedium,jdbcType=VARCHAR}");
        SET("ORG_MSG = #{record.orgMsg,jdbcType=VARCHAR}");
        SET("ORG_SEND_YN = #{record.orgSendYn,jdbcType=CHAR}");
        SET("DEPT_CD = #{record.deptCd,jdbcType=VARCHAR}");
        SET("OFFICE_CD = #{record.officeCd,jdbcType=VARCHAR}");
        SET("TEAM_CD = #{record.teamCd,jdbcType=VARCHAR}");
        SET("SEC = #{record.sec,jdbcType=VARCHAR}");
        SET("ORG_CUST_TEL = #{record.orgCustTel,jdbcType=VARCHAR}");
        SET("ORG_CUST_NM = #{record.orgCustNm,jdbcType=VARCHAR}");
        SET("ORG_CUST_MSG = #{record.orgCustMsg,jdbcType=VARCHAR}");
        SET("ORG_CUST_RECV_YN = #{record.orgCustRecvYn,jdbcType=CHAR}");
        SET("SEND_START_TIME = #{record.sendStartTime,jdbcType=VARCHAR}");
        SET("SEND_FINISH_TIME = #{record.sendFinishTime,jdbcType=VARCHAR}");
        SET("UNLOCK_DATE = #{record.unlockDate,jdbcType=VARCHAR}");
        SET("UNLOCK_TIME = #{record.unlockTime,jdbcType=VARCHAR}");
        SET("ORG_ERR_SEND_YN = #{record.orgErrSendYn,jdbcType=VARCHAR}");
        SET("CONFLICT_YN = #{record.conflictYn,jdbcType=VARCHAR}");
        SET("WORK_STATUS = #{record.workStatus,jdbcType=VARCHAR}");
        SET("SEND_COUNT = #{record.sendCount,jdbcType=DECIMAL}");
        SET("REMARK = #{record.remark,jdbcType=VARCHAR}");
        SET("ORG_SITE_CD = #{record.orgSiteCd,jdbcType=VARCHAR}");
        SET("LOCK_DATE = #{record.lockDate,jdbcType=VARCHAR}");
        SET("LOCK_TIME = #{record.lockTime,jdbcType=VARCHAR}");
        SET("REAL_ERROR_CD = #{record.realErrorCd,jdbcType=VARCHAR}");
        SET("REG_DT = #{record.regDt,jdbcType=TIMESTAMP}");
        SET("REG_ID = #{record.regId,jdbcType=VARCHAR}");
        SET("UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP}");
        SET("UPDATE_UID = #{record.updateUid,jdbcType=VARCHAR}");
        SET("ORG_CALL_CNT = #{record.orgCallCnt,jdbcType=OTHER}");
        SET("CRT_NO = #{record.crtNo,jdbcType=VARCHAR}");
        SET("CLOSE_YN = #{record.closeYn,jdbcType=CHAR}");
        SET("IVR_YN = #{record.ivrYn,jdbcType=CHAR}");

        TCtErrorBasicSpec spec = (TCtErrorBasicSpec) parameter.get("spec");
        applyWhere(spec, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_ERROR_BASIC
     *
     * @mbggenerated Wed Nov 26 18:06:13 KST 2014
     */
    public String updateByPrimaryKeySelective(TCtErrorBasic record) {
        BEGIN();
        UPDATE("OP.T_CT_ERROR_BASIC");

        if (record.getMadeErrCd() != null) {
            SET("MADE_ERR_CD = #{madeErrCd,jdbcType=VARCHAR}");
        }

        if (record.getMsg() != null) {
            SET("MSG = #{msg,jdbcType=VARCHAR}");
        }

        if (record.getErrorStatus() != null) {
            SET("ERROR_STATUS = #{errorStatus,jdbcType=VARCHAR}");
        }

        if (record.getSendYn() != null) {
            SET("SEND_YN = #{sendYn,jdbcType=CHAR}");
        }

        if (record.getOrgMsgNo() != null) {
            SET("ORG_MSG_NO = #{orgMsgNo,jdbcType=VARCHAR}");
        }

        if (record.getCurrentDate() != null) {
            SET("CURRENT_DATE = #{currentDate,jdbcType=TIMESTAMP}");
        }

        if (record.getCurrentUid() != null) {
            SET("CURRENT_UID = #{currentUid,jdbcType=VARCHAR}");
        }

        if (record.getFormatType() != null) {
            SET("FORMAT_TYPE = #{formatType,jdbcType=VARCHAR}");
        }

        if (record.getTransDate() != null) {
            SET("TRANS_DATE = #{transDate,jdbcType=VARCHAR}");
        }

        if (record.getMidErrorCd() != null) {
            SET("MID_ERROR_CD = #{midErrorCd,jdbcType=VARCHAR}");
        }

        if (record.getGroupErrorCd() != null) {
            SET("GROUP_ERROR_CD = #{groupErrorCd,jdbcType=VARCHAR}");
        }

        if (record.getAtmState() != null) {
            SET("ATM_STATE = #{atmState,jdbcType=VARCHAR}");
        }

        if (record.getAsMedium() != null) {
            SET("AS_MEDIUM = #{asMedium,jdbcType=VARCHAR}");
        }

        if (record.getOrgMsg() != null) {
            SET("ORG_MSG = #{orgMsg,jdbcType=VARCHAR}");
        }

        if (record.getOrgSendYn() != null) {
            SET("ORG_SEND_YN = #{orgSendYn,jdbcType=CHAR}");
        }

        if (record.getDeptCd() != null) {
            SET("DEPT_CD = #{deptCd,jdbcType=VARCHAR}");
        }

        if (record.getOfficeCd() != null) {
            SET("OFFICE_CD = #{officeCd,jdbcType=VARCHAR}");
        }

        if (record.getTeamCd() != null) {
            SET("TEAM_CD = #{teamCd,jdbcType=VARCHAR}");
        }

        if (record.getSec() != null) {
            SET("SEC = #{sec,jdbcType=VARCHAR}");
        }

        if (record.getOrgCustTel() != null) {
            SET("ORG_CUST_TEL = #{orgCustTel,jdbcType=VARCHAR}");
        }

        if (record.getOrgCustNm() != null) {
            SET("ORG_CUST_NM = #{orgCustNm,jdbcType=VARCHAR}");
        }

        if (record.getOrgCustMsg() != null) {
            SET("ORG_CUST_MSG = #{orgCustMsg,jdbcType=VARCHAR}");
        }

        if (record.getOrgCustRecvYn() != null) {
            SET("ORG_CUST_RECV_YN = #{orgCustRecvYn,jdbcType=CHAR}");
        }

        if (record.getSendStartTime() != null) {
            SET("SEND_START_TIME = #{sendStartTime,jdbcType=VARCHAR}");
        }

        if (record.getSendFinishTime() != null) {
            SET("SEND_FINISH_TIME = #{sendFinishTime,jdbcType=VARCHAR}");
        }

        if (record.getUnlockDate() != null) {
            SET("UNLOCK_DATE = #{unlockDate,jdbcType=VARCHAR}");
        }

        if (record.getUnlockTime() != null) {
            SET("UNLOCK_TIME = #{unlockTime,jdbcType=VARCHAR}");
        }

        if (record.getOrgErrSendYn() != null) {
            SET("ORG_ERR_SEND_YN = #{orgErrSendYn,jdbcType=VARCHAR}");
        }

        if (record.getConflictYn() != null) {
            SET("CONFLICT_YN = #{conflictYn,jdbcType=VARCHAR}");
        }

        if (record.getWorkStatus() != null) {
            SET("WORK_STATUS = #{workStatus,jdbcType=VARCHAR}");
        }

        if (record.getSendCount() != null) {
            SET("SEND_COUNT = #{sendCount,jdbcType=DECIMAL}");
        }

        if (record.getRemark() != null) {
            SET("REMARK = #{remark,jdbcType=VARCHAR}");
        }

        if (record.getOrgSiteCd() != null) {
            SET("ORG_SITE_CD = #{orgSiteCd,jdbcType=VARCHAR}");
        }

        if (record.getLockDate() != null) {
            SET("LOCK_DATE = #{lockDate,jdbcType=VARCHAR}");
        }

        if (record.getLockTime() != null) {
            SET("LOCK_TIME = #{lockTime,jdbcType=VARCHAR}");
        }

        if (record.getRealErrorCd() != null) {
            SET("REAL_ERROR_CD = #{realErrorCd,jdbcType=VARCHAR}");
        }

        if (record.getRegDt() != null) {
            SET("REG_DT = #{regDt,jdbcType=TIMESTAMP}");
        }

        if (record.getRegId() != null) {
            SET("REG_ID = #{regId,jdbcType=VARCHAR}");
        }

        if (record.getUpdateDate() != null) {
            SET("UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP}");
        }

        if (record.getUpdateUid() != null) {
            SET("UPDATE_UID = #{updateUid,jdbcType=VARCHAR}");
        }

        if (record.getOrgCallCnt() != null) {
            SET("ORG_CALL_CNT = #{orgCallCnt,jdbcType=OTHER}");
        }

        if (record.getCrtNo() != null) {
            SET("CRT_NO = #{crtNo,jdbcType=VARCHAR}");
        }

        if (record.getCloseYn() != null) {
            SET("CLOSE_YN = #{closeYn,jdbcType=CHAR}");
        }

        if (record.getIvrYn() != null) {
            SET("IVR_YN = #{ivrYn,jdbcType=CHAR}");
        }

        WHERE("ERROR_NO = #{errorNo,jdbcType=VARCHAR}");
        WHERE("CREATE_DATE = #{createDate,jdbcType=VARCHAR}");
        WHERE("CREATE_TIME = #{createTime,jdbcType=VARCHAR}");
        WHERE("ORG_CD = #{orgCd,jdbcType=VARCHAR}");
        WHERE("BRANCH_CD = #{branchCd,jdbcType=VARCHAR}");
        WHERE("MAC_NO = #{macNo,jdbcType=VARCHAR}");
        WHERE("SITE_CD = #{siteCd,jdbcType=VARCHAR}");
        WHERE("ERROR_CD = #{errorCd,jdbcType=VARCHAR}");

        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CT_ERROR_BASIC
     *
     * @mbggenerated Wed Nov 26 18:06:13 KST 2014
     */
    protected void applyWhere(TCtErrorBasicSpec spec, boolean includeSpecPhrase) {
        if (spec == null) {
            return;
        }

        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeSpecPhrase) {
            parmPhrase1 = "%s #{spec.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{spec.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{spec.oredCriteria[%d].allCriteria[%d].value} and #{spec.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{spec.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{spec.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{spec.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{spec.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }

        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = spec.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }

                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }

                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }

        if (sb.length() > 0) {
            WHERE(sb.toString());
        }
    }
}