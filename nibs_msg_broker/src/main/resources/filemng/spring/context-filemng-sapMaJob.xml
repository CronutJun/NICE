<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:batch="http://www.springframework.org/schema/batch"
    xmlns:task="http://www.springframework.org/schema/task"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/batch
    http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd">

    <bean id="sapMaFtpTasklet" class="com.nicetcm.nibsplus.filemng.service.impl.SapMaFtpTasklet" />
    <bean id="sapMaFileRenameTasklet" class="com.nicetcm.nibsplus.filemng.service.impl.SapMaFileRenameTasklet" />

    <bean id="tFnSapMasterVO" class="com.nicetcm.nibsplus.filemng.model.TFnSapMasterVO" scope="prototype" />

    <bean id="sapMaItemProcessor" class="com.nicetcm.nibsplus.filemng.service.impl.SapMaItemProcessor" scope="step">
        <property name="branchCd" value="#{jobParameters['branchCd']}" />
    </bean>

    <batch:job id="sapMaJob">
        <batch:step id="getFtp" next="dbLoad">
            <tasklet ref="sapMaFtpTasklet" />
        </batch:step>
        <batch:step id="dbLoad" next="fileRename">
            <batch:tasklet>
                <batch:chunk reader="cvsFileItemReader" processor="sapMaItemProcessor" writer="db2ItemWriter" commit-interval="2">
                </batch:chunk>
            </batch:tasklet>
        </batch:step>
        <batch:step id="fileRename">
            <tasklet ref="sapMaFileRenameTasklet" />
        </batch:step>
    </batch:job>

    <bean id="cvsFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">

        <!-- Read a csv file -->
        <!-- <property name="resource" value="classpath:filemng/data/report.csv" /> -->
        <!-- <property name="resource"  value="file:#{jobParameters['input.file.name']}" /> -->
        <property name="resource"  value="file:#{jobExecutionContext['file.getAbsolutePath']}" />
        <!-- <property name="resource"  value="file:/Project_NIBS/FTP_RECEIVE/sap_file/NICE_20140913_8228_MASTER.dat" /> -->
        <property name="encoding"  value="euc-kr" />

        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <!-- split it -->
                <property name="lineTokenizer">
                    <bean class="com.nicetcm.nibsplus.util.NibsFixedByteLengthTokenizer">
                        <property name="byteEncoding" value="euc-kr"/>
                        <property name="names" value="workNm, dataType, dataSeq, dealDate, branchCd, memberId, memberNm, memberType, checkAmt, cashAmt, selfCupon, etcCupon, filler" />
                        <property name="columns" value="1-5, 6-7, 8-14, 15-22, 23-26, 27-34, 35-74, 75-75, 76-86, 87-97, 98-108, 109-119, 120-150" />
                    </bean>
                </property>
                <property name="fieldSetMapper">
                    <!-- return back to reader, rather than a mapped object. -->
                    <!-- <bean class="org.springframework.batch.item.file.mapping.PassThroughFieldSetMapper" /> -->
                    <!-- map to an object -->
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="tFnSapMasterVO" />
                    </bean>
                </property>

            </bean>
        </property>

    </bean>

    <bean id="db2ItemWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource_OP" />
        <property name="sql">
            <value>
            <![CDATA[
                INSERT INTO OP.T_FN_SAP_MASTER(DEAL_DATE
                                              ,BRANCH_CD
                                              ,MEMBER_ID
                                              ,MEMBER_NM
                                              ,MEMBER_TYPE
                                              ,CHECK_AMT
                                              ,CASH_AMT
                                              ,SELF_CUPON
                                              ,ETC_CUPON
                                              ,UPDATE_DATE)
                VALUES (:dealDate
                       ,:branchCd
                       ,:memberId
                       ,:memberNm
                       ,:memberType
                       ,:checkAmt
                       ,:cashAmt
                       ,:selfCupon
                       ,:etcCupon
                       ,sysdate)
            ]]>
            </value>
        </property>
        <!-- It will take care matching between object property and sql name parameter -->
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
        </property>
    </bean>
</beans>