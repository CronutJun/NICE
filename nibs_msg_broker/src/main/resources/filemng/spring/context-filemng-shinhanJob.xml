<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:batch="http://www.springframework.org/schema/batch"
    xmlns:task="http://www.springframework.org/schema/task"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/batch
    http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd">

    <bean id="shinhanFileRenameTasklet" class="com.nicetcm.nibsplus.filemng.service.impl.ShinhanFileRenameTasklet" />

    <bean id="shinhanFtpTasklet" class="com.nicetcm.nibsplus.filemng.service.impl.ShinhanFtpTasklet" />
    
    <bean id="tFnNiceTranShinhanDataVO" class="com.nicetcm.nibsplus.filemng.model.TFnNiceTranShinhanDataVO" scope="prototype" />
    
    <bean id="shinhanItemProcessor" class="org.springframework.batch.item.support.CompositeItemProcessor" scope="step">
        <property name="delegates">
            <list>
                <bean class="com.nicetcm.nibsplus.filemng.service.impl.ShinhanItemProcessor" scope="step">
                	<property name="contType" value="#{jobParameters['contType']}"/>
                </bean>
            </list>
        </property>
    </bean>
    
    <batch:job id="shinhanJob">
        <batch:step id="getFtp" next="dbLoad">
            <tasklet ref="shinhanFtpTasklet" />
        </batch:step>
        <batch:step id="dbLoad" next="fileRename">
            <batch:tasklet>
                <batch:chunk reader="shinhanFileItemReader" processor="shinhanItemProcessor" writer="shinhanDb2ItemWriter" commit-interval="10000"></batch:chunk>
            </batch:tasklet>
        </batch:step>
        <batch:step id="fileRename">
            <tasklet ref="shinhanFileRenameTasklet" />
        </batch:step>
    </batch:job>
 

 	<bean id="shinhanFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">        
        <property name="resource"  value="file:#{jobParameters['shinhan.file.name']}" />
        <property name="encoding"  value="euc-kr" />
        
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <!-- split it -->
                <property name="lineTokenizer" ref="field#{jobParameters['jobCode']}"/>
                <property name="fieldSetMapper">
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="tFnNiceTranShinhanDataVO" />
                    </bean>
                </property>
            </bean>
        </property>
    </bean>
    
    
	
	<bean id="field0510" class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer" >
	    <property name="delimiter" value="|" />	    	    
	    <property name="names" value="
	    	 jijumMacNo,createDate,createTime,orgCallCnt,outType
	    	,branchCd,branchNm,siteCd,siteNm,macNo
	    	,recvPlaceCd,errorMsg,callDate,callTime,arrivalDate
	    	,arrivalTime,arrivalSpanSec,resultMsg
	    "/>
	</bean>
	
    <bean id="field0520" class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
	    <property name="delimiter" value="|" />
	    <property name="names" value="
	    	 jijumMacNo,createDate,createTime,recvPlaceCd,branchCd
	    	,branchNm,siteCd,siteNm,macNo,repairDate
	    	,repairTime,repairSpanTime,repairSpanSec,errorMsg
	    	,macModelNm
	    "/>
	</bean>
    <bean id="field0620" class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
	    <property name="delimiter" value="|" />
	    <property name="names" value="
	    	 jijumMacNo,createDate,createTime,recvPlaceCd,branchCd
	    	,branchNm,siteCd,siteNm,macNo,repairDate
	    	,repairTime,repairSpanTime,repairSpanSec,errorMsg
	    	,macModelNm
	    "/>
	</bean>

    <bean id="field0570" class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
	    <property name="delimiter" value="|" />
	    <property name="strict" value="false"/>
	    <property name="names" value="
	    	 jijumMacNo,createDate,createTime,orgCallCnt,custYn
	    	,exceptCheck,recvPlaceCd,callType,branchCd,branchNm
	    	,siteCd,siteNm,placeType,regionType,macNo
	    	,outTypeNm,callDate,callTime,arrEstDate,arrEstTime
	    	,arrivalDate,arrivalTime,arrivalType,arrivalSpanTime,arrivalSpanSec
	    	,arrivalObeyTime,arrivalObeySec,reportEstDate,reportEstTime,errorMsg
	    	,macModelNm
	    "/>
	</bean>
    <bean id="field0670" class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
	    <property name="delimiter" value="|" />
	    <property name="names" value="
	    	 jijumMacNo,createDate,createTime,orgCallCnt,custYn
	    	,exceptCheck,recvPlaceCd,callType,branchCd,branchNm
	    	,siteCd,siteNm,placeType,regionType,macNo
	    	,outTypeNm,callDate,callTime,arrEstDate,arrEstTime
	    	,arrivalDate,arrivalTime,arrivalType,arrivalSpanTime,arrivalSpanSec
	    	,arrivalObeyTime,arrivalObeySec,reportEstDate,reportEstTime,errorMsg
	    	,macModelNm
	    "/>
	</bean>
    <bean id="field05F0" class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
	    <property name="delimiter" value="|" />
	    <property name="names" value="
	    	 jijumMacNo,createDate,createTime,orgCallCnt,recvPlaceCd
	    	,branchCd,branchNm,siteCd,siteNm,placeType
	    	,regionType,macNo,outTypeNm,resultMsg,callDate
	    	,callTime,arrivalDate,arrivalTime,finishDate,finishTime
	    	,repairDate,repairTime,repairSpanTime,repairSpanSec,errorMsg
	    	,macModelNm
	    "/>
	</bean>
    <bean id="field06F0" class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
	    <property name="delimiter" value="|" />
	    <property name="names" value="
			 jijumMacNo,createDate,createTime,orgCallCnt,recvPlaceCd
	    	,branchCd,branchNm,siteCd,siteNm,placeType
	    	,regionType,macNo,outTypeNm,resultMsg,callDate
	    	,callTime,arrivalDate,arrivalTime,finishDate,finishTime
	    	,repairDate,repairTime,repairSpanTime,repairSpanSec,errorMsg
	    	,macModelNm
	    "/>
	</bean>
    
    <bean id="shinhanDb2ItemWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource_OP" />
        <property name="sql">
            <value>
            <![CDATA[
				INSERT INTO OP.T_CT_PENALTY_LIST_SH (                
					  ORG_CD
					, BRANCH_CD
					, MAC_NO
					, CREATE_DATE
					, CREATE_TIME
					, ORG_CALL_CNT
					, CONT_TYPE
					, BRANCH_NM
					, SITE_CD
					, SITE_NM
					, RECV_PLACE_CD
					, OUT_TYPE
					, OUT_TYPE_NM
					, ERROR_MSG
					, RESULT_MSG
					, CALL_DATE
					, CALL_TIME
					, ARRIVAL_DATE
					, ARRIVAL_TIME
					, ARRIVAL_SPAN_SEC
					, REPAIR_DATE
					, REPAIR_TIME
					, REPAIR_SPAN_TIME
					, REPAIR_SPAN_SEC
					, MAC_MODEL_NM
					, CUST_YN
					, EXCEPT_CHECK
					, CALL_TYPE
					, PLACE_TYPE
					, REGION_TYPE
					, ARR_EST_DATE
					, ARR_EST_TIME
					, ARRIVAL_TYPE
					, ARRIVAL_SPAN_TIME
					, ARRIVAL_OBEY_TIME
					, REPORT_EST_DATE
					, REPORT_EST_TIME					
					, FINISH_DATE
					, FINISH_TIME
					, ACCEPT_YN
					, REASON
					, INSERT_DATE
					, INSERT_UID
				) VALUES (
					 '088'
					,:branchCd
					,:macNo
					,:createDate
					,:createTime
					,:orgCallCnt
					,:contType
					,:branchNm
					,:siteCd
					,:siteNm
					,:recvPlaceCd
					,:outType
					,:outTypeNm
					,:errorMsg
					,:resultMsg
					,:callDate
					,:callTime
					,:arrivalDate
					,:arrivalTime
					,:arrivalSpanSec
					,:repairDate
					,:repairTime
					,:repairSpanTime
					,:repairSpanSec
					,:macModelNm
					,:custYn
					,:exceptCheck
					,:callType
					,:placeType
					,:regionType
					,:arrEstDate
					,:arrEstTime
					,:arrivalType
					,:arrivalSpanTime
					,:arrivalObeyTime
					,:reportEstDate
					,:reportEstTime
					,:finishDate
					,:finishTime
					,:acceptYn
					,:reason
					,sysdate
					,'FilMng'
				)
            ]]>
            </value>
        </property>
        <!-- It will take care matching between object property and sql name parameter -->
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
        </property>
    </bean>
</beans>