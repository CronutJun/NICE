<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:batch="http://www.springframework.org/schema/batch"
    xmlns:task="http://www.springframework.org/schema/task"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/batch
    http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd">

    <bean id="fileRenameTasklet" class="com.nicetcm.nibsplus.filemng.service.impl.ElandFileRenameTasklet" />
    
   	<!-- Sap Master -->
    <bean id="sapMaFtpTasklet" class="com.nicetcm.nibsplus.filemng.service.impl.SapMaFtpTasklet" />
    <bean id="tFnSapMasterVO" class="com.nicetcm.nibsplus.filemng.model.TFnSapMasterVO" scope="prototype" />
    <bean id="sapMaItemProcessor" class="com.nicetcm.nibsplus.filemng.service.impl.SapMaItemProcessor" scope="step">
        <property name="branchCd" value="#{jobParameters['branchCd']}" />
    </bean>

     <!-- Sap Detail -->
    <bean id="sapDeFtpTasklet" class="com.nicetcm.nibsplus.filemng.service.impl.SapDeFtpTasklet" />
    <bean id="tFnSapDetailVO" class="com.nicetcm.nibsplus.filemng.model.TFnSapDetailVO" scope="prototype" />
    <bean id="sapDeItemProcessor" class="com.nicetcm.nibsplus.filemng.service.impl.SapDeItemProcessor" scope="step">
        <property name="branchCd" value="#{jobParameters['branchCd']}" />
    </bean>

    <!-- Coupon -->
    <bean id="couponFtpTasklet" class="com.nicetcm.nibsplus.filemng.service.impl.CouponFtpTasklet" />
    <bean id="tFnElandCouponVO" class="com.nicetcm.nibsplus.filemng.model.TFnElandCouponVO" scope="prototype" />
    <bean id="couponItemProcessor" class="com.nicetcm.nibsplus.filemng.service.impl.CouponItemProcessor" scope="step">
        <property name="branchCd" value="#{jobParameters['branchCd']}" />
    </bean>

    <batch:job id="elandFtpReadJob">
    	<!-- Sap Master -->
        <batch:step id="getSapMaFtp" next="dbLoadSapMa">
            <tasklet ref="sapMaFtpTasklet" />
        </batch:step>
        <batch:step id="dbLoadSapMa" next="fileRenameSapMa">
            <batch:tasklet>
                <batch:chunk reader="cvsSapMaFileItemReader" processor="sapMaItemProcessor" writer="db2SapMaItemWriter" commit-interval="2" skip-limit="10000">
				    <batch:skippable-exception-classes>
						<batch:include class="java.lang.RuntimeException" />
				    </batch:skippable-exception-classes>
                </batch:chunk>
            </batch:tasklet>
        </batch:step>
        <batch:step id="fileRenameSapMa" next="getSapDeFtp">
            <tasklet ref="fileRenameTasklet" />
        </batch:step>
        
        <!-- Sap Detail -->
        <batch:step id="getSapDeFtp" next="dbLoadSapDe">
            <tasklet ref="sapDeFtpTasklet" />
        </batch:step>
        <batch:step id="dbLoadSapDe" next="fileRenameSapDe">
            <batch:tasklet>
                <batch:chunk reader="cvsSapDeFileItemReader" processor="sapDeItemProcessor" writer="db2SapDeItemWriter" commit-interval="10000" skip-limit="10000">
				    <batch:skippable-exception-classes>
						<batch:include class="java.lang.RuntimeException" />
				    </batch:skippable-exception-classes>
                </batch:chunk>
            </batch:tasklet>
        </batch:step>
        <batch:step id="fileRenameSapDe" next="getCouponFtp">
            <tasklet ref="fileRenameTasklet" />
        </batch:step>
        
        <!-- Coupon -->
        <batch:step id="getCouponFtp" next="dbLoadCoupon">
            <tasklet ref="couponFtpTasklet" />
        </batch:step>
        <batch:step id="dbLoadCoupon" next="fileRenameCoupon">
            <batch:tasklet>
                <batch:chunk reader="cvsCouponFileItemReader" processor="couponItemProcessor" writer="db2CouponItemWriter" commit-interval="10000" skip-limit="10000">
				    <batch:skippable-exception-classes>
						<batch:include class="java.lang.RuntimeException" />
				    </batch:skippable-exception-classes>
                </batch:chunk>
            </batch:tasklet>
        </batch:step>
        <batch:step id="fileRenameCoupon">
            <tasklet ref="fileRenameTasklet" />
        </batch:step>
    </batch:job>

    <!-- Sap Master -->
    <bean id="cvsSapMaFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
        <!-- Read a csv file -->
        <!-- <property name="resource" value="classpath:filemng/data/report.csv" /> -->
        <!-- <property name="resource"  value="file:#{jobParameters['input.file.name']}" /> -->
        <property name="resource"  value="file:#{jobParameters['eland.file.name']}" />
        <!-- <property name="resource"  value="file:/Project_NIBS/FTP_RECEIVE/sap_file/NICE_20140913_8228_MASTER.dat" /> -->
        <property name="encoding"  value="euc-kr" />
        <property name="strict"  value="false" />

        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <!-- split it -->
                <property name="lineTokenizer">
                    <bean class="com.nicetcm.nibsplus.util.NibsFixedByteLengthTokenizer">
                        <property name="byteEncoding" value="euc-kr"/>
                        <property name="names" value="workNm, dataType, dataSeq, dealDate, branchCd, memberId, memberNm, memberType, checkAmt, cashAmt, selfCupon, etcCupon, filler" />
                        <property name="columns" value="1-5, 6-7, 8-14, 15-22, 23-26, 27-34, 35-74, 75-75, 76-86, 87-97, 98-108, 109-119, 120-150" />
                    </bean>
                </property>
                <property name="fieldSetMapper">
                    <!-- return back to reader, rather than a mapped object. -->
                    <!-- <bean class="org.springframework.batch.item.file.mapping.PassThroughFieldSetMapper" /> -->
                    <!-- map to an object -->
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="tFnSapMasterVO" />
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="db2SapMaItemWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource_OP" />
        <property name="sql">
            <value>
            <![CDATA[
                INSERT INTO OP.T_FN_SAP_MASTER(DEAL_DATE
                                              ,BRANCH_CD
                                              ,MEMBER_ID
                                              ,MEMBER_NM
                                              ,MEMBER_TYPE
                                              ,CHECK_AMT
                                              ,CASH_AMT
                                              ,SELF_CUPON
                                              ,ETC_CUPON
                                              ,UPDATE_DATE)
                VALUES (:dealDate
                       ,:branchCd
                       ,:memberId
                       ,:memberNm
                       ,:memberType
                       ,:checkAmt
                       ,:cashAmt
                       ,:selfCupon
                       ,:etcCupon
                       ,sysdate)
            ]]>
            </value>
        </property>
        <!-- It will take care matching between object property and sql name parameter -->
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
        </property>
    </bean>
    
    <!-- Sap Detail -->
    <bean id="cvsSapDeFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
        <!-- Read a csv file -->
        <property name="resource"  value="file:#{jobParameters['eland.file.name']}" />
        <property name="encoding"  value="euc-kr" />
        <property name="strict"  value="false" />

        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <!-- split it -->
                <property name="lineTokenizer">
                    <bean class="com.nicetcm.nibsplus.util.NibsFixedByteLengthTokenizer">
                        <property name="byteEncoding" value="euc-kr"/>
                        <property name="names" value="workNm, dataType, dataSeq, dealDate, branchCd, memberId, cuponCd, cuponType, cuponNm, cuponAmt, filler" />
                        <property name="columns" value="1-5, 6-7, 8-14, 15-22, 23-26, 27-34, 35-37, 38-40, 41-60, 61-71, 72-150" />
                    </bean>
                </property>
                <property name="fieldSetMapper">
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="tFnSapDetailVO" />
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="db2SapDeItemWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource_OP" />
        <property name="sql">
            <value>
            <![CDATA[
                INSERT INTO OP.T_FN_SAP_DETAIL(DEAL_DATE
                                           ,BRANCH_CD
                                           ,MEMBER_ID
                                           ,CUPON_CD
                                           ,CUPON_NM
                                           ,CUPON_TYPE
                                           ,CUPON_AMT
                                           ,UPDATE_DATE)
                VALUES (:dealDate
                       ,:branchCd
                       ,:memberId
                       ,:cuponCd
                       ,:cuponNm
                       ,:cuponType
                       ,:cuponAmt
                       ,sysdate)
            ]]>
            </value>
        </property>
        <!-- It will take care matching between object property and sql name parameter -->
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
        </property>
    </bean>
    
    <!-- Coupon -->
    <bean id="cvsCouponFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
        <!-- Read a csv file -->
        <property name="resource"  value="file:#{jobParameters['eland.file.name']}" />
        <property name="encoding"  value="euc-kr" />
        <property name="strict"  value="false" />

        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <!-- split it -->
                <property name="lineTokenizer">
                    <bean class="com.nicetcm.nibsplus.util.NibsFixedByteLengthTokenizer">
                        <property name="byteEncoding" value="euc-kr"/>
                        <property name="names" value="workNm, dataType, dataSeq, dealDate, branchCd, couponCd, volumeCd, quantity, confirm, filler" />
                        <property name="columns" value="1-5, 6-7, 8-14, 15-22, 23-26, 27-29, 30-33, 34-37, 38-38, 39-150" />
                    </bean>
                </property>
                <property name="fieldSetMapper">
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="tFnElandCouponVO" />
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="db2CouponItemWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource_OP" />
        <property name="sql">
            <value>
            <![CDATA[
                INSERT INTO OP.T_FN_ELAND_COUPON(DEAL_DATE
                                                ,BRANCH_CD
                                                ,COUPON_CD
                                                ,VOLUME_CD
                                                ,QUANTITY
                                                ,CONFIRM
                                                ,INSERT_DATE
                                                ,INSERT_UID)
                VALUES (:dealDate
                       ,:branchCd
                       ,:couponCd
                       ,:volumeCd
                       ,:quantity
                       ,:confirm
                       ,sysdate
                       ,'SYSTEM')
            ]]>
            </value>
        </property>
        <!-- It will take care matching between object property and sql name parameter -->
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
        </property>
    </bean>
</beans>