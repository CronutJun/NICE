package com.nicetcm.nibsplus.broker.ams.mapper;

import static org.apache.ibatis.jdbc.SqlBuilder.BEGIN;
import static org.apache.ibatis.jdbc.SqlBuilder.DELETE_FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.INSERT_INTO;
import static org.apache.ibatis.jdbc.SqlBuilder.ORDER_BY;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT_DISTINCT;
import static org.apache.ibatis.jdbc.SqlBuilder.SET;
import static org.apache.ibatis.jdbc.SqlBuilder.SQL;
import static org.apache.ibatis.jdbc.SqlBuilder.UPDATE;
import static org.apache.ibatis.jdbc.SqlBuilder.VALUES;
import static org.apache.ibatis.jdbc.SqlBuilder.WHERE;

import com.nicetcm.nibsplus.broker.ams.model.TRmFile;
import com.nicetcm.nibsplus.broker.ams.model.TRmFileSpec.Criteria;
import com.nicetcm.nibsplus.broker.ams.model.TRmFileSpec.Criterion;
import com.nicetcm.nibsplus.broker.ams.model.TRmFileSpec;
import java.util.List;
import java.util.Map;

public class TRmFileSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table IN.T_RM_FILE
     *
     * @mbggenerated Mon Sep 01 14:25:50 KST 2014
     */
    public String countBySpec(TRmFileSpec spec) {
        BEGIN();
        SELECT("count(*)");
        FROM("IN.T_RM_FILE");
        applyWhere(spec, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table IN.T_RM_FILE
     *
     * @mbggenerated Mon Sep 01 14:25:50 KST 2014
     */
    public String deleteBySpec(TRmFileSpec spec) {
        BEGIN();
        DELETE_FROM("IN.T_RM_FILE");
        applyWhere(spec, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table IN.T_RM_FILE
     *
     * @mbggenerated Mon Sep 01 14:25:50 KST 2014
     */
    public String insertSelective(TRmFile record) {
        BEGIN();
        INSERT_INTO("IN.T_RM_FILE");

        if (record.getCreateDate() != null) {
            VALUES("CREATE_DATE", "#{createDate,jdbcType=VARCHAR}");
        }

        if (record.getFileSeq() != null) {
            VALUES("FILE_SEQ", "#{fileSeq,jdbcType=VARCHAR}");
        }

        if (record.getInsertDate() != null) {
            VALUES("INSERT_DATE", "#{insertDate,jdbcType=TIMESTAMP}");
        }

        if (record.getInsertUid() != null) {
            VALUES("INSERT_UID", "#{insertUid,jdbcType=VARCHAR}");
        }

        if (record.getUpdateDate() != null) {
            VALUES("UPDATE_DATE", "#{updateDate,jdbcType=TIMESTAMP}");
        }

        if (record.getUpdateUid() != null) {
            VALUES("UPDATE_UID", "#{updateUid,jdbcType=VARCHAR}");
        }

        if (record.getFileCl() != null) {
            VALUES("FILE_CL", "#{fileCl,jdbcType=CHAR}");
        }

        if (record.getFileExt() != null) {
            VALUES("FILE_EXT", "#{fileExt,jdbcType=VARCHAR}");
        }

        if (record.getOrgFileNm() != null) {
            VALUES("ORG_FILE_NM", "#{orgFileNm,jdbcType=VARCHAR}");
        }

        if (record.getFilePath() != null) {
            VALUES("FILE_PATH", "#{filePath,jdbcType=VARCHAR}");
        }

        if (record.getFileNm() != null) {
            VALUES("FILE_NM", "#{fileNm,jdbcType=VARCHAR}");
        }

        if (record.getComprssYn() != null) {
            VALUES("COMPRSS_YN", "#{comprssYn,jdbcType=VARCHAR}");
        }

        if (record.getMacNo() != null) {
            VALUES("MAC_NO", "#{macNo,jdbcType=VARCHAR}");
        }

        if (record.getTrxDate() != null) {
            VALUES("TRX_DATE", "#{trxDate,jdbcType=VARCHAR}");
        }

        if (record.getTrxNo() != null) {
            VALUES("TRX_NO", "#{trxNo,jdbcType=VARCHAR}");
        }

        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table IN.T_RM_FILE
     *
     * @mbggenerated Mon Sep 01 14:25:50 KST 2014
     */
    public String selectBySpec(TRmFileSpec spec) {
        BEGIN();
        if (spec != null && spec.isDistinct()) {
            SELECT_DISTINCT("CREATE_DATE");
        } else {
            SELECT("CREATE_DATE");
        }
        SELECT("FILE_SEQ");
        SELECT("INSERT_DATE");
        SELECT("INSERT_UID");
        SELECT("UPDATE_DATE");
        SELECT("UPDATE_UID");
        SELECT("FILE_CL");
        SELECT("FILE_EXT");
        SELECT("ORG_FILE_NM");
        SELECT("FILE_PATH");
        SELECT("FILE_NM");
        SELECT("COMPRSS_YN");
        SELECT("MAC_NO");
        SELECT("TRX_DATE");
        SELECT("TRX_NO");
        FROM("IN.T_RM_FILE");
        applyWhere(spec, false);

        if (spec != null && spec.getOrderByClause() != null) {
            ORDER_BY(spec.getOrderByClause());
        }

        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table IN.T_RM_FILE
     *
     * @mbggenerated Mon Sep 01 14:25:50 KST 2014
     */
    public String updateBySpecSelective(Map<String, Object> parameter) {
        TRmFile record = (TRmFile) parameter.get("record");
        TRmFileSpec spec = (TRmFileSpec) parameter.get("spec");

        BEGIN();
        UPDATE("IN.T_RM_FILE");

        if (record.getCreateDate() != null) {
            SET("CREATE_DATE = #{record.createDate,jdbcType=VARCHAR}");
        }

        if (record.getFileSeq() != null) {
            SET("FILE_SEQ = #{record.fileSeq,jdbcType=VARCHAR}");
        }

        if (record.getInsertDate() != null) {
            SET("INSERT_DATE = #{record.insertDate,jdbcType=TIMESTAMP}");
        }

        if (record.getInsertUid() != null) {
            SET("INSERT_UID = #{record.insertUid,jdbcType=VARCHAR}");
        }

        if (record.getUpdateDate() != null) {
            SET("UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP}");
        }

        if (record.getUpdateUid() != null) {
            SET("UPDATE_UID = #{record.updateUid,jdbcType=VARCHAR}");
        }

        if (record.getFileCl() != null) {
            SET("FILE_CL = #{record.fileCl,jdbcType=CHAR}");
        }

        if (record.getFileExt() != null) {
            SET("FILE_EXT = #{record.fileExt,jdbcType=VARCHAR}");
        }

        if (record.getOrgFileNm() != null) {
            SET("ORG_FILE_NM = #{record.orgFileNm,jdbcType=VARCHAR}");
        }

        if (record.getFilePath() != null) {
            SET("FILE_PATH = #{record.filePath,jdbcType=VARCHAR}");
        }

        if (record.getFileNm() != null) {
            SET("FILE_NM = #{record.fileNm,jdbcType=VARCHAR}");
        }

        if (record.getComprssYn() != null) {
            SET("COMPRSS_YN = #{record.comprssYn,jdbcType=VARCHAR}");
        }

        if (record.getMacNo() != null) {
            SET("MAC_NO = #{record.macNo,jdbcType=VARCHAR}");
        }

        if (record.getTrxDate() != null) {
            SET("TRX_DATE = #{record.trxDate,jdbcType=VARCHAR}");
        }

        if (record.getTrxNo() != null) {
            SET("TRX_NO = #{record.trxNo,jdbcType=VARCHAR}");
        }

        applyWhere(spec, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table IN.T_RM_FILE
     *
     * @mbggenerated Mon Sep 01 14:25:50 KST 2014
     */
    public String updateBySpec(Map<String, Object> parameter) {
        BEGIN();
        UPDATE("IN.T_RM_FILE");

        SET("CREATE_DATE = #{record.createDate,jdbcType=VARCHAR}");
        SET("FILE_SEQ = #{record.fileSeq,jdbcType=VARCHAR}");
        SET("INSERT_DATE = #{record.insertDate,jdbcType=TIMESTAMP}");
        SET("INSERT_UID = #{record.insertUid,jdbcType=VARCHAR}");
        SET("UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP}");
        SET("UPDATE_UID = #{record.updateUid,jdbcType=VARCHAR}");
        SET("FILE_CL = #{record.fileCl,jdbcType=CHAR}");
        SET("FILE_EXT = #{record.fileExt,jdbcType=VARCHAR}");
        SET("ORG_FILE_NM = #{record.orgFileNm,jdbcType=VARCHAR}");
        SET("FILE_PATH = #{record.filePath,jdbcType=VARCHAR}");
        SET("FILE_NM = #{record.fileNm,jdbcType=VARCHAR}");
        SET("COMPRSS_YN = #{record.comprssYn,jdbcType=VARCHAR}");
        SET("MAC_NO = #{record.macNo,jdbcType=VARCHAR}");
        SET("TRX_DATE = #{record.trxDate,jdbcType=VARCHAR}");
        SET("TRX_NO = #{record.trxNo,jdbcType=VARCHAR}");

        TRmFileSpec spec = (TRmFileSpec) parameter.get("spec");
        applyWhere(spec, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table IN.T_RM_FILE
     *
     * @mbggenerated Mon Sep 01 14:25:50 KST 2014
     */
    public String updateByPrimaryKeySelective(TRmFile record) {
        BEGIN();
        UPDATE("IN.T_RM_FILE");

        if (record.getInsertDate() != null) {
            SET("INSERT_DATE = #{insertDate,jdbcType=TIMESTAMP}");
        }

        if (record.getInsertUid() != null) {
            SET("INSERT_UID = #{insertUid,jdbcType=VARCHAR}");
        }

        if (record.getUpdateDate() != null) {
            SET("UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP}");
        }

        if (record.getUpdateUid() != null) {
            SET("UPDATE_UID = #{updateUid,jdbcType=VARCHAR}");
        }

        if (record.getFileCl() != null) {
            SET("FILE_CL = #{fileCl,jdbcType=CHAR}");
        }

        if (record.getFileExt() != null) {
            SET("FILE_EXT = #{fileExt,jdbcType=VARCHAR}");
        }

        if (record.getOrgFileNm() != null) {
            SET("ORG_FILE_NM = #{orgFileNm,jdbcType=VARCHAR}");
        }

        if (record.getFilePath() != null) {
            SET("FILE_PATH = #{filePath,jdbcType=VARCHAR}");
        }

        if (record.getFileNm() != null) {
            SET("FILE_NM = #{fileNm,jdbcType=VARCHAR}");
        }

        if (record.getComprssYn() != null) {
            SET("COMPRSS_YN = #{comprssYn,jdbcType=VARCHAR}");
        }

        if (record.getMacNo() != null) {
            SET("MAC_NO = #{macNo,jdbcType=VARCHAR}");
        }

        if (record.getTrxDate() != null) {
            SET("TRX_DATE = #{trxDate,jdbcType=VARCHAR}");
        }

        if (record.getTrxNo() != null) {
            SET("TRX_NO = #{trxNo,jdbcType=VARCHAR}");
        }

        WHERE("CREATE_DATE = #{createDate,jdbcType=VARCHAR}");
        WHERE("FILE_SEQ = #{fileSeq,jdbcType=VARCHAR}");

        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table IN.T_RM_FILE
     *
     * @mbggenerated Mon Sep 01 14:25:50 KST 2014
     */
    protected void applyWhere(TRmFileSpec spec, boolean includeSpecPhrase) {
        if (spec == null) {
            return;
        }

        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeSpecPhrase) {
            parmPhrase1 = "%s #{spec.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{spec.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{spec.oredCriteria[%d].allCriteria[%d].value} and #{spec.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{spec.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{spec.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{spec.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{spec.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }

        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = spec.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }

                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }

                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }

        if (sb.length() > 0) {
            WHERE(sb.toString());
        }
    }
}