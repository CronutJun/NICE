package com.nicetcm.nibsplus.broker.ams.mapper;

import static org.apache.ibatis.jdbc.SqlBuilder.BEGIN;
import static org.apache.ibatis.jdbc.SqlBuilder.DELETE_FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.INSERT_INTO;
import static org.apache.ibatis.jdbc.SqlBuilder.ORDER_BY;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT_DISTINCT;
import static org.apache.ibatis.jdbc.SqlBuilder.SET;
import static org.apache.ibatis.jdbc.SqlBuilder.SQL;
import static org.apache.ibatis.jdbc.SqlBuilder.UPDATE;
import static org.apache.ibatis.jdbc.SqlBuilder.VALUES;
import static org.apache.ibatis.jdbc.SqlBuilder.WHERE;

import com.nicetcm.nibsplus.broker.ams.model.TCmMac;
import com.nicetcm.nibsplus.broker.ams.model.TCmMacSpec.Criteria;
import com.nicetcm.nibsplus.broker.ams.model.TCmMacSpec.Criterion;
import com.nicetcm.nibsplus.broker.ams.model.TCmMacSpec;
import java.util.List;
import java.util.Map;

public class TCmMacSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CM_MAC
     *
     * @mbggenerated Tue Aug 19 16:09:11 KST 2014
     */
    public String countBySpec(TCmMacSpec spec) {
        BEGIN();
        SELECT("count(*)");
        FROM("OP.T_CM_MAC");
        applyWhere(spec, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CM_MAC
     *
     * @mbggenerated Tue Aug 19 16:09:11 KST 2014
     */
    public String deleteBySpec(TCmMacSpec spec) {
        BEGIN();
        DELETE_FROM("OP.T_CM_MAC");
        applyWhere(spec, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CM_MAC
     *
     * @mbggenerated Tue Aug 19 16:09:11 KST 2014
     */
    public String insertSelective(TCmMac record) {
        BEGIN();
        INSERT_INTO("OP.T_CM_MAC");

        if (record.getOrgCd() != null) {
            VALUES("ORG_CD", "#{orgCd,jdbcType=VARCHAR}");
        }

        if (record.getBranchCd() != null) {
            VALUES("BRANCH_CD", "#{branchCd,jdbcType=VARCHAR}");
        }

        if (record.getMacNo() != null) {
            VALUES("MAC_NO", "#{macNo,jdbcType=VARCHAR}");
        }

        if (record.getMacNm() != null) {
            VALUES("MAC_NM", "#{macNm,jdbcType=VARCHAR}");
        }

        if (record.getMacShortNm() != null) {
            VALUES("MAC_SHORT_NM", "#{macShortNm,jdbcType=VARCHAR}");
        }

        if (record.getMacModel() != null) {
            VALUES("MAC_MODEL", "#{macModel,jdbcType=VARCHAR}");
        }

        if (record.getWebCashId() != null) {
            VALUES("WEB_CASH_ID", "#{webCashId,jdbcType=VARCHAR}");
        }

        if (record.getjCnt() != null) {
            VALUES("J_CNT", "#{jCnt,jdbcType=VARCHAR}");
        }

        if (record.getSetDate() != null) {
            VALUES("SET_DATE", "#{setDate,jdbcType=VARCHAR}");
        }

        if (record.getSetPlace() != null) {
            VALUES("SET_PLACE", "#{setPlace,jdbcType=VARCHAR}");
        }

        if (record.getOpenDate() != null) {
            VALUES("OPEN_DATE", "#{openDate,jdbcType=VARCHAR}");
        }

        if (record.getCloseDate() != null) {
            VALUES("CLOSE_DATE", "#{closeDate,jdbcType=VARCHAR}");
        }

        if (record.getAttentionYn() != null) {
            VALUES("ATTENTION_YN", "#{attentionYn,jdbcType=VARCHAR}");
        }

        if (record.getDesYn() != null) {
            VALUES("DES_YN", "#{desYn,jdbcType=VARCHAR}");
        }

        if (record.getCheckYDate() != null) {
            VALUES("CHECK_Y_DATE", "#{checkYDate,jdbcType=VARCHAR}");
        }

        if (record.getCheckNDate() != null) {
            VALUES("CHECK_N_DATE", "#{checkNDate,jdbcType=VARCHAR}");
        }

        if (record.getCheckYn() != null) {
            VALUES("CHECK_YN", "#{checkYn,jdbcType=VARCHAR}");
        }

        if (record.getSvcRelayYn() != null) {
            VALUES("SVC_RELAY_YN", "#{svcRelayYn,jdbcType=VARCHAR}");
        }

        if (record.getSvcRelayOrg() != null) {
            VALUES("SVC_RELAY_ORG", "#{svcRelayOrg,jdbcType=VARCHAR}");
        }

        if (record.getCorCd() != null) {
            VALUES("COR_CD", "#{corCd,jdbcType=VARCHAR}");
        }

        if (record.getOutYn() != null) {
            VALUES("OUT_YN", "#{outYn,jdbcType=VARCHAR}");
        }

        if (record.getSvcYn() != null) {
            VALUES("SVC_YN", "#{svcYn,jdbcType=VARCHAR}");
        }

        if (record.getForeignYn() != null) {
            VALUES("FOREIGN_YN", "#{foreignYn,jdbcType=VARCHAR}");
        }

        if (record.getAmtLimit() != null) {
            VALUES("AMT_LIMIT", "#{amtLimit,jdbcType=DECIMAL}");
        }

        if (record.getForLimit() != null) {
            VALUES("FOR_LIMIT", "#{forLimit,jdbcType=DECIMAL}");
        }

        if (record.getSafeLimit() != null) {
            VALUES("SAFE_LIMIT", "#{safeLimit,jdbcType=DECIMAL}");
        }

        if (record.getSiteCd() != null) {
            VALUES("SITE_CD", "#{siteCd,jdbcType=VARCHAR}");
        }

        if (record.getMadeComCd() != null) {
            VALUES("MADE_COM_CD", "#{madeComCd,jdbcType=VARCHAR}");
        }

        if (record.getComAreaCd() != null) {
            VALUES("COM_AREA_CD", "#{comAreaCd,jdbcType=VARCHAR}");
        }

        if (record.getMemo() != null) {
            VALUES("MEMO", "#{memo,jdbcType=VARCHAR}");
        }

        if (record.getUpdateDate() != null) {
            VALUES("UPDATE_DATE", "#{updateDate,jdbcType=TIMESTAMP}");
        }

        if (record.getUpdateUid() != null) {
            VALUES("UPDATE_UID", "#{updateUid,jdbcType=VARCHAR}");
        }

        if (record.getOrgSiteCd() != null) {
            VALUES("ORG_SITE_CD", "#{orgSiteCd,jdbcType=VARCHAR}");
        }

        if (record.getAtmModel() != null) {
            VALUES("ATM_MODEL", "#{atmModel,jdbcType=VARCHAR}");
        }

        if (record.getJbType() != null) {
            VALUES("JB_TYPE", "#{jbType,jdbcType=VARCHAR}");
        }

        if (record.getReopenDate() != null) {
            VALUES("REOPEN_DATE", "#{reopenDate,jdbcType=VARCHAR}");
        }

        if (record.getServiceFeeBase() != null) {
            VALUES("SERVICE_FEE_BASE", "#{serviceFeeBase,jdbcType=DECIMAL}");
        }

        if (record.getSpecialFee() != null) {
            VALUES("SPECIAL_FEE", "#{specialFee,jdbcType=DECIMAL}");
        }

        if (record.getAddMacFee() != null) {
            VALUES("ADD_MAC_FEE", "#{addMacFee,jdbcType=DECIMAL}");
        }

        if (record.getAddTimeFee() != null) {
            VALUES("ADD_TIME_FEE", "#{addTimeFee,jdbcType=DECIMAL}");
        }

        if (record.getAddCheckFee() != null) {
            VALUES("ADD_CHECK_FEE", "#{addCheckFee,jdbcType=DECIMAL}");
        }

        if (record.getSetupFee() != null) {
            VALUES("SETUP_FEE", "#{setupFee,jdbcType=DECIMAL}");
        }

        if (record.getPenalty() != null) {
            VALUES("PENALTY", "#{penalty,jdbcType=DECIMAL}");
        }

        if (record.getServiceRemark() != null) {
            VALUES("SERVICE_REMARK", "#{serviceRemark,jdbcType=VARCHAR}");
        }

        if (record.getOldOrgCd() != null) {
            VALUES("OLD_ORG_CD", "#{oldOrgCd,jdbcType=VARCHAR}");
        }

        if (record.getMonthlyFee() != null) {
            VALUES("MONTHLY_FEE", "#{monthlyFee,jdbcType=DECIMAL}");
        }

        if (record.getAddMoveFee() != null) {
            VALUES("ADD_MOVE_FEE", "#{addMoveFee,jdbcType=DECIMAL}");
        }

        if (record.getBrandFirstOrgCd() != null) {
            VALUES("BRAND_FIRST_ORG_CD", "#{brandFirstOrgCd,jdbcType=VARCHAR}");
        }

        if (record.getCdReopenDate() != null) {
            VALUES("CD_REOPEN_DATE", "#{cdReopenDate,jdbcType=VARCHAR}");
        }

        if (record.getWeakGuardYn() != null) {
            VALUES("WEAK_GUARD_YN", "#{weakGuardYn,jdbcType=VARCHAR}");
        }

        if (record.getOrgSendClose() != null) {
            VALUES("ORG_SEND_CLOSE", "#{orgSendClose,jdbcType=VARCHAR}");
        }

        if (record.getCashboxNo() != null) {
            VALUES("CASHBOX_NO", "#{cashboxNo,jdbcType=VARCHAR}");
        }

        if (record.getNewCash() != null) {
            VALUES("NEW_CASH", "#{newCash,jdbcType=VARCHAR}");
        }

        if (record.getLimitType() != null) {
            VALUES("LIMIT_TYPE", "#{limitType,jdbcType=VARCHAR}");
        }

        if (record.getNewCashLimit() != null) {
            VALUES("NEW_CASH_LIMIT", "#{newCashLimit,jdbcType=DECIMAL}");
        }

        if (record.getOldCashLimit() != null) {
            VALUES("OLD_CASH_LIMIT", "#{oldCashLimit,jdbcType=DECIMAL}");
        }

        if (record.getNewForLimit() != null) {
            VALUES("NEW_FOR_LIMIT", "#{newForLimit,jdbcType=DECIMAL}");
        }

        if (record.getOldForLimit() != null) {
            VALUES("OLD_FOR_LIMIT", "#{oldForLimit,jdbcType=DECIMAL}");
        }

        if (record.getNewSafeLimit() != null) {
            VALUES("NEW_SAFE_LIMIT", "#{newSafeLimit,jdbcType=DECIMAL}");
        }

        if (record.getOldSafeLimit() != null) {
            VALUES("OLD_SAFE_LIMIT", "#{oldSafeLimit,jdbcType=DECIMAL}");
        }

        if (record.getMacVer() != null) {
            VALUES("MAC_VER", "#{macVer,jdbcType=VARCHAR}");
        }

        if (record.getSerialNo() != null) {
            VALUES("SERIAL_NO", "#{serialNo,jdbcType=VARCHAR}");
        }

        if (record.getShortCash() != null) {
            VALUES("SHORT_CASH", "#{shortCash,jdbcType=DECIMAL}");
        }

        if (record.getShortCashNotice() != null) {
            VALUES("SHORT_CASH_NOTICE", "#{shortCashNotice,jdbcType=DECIMAL}");
        }

        if (record.getNoTradeMon() != null) {
            VALUES("NO_TRADE_MON", "#{noTradeMon,jdbcType=VARCHAR}");
        }

        if (record.getNoTradeTue() != null) {
            VALUES("NO_TRADE_TUE", "#{noTradeTue,jdbcType=VARCHAR}");
        }

        if (record.getNoTradeWed() != null) {
            VALUES("NO_TRADE_WED", "#{noTradeWed,jdbcType=VARCHAR}");
        }

        if (record.getNoTradeThu() != null) {
            VALUES("NO_TRADE_THU", "#{noTradeThu,jdbcType=VARCHAR}");
        }

        if (record.getNoTradeFri() != null) {
            VALUES("NO_TRADE_FRI", "#{noTradeFri,jdbcType=VARCHAR}");
        }

        if (record.getNoTradeSat() != null) {
            VALUES("NO_TRADE_SAT", "#{noTradeSat,jdbcType=VARCHAR}");
        }

        if (record.getNoTradeSun() != null) {
            VALUES("NO_TRADE_SUN", "#{noTradeSun,jdbcType=VARCHAR}");
        }

        if (record.getNoTradeStartTime() != null) {
            VALUES("NO_TRADE_START_TIME", "#{noTradeStartTime,jdbcType=VARCHAR}");
        }

        if (record.getNoTradeEndTime() != null) {
            VALUES("NO_TRADE_END_TIME", "#{noTradeEndTime,jdbcType=VARCHAR}");
        }

        if (record.getNoTradeTerm() != null) {
            VALUES("NO_TRADE_TERM", "#{noTradeTerm,jdbcType=VARCHAR}");
        }

        if (record.getPenaltyYn() != null) {
            VALUES("PENALTY_YN", "#{penaltyYn,jdbcType=VARCHAR}");
        }

        if (record.getAsAcptYn() != null) {
            VALUES("AS_ACPT_YN", "#{asAcptYn,jdbcType=VARCHAR}");
        }

        if (record.getMacGrade() != null) {
            VALUES("MAC_GRADE", "#{macGrade,jdbcType=VARCHAR}");
        }

        if (record.getBillUseType() != null) {
            VALUES("BILL_USE_TYPE", "#{billUseType,jdbcType=VARCHAR}");
        }

        if (record.getCashPenaltyYn() != null) {
            VALUES("CASH_PENALTY_YN", "#{cashPenaltyYn,jdbcType=VARCHAR}");
        }

        if (record.getShortCash5() != null) {
            VALUES("SHORT_CASH5", "#{shortCash5,jdbcType=DECIMAL}");
        }

        if (record.getShortCash5Notice() != null) {
            VALUES("SHORT_CASH5_NOTICE", "#{shortCash5Notice,jdbcType=DECIMAL}");
        }

        if (record.getBranchMacYn() != null) {
            VALUES("BRANCH_MAC_YN", "#{branchMacYn,jdbcType=VARCHAR}");
        }

        if (record.getGrade() != null) {
            VALUES("GRADE", "#{grade,jdbcType=VARCHAR}");
        }

        if (record.getMacAddress() != null) {
            VALUES("MAC_ADDRESS", "#{macAddress,jdbcType=VARCHAR}");
        }

        if (record.getMacModelCd() != null) {
            VALUES("MAC_MODEL_CD", "#{macModelCd,jdbcType=VARCHAR}");
        }

        if (record.getMacMadeYear() != null) {
            VALUES("MAC_MADE_YEAR", "#{macMadeYear,jdbcType=VARCHAR}");
        }

        if (record.getInterphoneType() != null) {
            VALUES("INTERPHONE_TYPE", "#{interphoneType,jdbcType=VARCHAR}");
        }

        if (record.getForCurYn() != null) {
            VALUES("FOR_CUR_YN", "#{forCurYn,jdbcType=VARCHAR}");
        }

        if (record.getTicketYn() != null) {
            VALUES("TICKET_YN", "#{ticketYn,jdbcType=VARCHAR}");
        }

        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CM_MAC
     *
     * @mbggenerated Tue Aug 19 16:09:11 KST 2014
     */
    public String selectBySpec(TCmMacSpec spec) {
        BEGIN();
        if (spec != null && spec.isDistinct()) {
            SELECT_DISTINCT("ORG_CD");
        } else {
            SELECT("ORG_CD");
        }
        SELECT("BRANCH_CD");
        SELECT("MAC_NO");
        SELECT("MAC_NM");
        SELECT("MAC_SHORT_NM");
        SELECT("MAC_MODEL");
        SELECT("WEB_CASH_ID");
        SELECT("J_CNT");
        SELECT("SET_DATE");
        SELECT("SET_PLACE");
        SELECT("OPEN_DATE");
        SELECT("CLOSE_DATE");
        SELECT("ATTENTION_YN");
        SELECT("DES_YN");
        SELECT("CHECK_Y_DATE");
        SELECT("CHECK_N_DATE");
        SELECT("CHECK_YN");
        SELECT("SVC_RELAY_YN");
        SELECT("SVC_RELAY_ORG");
        SELECT("COR_CD");
        SELECT("OUT_YN");
        SELECT("SVC_YN");
        SELECT("FOREIGN_YN");
        SELECT("AMT_LIMIT");
        SELECT("FOR_LIMIT");
        SELECT("SAFE_LIMIT");
        SELECT("SITE_CD");
        SELECT("MADE_COM_CD");
        SELECT("COM_AREA_CD");
        SELECT("MEMO");
        SELECT("UPDATE_DATE");
        SELECT("UPDATE_UID");
        SELECT("ORG_SITE_CD");
        SELECT("ATM_MODEL");
        SELECT("JB_TYPE");
        SELECT("REOPEN_DATE");
        SELECT("SERVICE_FEE_BASE");
        SELECT("SPECIAL_FEE");
        SELECT("ADD_MAC_FEE");
        SELECT("ADD_TIME_FEE");
        SELECT("ADD_CHECK_FEE");
        SELECT("SETUP_FEE");
        SELECT("PENALTY");
        SELECT("SERVICE_REMARK");
        SELECT("OLD_ORG_CD");
        SELECT("MONTHLY_FEE");
        SELECT("ADD_MOVE_FEE");
        SELECT("BRAND_FIRST_ORG_CD");
        SELECT("CD_REOPEN_DATE");
        SELECT("WEAK_GUARD_YN");
        SELECT("ORG_SEND_CLOSE");
        SELECT("CASHBOX_NO");
        SELECT("NEW_CASH");
        SELECT("LIMIT_TYPE");
        SELECT("NEW_CASH_LIMIT");
        SELECT("OLD_CASH_LIMIT");
        SELECT("NEW_FOR_LIMIT");
        SELECT("OLD_FOR_LIMIT");
        SELECT("NEW_SAFE_LIMIT");
        SELECT("OLD_SAFE_LIMIT");
        SELECT("MAC_VER");
        SELECT("SERIAL_NO");
        SELECT("SHORT_CASH");
        SELECT("SHORT_CASH_NOTICE");
        SELECT("NO_TRADE_MON");
        SELECT("NO_TRADE_TUE");
        SELECT("NO_TRADE_WED");
        SELECT("NO_TRADE_THU");
        SELECT("NO_TRADE_FRI");
        SELECT("NO_TRADE_SAT");
        SELECT("NO_TRADE_SUN");
        SELECT("NO_TRADE_START_TIME");
        SELECT("NO_TRADE_END_TIME");
        SELECT("NO_TRADE_TERM");
        SELECT("PENALTY_YN");
        SELECT("AS_ACPT_YN");
        SELECT("MAC_GRADE");
        SELECT("BILL_USE_TYPE");
        SELECT("CASH_PENALTY_YN");
        SELECT("SHORT_CASH5");
        SELECT("SHORT_CASH5_NOTICE");
        SELECT("BRANCH_MAC_YN");
        SELECT("GRADE");
        SELECT("MAC_ADDRESS");
        SELECT("MAC_MODEL_CD");
        SELECT("MAC_MADE_YEAR");
        SELECT("INTERPHONE_TYPE");
        SELECT("FOR_CUR_YN");
        SELECT("TICKET_YN");
        FROM("OP.T_CM_MAC");
        applyWhere(spec, false);

        if (spec != null && spec.getOrderByClause() != null) {
            ORDER_BY(spec.getOrderByClause());
        }

        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CM_MAC
     *
     * @mbggenerated Tue Aug 19 16:09:11 KST 2014
     */
    public String updateBySpecSelective(Map<String, Object> parameter) {
        TCmMac record = (TCmMac) parameter.get("record");
        TCmMacSpec spec = (TCmMacSpec) parameter.get("spec");

        BEGIN();
        UPDATE("OP.T_CM_MAC");

        if (record.getOrgCd() != null) {
            SET("ORG_CD = #{record.orgCd,jdbcType=VARCHAR}");
        }

        if (record.getBranchCd() != null) {
            SET("BRANCH_CD = #{record.branchCd,jdbcType=VARCHAR}");
        }

        if (record.getMacNo() != null) {
            SET("MAC_NO = #{record.macNo,jdbcType=VARCHAR}");
        }

        if (record.getMacNm() != null) {
            SET("MAC_NM = #{record.macNm,jdbcType=VARCHAR}");
        }

        if (record.getMacShortNm() != null) {
            SET("MAC_SHORT_NM = #{record.macShortNm,jdbcType=VARCHAR}");
        }

        if (record.getMacModel() != null) {
            SET("MAC_MODEL = #{record.macModel,jdbcType=VARCHAR}");
        }

        if (record.getWebCashId() != null) {
            SET("WEB_CASH_ID = #{record.webCashId,jdbcType=VARCHAR}");
        }

        if (record.getjCnt() != null) {
            SET("J_CNT = #{record.jCnt,jdbcType=VARCHAR}");
        }

        if (record.getSetDate() != null) {
            SET("SET_DATE = #{record.setDate,jdbcType=VARCHAR}");
        }

        if (record.getSetPlace() != null) {
            SET("SET_PLACE = #{record.setPlace,jdbcType=VARCHAR}");
        }

        if (record.getOpenDate() != null) {
            SET("OPEN_DATE = #{record.openDate,jdbcType=VARCHAR}");
        }

        if (record.getCloseDate() != null) {
            SET("CLOSE_DATE = #{record.closeDate,jdbcType=VARCHAR}");
        }

        if (record.getAttentionYn() != null) {
            SET("ATTENTION_YN = #{record.attentionYn,jdbcType=VARCHAR}");
        }

        if (record.getDesYn() != null) {
            SET("DES_YN = #{record.desYn,jdbcType=VARCHAR}");
        }

        if (record.getCheckYDate() != null) {
            SET("CHECK_Y_DATE = #{record.checkYDate,jdbcType=VARCHAR}");
        }

        if (record.getCheckNDate() != null) {
            SET("CHECK_N_DATE = #{record.checkNDate,jdbcType=VARCHAR}");
        }

        if (record.getCheckYn() != null) {
            SET("CHECK_YN = #{record.checkYn,jdbcType=VARCHAR}");
        }

        if (record.getSvcRelayYn() != null) {
            SET("SVC_RELAY_YN = #{record.svcRelayYn,jdbcType=VARCHAR}");
        }

        if (record.getSvcRelayOrg() != null) {
            SET("SVC_RELAY_ORG = #{record.svcRelayOrg,jdbcType=VARCHAR}");
        }

        if (record.getCorCd() != null) {
            SET("COR_CD = #{record.corCd,jdbcType=VARCHAR}");
        }

        if (record.getOutYn() != null) {
            SET("OUT_YN = #{record.outYn,jdbcType=VARCHAR}");
        }

        if (record.getSvcYn() != null) {
            SET("SVC_YN = #{record.svcYn,jdbcType=VARCHAR}");
        }

        if (record.getForeignYn() != null) {
            SET("FOREIGN_YN = #{record.foreignYn,jdbcType=VARCHAR}");
        }

        if (record.getAmtLimit() != null) {
            SET("AMT_LIMIT = #{record.amtLimit,jdbcType=DECIMAL}");
        }

        if (record.getForLimit() != null) {
            SET("FOR_LIMIT = #{record.forLimit,jdbcType=DECIMAL}");
        }

        if (record.getSafeLimit() != null) {
            SET("SAFE_LIMIT = #{record.safeLimit,jdbcType=DECIMAL}");
        }

        if (record.getSiteCd() != null) {
            SET("SITE_CD = #{record.siteCd,jdbcType=VARCHAR}");
        }

        if (record.getMadeComCd() != null) {
            SET("MADE_COM_CD = #{record.madeComCd,jdbcType=VARCHAR}");
        }

        if (record.getComAreaCd() != null) {
            SET("COM_AREA_CD = #{record.comAreaCd,jdbcType=VARCHAR}");
        }

        if (record.getMemo() != null) {
            SET("MEMO = #{record.memo,jdbcType=VARCHAR}");
        }

        if (record.getUpdateDate() != null) {
            SET("UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP}");
        }

        if (record.getUpdateUid() != null) {
            SET("UPDATE_UID = #{record.updateUid,jdbcType=VARCHAR}");
        }

        if (record.getOrgSiteCd() != null) {
            SET("ORG_SITE_CD = #{record.orgSiteCd,jdbcType=VARCHAR}");
        }

        if (record.getAtmModel() != null) {
            SET("ATM_MODEL = #{record.atmModel,jdbcType=VARCHAR}");
        }

        if (record.getJbType() != null) {
            SET("JB_TYPE = #{record.jbType,jdbcType=VARCHAR}");
        }

        if (record.getReopenDate() != null) {
            SET("REOPEN_DATE = #{record.reopenDate,jdbcType=VARCHAR}");
        }

        if (record.getServiceFeeBase() != null) {
            SET("SERVICE_FEE_BASE = #{record.serviceFeeBase,jdbcType=DECIMAL}");
        }

        if (record.getSpecialFee() != null) {
            SET("SPECIAL_FEE = #{record.specialFee,jdbcType=DECIMAL}");
        }

        if (record.getAddMacFee() != null) {
            SET("ADD_MAC_FEE = #{record.addMacFee,jdbcType=DECIMAL}");
        }

        if (record.getAddTimeFee() != null) {
            SET("ADD_TIME_FEE = #{record.addTimeFee,jdbcType=DECIMAL}");
        }

        if (record.getAddCheckFee() != null) {
            SET("ADD_CHECK_FEE = #{record.addCheckFee,jdbcType=DECIMAL}");
        }

        if (record.getSetupFee() != null) {
            SET("SETUP_FEE = #{record.setupFee,jdbcType=DECIMAL}");
        }

        if (record.getPenalty() != null) {
            SET("PENALTY = #{record.penalty,jdbcType=DECIMAL}");
        }

        if (record.getServiceRemark() != null) {
            SET("SERVICE_REMARK = #{record.serviceRemark,jdbcType=VARCHAR}");
        }

        if (record.getOldOrgCd() != null) {
            SET("OLD_ORG_CD = #{record.oldOrgCd,jdbcType=VARCHAR}");
        }

        if (record.getMonthlyFee() != null) {
            SET("MONTHLY_FEE = #{record.monthlyFee,jdbcType=DECIMAL}");
        }

        if (record.getAddMoveFee() != null) {
            SET("ADD_MOVE_FEE = #{record.addMoveFee,jdbcType=DECIMAL}");
        }

        if (record.getBrandFirstOrgCd() != null) {
            SET("BRAND_FIRST_ORG_CD = #{record.brandFirstOrgCd,jdbcType=VARCHAR}");
        }

        if (record.getCdReopenDate() != null) {
            SET("CD_REOPEN_DATE = #{record.cdReopenDate,jdbcType=VARCHAR}");
        }

        if (record.getWeakGuardYn() != null) {
            SET("WEAK_GUARD_YN = #{record.weakGuardYn,jdbcType=VARCHAR}");
        }

        if (record.getOrgSendClose() != null) {
            SET("ORG_SEND_CLOSE = #{record.orgSendClose,jdbcType=VARCHAR}");
        }

        if (record.getCashboxNo() != null) {
            SET("CASHBOX_NO = #{record.cashboxNo,jdbcType=VARCHAR}");
        }

        if (record.getNewCash() != null) {
            SET("NEW_CASH = #{record.newCash,jdbcType=VARCHAR}");
        }

        if (record.getLimitType() != null) {
            SET("LIMIT_TYPE = #{record.limitType,jdbcType=VARCHAR}");
        }

        if (record.getNewCashLimit() != null) {
            SET("NEW_CASH_LIMIT = #{record.newCashLimit,jdbcType=DECIMAL}");
        }

        if (record.getOldCashLimit() != null) {
            SET("OLD_CASH_LIMIT = #{record.oldCashLimit,jdbcType=DECIMAL}");
        }

        if (record.getNewForLimit() != null) {
            SET("NEW_FOR_LIMIT = #{record.newForLimit,jdbcType=DECIMAL}");
        }

        if (record.getOldForLimit() != null) {
            SET("OLD_FOR_LIMIT = #{record.oldForLimit,jdbcType=DECIMAL}");
        }

        if (record.getNewSafeLimit() != null) {
            SET("NEW_SAFE_LIMIT = #{record.newSafeLimit,jdbcType=DECIMAL}");
        }

        if (record.getOldSafeLimit() != null) {
            SET("OLD_SAFE_LIMIT = #{record.oldSafeLimit,jdbcType=DECIMAL}");
        }

        if (record.getMacVer() != null) {
            SET("MAC_VER = #{record.macVer,jdbcType=VARCHAR}");
        }

        if (record.getSerialNo() != null) {
            SET("SERIAL_NO = #{record.serialNo,jdbcType=VARCHAR}");
        }

        if (record.getShortCash() != null) {
            SET("SHORT_CASH = #{record.shortCash,jdbcType=DECIMAL}");
        }

        if (record.getShortCashNotice() != null) {
            SET("SHORT_CASH_NOTICE = #{record.shortCashNotice,jdbcType=DECIMAL}");
        }

        if (record.getNoTradeMon() != null) {
            SET("NO_TRADE_MON = #{record.noTradeMon,jdbcType=VARCHAR}");
        }

        if (record.getNoTradeTue() != null) {
            SET("NO_TRADE_TUE = #{record.noTradeTue,jdbcType=VARCHAR}");
        }

        if (record.getNoTradeWed() != null) {
            SET("NO_TRADE_WED = #{record.noTradeWed,jdbcType=VARCHAR}");
        }

        if (record.getNoTradeThu() != null) {
            SET("NO_TRADE_THU = #{record.noTradeThu,jdbcType=VARCHAR}");
        }

        if (record.getNoTradeFri() != null) {
            SET("NO_TRADE_FRI = #{record.noTradeFri,jdbcType=VARCHAR}");
        }

        if (record.getNoTradeSat() != null) {
            SET("NO_TRADE_SAT = #{record.noTradeSat,jdbcType=VARCHAR}");
        }

        if (record.getNoTradeSun() != null) {
            SET("NO_TRADE_SUN = #{record.noTradeSun,jdbcType=VARCHAR}");
        }

        if (record.getNoTradeStartTime() != null) {
            SET("NO_TRADE_START_TIME = #{record.noTradeStartTime,jdbcType=VARCHAR}");
        }

        if (record.getNoTradeEndTime() != null) {
            SET("NO_TRADE_END_TIME = #{record.noTradeEndTime,jdbcType=VARCHAR}");
        }

        if (record.getNoTradeTerm() != null) {
            SET("NO_TRADE_TERM = #{record.noTradeTerm,jdbcType=VARCHAR}");
        }

        if (record.getPenaltyYn() != null) {
            SET("PENALTY_YN = #{record.penaltyYn,jdbcType=VARCHAR}");
        }

        if (record.getAsAcptYn() != null) {
            SET("AS_ACPT_YN = #{record.asAcptYn,jdbcType=VARCHAR}");
        }

        if (record.getMacGrade() != null) {
            SET("MAC_GRADE = #{record.macGrade,jdbcType=VARCHAR}");
        }

        if (record.getBillUseType() != null) {
            SET("BILL_USE_TYPE = #{record.billUseType,jdbcType=VARCHAR}");
        }

        if (record.getCashPenaltyYn() != null) {
            SET("CASH_PENALTY_YN = #{record.cashPenaltyYn,jdbcType=VARCHAR}");
        }

        if (record.getShortCash5() != null) {
            SET("SHORT_CASH5 = #{record.shortCash5,jdbcType=DECIMAL}");
        }

        if (record.getShortCash5Notice() != null) {
            SET("SHORT_CASH5_NOTICE = #{record.shortCash5Notice,jdbcType=DECIMAL}");
        }

        if (record.getBranchMacYn() != null) {
            SET("BRANCH_MAC_YN = #{record.branchMacYn,jdbcType=VARCHAR}");
        }

        if (record.getGrade() != null) {
            SET("GRADE = #{record.grade,jdbcType=VARCHAR}");
        }

        if (record.getMacAddress() != null) {
            SET("MAC_ADDRESS = #{record.macAddress,jdbcType=VARCHAR}");
        }

        if (record.getMacModelCd() != null) {
            SET("MAC_MODEL_CD = #{record.macModelCd,jdbcType=VARCHAR}");
        }

        if (record.getMacMadeYear() != null) {
            SET("MAC_MADE_YEAR = #{record.macMadeYear,jdbcType=VARCHAR}");
        }

        if (record.getInterphoneType() != null) {
            SET("INTERPHONE_TYPE = #{record.interphoneType,jdbcType=VARCHAR}");
        }

        if (record.getForCurYn() != null) {
            SET("FOR_CUR_YN = #{record.forCurYn,jdbcType=VARCHAR}");
        }

        if (record.getTicketYn() != null) {
            SET("TICKET_YN = #{record.ticketYn,jdbcType=VARCHAR}");
        }

        applyWhere(spec, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CM_MAC
     *
     * @mbggenerated Tue Aug 19 16:09:11 KST 2014
     */
    public String updateBySpec(Map<String, Object> parameter) {
        BEGIN();
        UPDATE("OP.T_CM_MAC");

        SET("ORG_CD = #{record.orgCd,jdbcType=VARCHAR}");
        SET("BRANCH_CD = #{record.branchCd,jdbcType=VARCHAR}");
        SET("MAC_NO = #{record.macNo,jdbcType=VARCHAR}");
        SET("MAC_NM = #{record.macNm,jdbcType=VARCHAR}");
        SET("MAC_SHORT_NM = #{record.macShortNm,jdbcType=VARCHAR}");
        SET("MAC_MODEL = #{record.macModel,jdbcType=VARCHAR}");
        SET("WEB_CASH_ID = #{record.webCashId,jdbcType=VARCHAR}");
        SET("J_CNT = #{record.jCnt,jdbcType=VARCHAR}");
        SET("SET_DATE = #{record.setDate,jdbcType=VARCHAR}");
        SET("SET_PLACE = #{record.setPlace,jdbcType=VARCHAR}");
        SET("OPEN_DATE = #{record.openDate,jdbcType=VARCHAR}");
        SET("CLOSE_DATE = #{record.closeDate,jdbcType=VARCHAR}");
        SET("ATTENTION_YN = #{record.attentionYn,jdbcType=VARCHAR}");
        SET("DES_YN = #{record.desYn,jdbcType=VARCHAR}");
        SET("CHECK_Y_DATE = #{record.checkYDate,jdbcType=VARCHAR}");
        SET("CHECK_N_DATE = #{record.checkNDate,jdbcType=VARCHAR}");
        SET("CHECK_YN = #{record.checkYn,jdbcType=VARCHAR}");
        SET("SVC_RELAY_YN = #{record.svcRelayYn,jdbcType=VARCHAR}");
        SET("SVC_RELAY_ORG = #{record.svcRelayOrg,jdbcType=VARCHAR}");
        SET("COR_CD = #{record.corCd,jdbcType=VARCHAR}");
        SET("OUT_YN = #{record.outYn,jdbcType=VARCHAR}");
        SET("SVC_YN = #{record.svcYn,jdbcType=VARCHAR}");
        SET("FOREIGN_YN = #{record.foreignYn,jdbcType=VARCHAR}");
        SET("AMT_LIMIT = #{record.amtLimit,jdbcType=DECIMAL}");
        SET("FOR_LIMIT = #{record.forLimit,jdbcType=DECIMAL}");
        SET("SAFE_LIMIT = #{record.safeLimit,jdbcType=DECIMAL}");
        SET("SITE_CD = #{record.siteCd,jdbcType=VARCHAR}");
        SET("MADE_COM_CD = #{record.madeComCd,jdbcType=VARCHAR}");
        SET("COM_AREA_CD = #{record.comAreaCd,jdbcType=VARCHAR}");
        SET("MEMO = #{record.memo,jdbcType=VARCHAR}");
        SET("UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP}");
        SET("UPDATE_UID = #{record.updateUid,jdbcType=VARCHAR}");
        SET("ORG_SITE_CD = #{record.orgSiteCd,jdbcType=VARCHAR}");
        SET("ATM_MODEL = #{record.atmModel,jdbcType=VARCHAR}");
        SET("JB_TYPE = #{record.jbType,jdbcType=VARCHAR}");
        SET("REOPEN_DATE = #{record.reopenDate,jdbcType=VARCHAR}");
        SET("SERVICE_FEE_BASE = #{record.serviceFeeBase,jdbcType=DECIMAL}");
        SET("SPECIAL_FEE = #{record.specialFee,jdbcType=DECIMAL}");
        SET("ADD_MAC_FEE = #{record.addMacFee,jdbcType=DECIMAL}");
        SET("ADD_TIME_FEE = #{record.addTimeFee,jdbcType=DECIMAL}");
        SET("ADD_CHECK_FEE = #{record.addCheckFee,jdbcType=DECIMAL}");
        SET("SETUP_FEE = #{record.setupFee,jdbcType=DECIMAL}");
        SET("PENALTY = #{record.penalty,jdbcType=DECIMAL}");
        SET("SERVICE_REMARK = #{record.serviceRemark,jdbcType=VARCHAR}");
        SET("OLD_ORG_CD = #{record.oldOrgCd,jdbcType=VARCHAR}");
        SET("MONTHLY_FEE = #{record.monthlyFee,jdbcType=DECIMAL}");
        SET("ADD_MOVE_FEE = #{record.addMoveFee,jdbcType=DECIMAL}");
        SET("BRAND_FIRST_ORG_CD = #{record.brandFirstOrgCd,jdbcType=VARCHAR}");
        SET("CD_REOPEN_DATE = #{record.cdReopenDate,jdbcType=VARCHAR}");
        SET("WEAK_GUARD_YN = #{record.weakGuardYn,jdbcType=VARCHAR}");
        SET("ORG_SEND_CLOSE = #{record.orgSendClose,jdbcType=VARCHAR}");
        SET("CASHBOX_NO = #{record.cashboxNo,jdbcType=VARCHAR}");
        SET("NEW_CASH = #{record.newCash,jdbcType=VARCHAR}");
        SET("LIMIT_TYPE = #{record.limitType,jdbcType=VARCHAR}");
        SET("NEW_CASH_LIMIT = #{record.newCashLimit,jdbcType=DECIMAL}");
        SET("OLD_CASH_LIMIT = #{record.oldCashLimit,jdbcType=DECIMAL}");
        SET("NEW_FOR_LIMIT = #{record.newForLimit,jdbcType=DECIMAL}");
        SET("OLD_FOR_LIMIT = #{record.oldForLimit,jdbcType=DECIMAL}");
        SET("NEW_SAFE_LIMIT = #{record.newSafeLimit,jdbcType=DECIMAL}");
        SET("OLD_SAFE_LIMIT = #{record.oldSafeLimit,jdbcType=DECIMAL}");
        SET("MAC_VER = #{record.macVer,jdbcType=VARCHAR}");
        SET("SERIAL_NO = #{record.serialNo,jdbcType=VARCHAR}");
        SET("SHORT_CASH = #{record.shortCash,jdbcType=DECIMAL}");
        SET("SHORT_CASH_NOTICE = #{record.shortCashNotice,jdbcType=DECIMAL}");
        SET("NO_TRADE_MON = #{record.noTradeMon,jdbcType=VARCHAR}");
        SET("NO_TRADE_TUE = #{record.noTradeTue,jdbcType=VARCHAR}");
        SET("NO_TRADE_WED = #{record.noTradeWed,jdbcType=VARCHAR}");
        SET("NO_TRADE_THU = #{record.noTradeThu,jdbcType=VARCHAR}");
        SET("NO_TRADE_FRI = #{record.noTradeFri,jdbcType=VARCHAR}");
        SET("NO_TRADE_SAT = #{record.noTradeSat,jdbcType=VARCHAR}");
        SET("NO_TRADE_SUN = #{record.noTradeSun,jdbcType=VARCHAR}");
        SET("NO_TRADE_START_TIME = #{record.noTradeStartTime,jdbcType=VARCHAR}");
        SET("NO_TRADE_END_TIME = #{record.noTradeEndTime,jdbcType=VARCHAR}");
        SET("NO_TRADE_TERM = #{record.noTradeTerm,jdbcType=VARCHAR}");
        SET("PENALTY_YN = #{record.penaltyYn,jdbcType=VARCHAR}");
        SET("AS_ACPT_YN = #{record.asAcptYn,jdbcType=VARCHAR}");
        SET("MAC_GRADE = #{record.macGrade,jdbcType=VARCHAR}");
        SET("BILL_USE_TYPE = #{record.billUseType,jdbcType=VARCHAR}");
        SET("CASH_PENALTY_YN = #{record.cashPenaltyYn,jdbcType=VARCHAR}");
        SET("SHORT_CASH5 = #{record.shortCash5,jdbcType=DECIMAL}");
        SET("SHORT_CASH5_NOTICE = #{record.shortCash5Notice,jdbcType=DECIMAL}");
        SET("BRANCH_MAC_YN = #{record.branchMacYn,jdbcType=VARCHAR}");
        SET("GRADE = #{record.grade,jdbcType=VARCHAR}");
        SET("MAC_ADDRESS = #{record.macAddress,jdbcType=VARCHAR}");
        SET("MAC_MODEL_CD = #{record.macModelCd,jdbcType=VARCHAR}");
        SET("MAC_MADE_YEAR = #{record.macMadeYear,jdbcType=VARCHAR}");
        SET("INTERPHONE_TYPE = #{record.interphoneType,jdbcType=VARCHAR}");
        SET("FOR_CUR_YN = #{record.forCurYn,jdbcType=VARCHAR}");
        SET("TICKET_YN = #{record.ticketYn,jdbcType=VARCHAR}");

        TCmMacSpec spec = (TCmMacSpec) parameter.get("spec");
        applyWhere(spec, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CM_MAC
     *
     * @mbggenerated Tue Aug 19 16:09:11 KST 2014
     */
    public String updateByPrimaryKeySelective(TCmMac record) {
        BEGIN();
        UPDATE("OP.T_CM_MAC");

        if (record.getMacNm() != null) {
            SET("MAC_NM = #{macNm,jdbcType=VARCHAR}");
        }

        if (record.getMacShortNm() != null) {
            SET("MAC_SHORT_NM = #{macShortNm,jdbcType=VARCHAR}");
        }

        if (record.getMacModel() != null) {
            SET("MAC_MODEL = #{macModel,jdbcType=VARCHAR}");
        }

        if (record.getWebCashId() != null) {
            SET("WEB_CASH_ID = #{webCashId,jdbcType=VARCHAR}");
        }

        if (record.getjCnt() != null) {
            SET("J_CNT = #{jCnt,jdbcType=VARCHAR}");
        }

        if (record.getSetDate() != null) {
            SET("SET_DATE = #{setDate,jdbcType=VARCHAR}");
        }

        if (record.getSetPlace() != null) {
            SET("SET_PLACE = #{setPlace,jdbcType=VARCHAR}");
        }

        if (record.getOpenDate() != null) {
            SET("OPEN_DATE = #{openDate,jdbcType=VARCHAR}");
        }

        if (record.getCloseDate() != null) {
            SET("CLOSE_DATE = #{closeDate,jdbcType=VARCHAR}");
        }

        if (record.getAttentionYn() != null) {
            SET("ATTENTION_YN = #{attentionYn,jdbcType=VARCHAR}");
        }

        if (record.getDesYn() != null) {
            SET("DES_YN = #{desYn,jdbcType=VARCHAR}");
        }

        if (record.getCheckYDate() != null) {
            SET("CHECK_Y_DATE = #{checkYDate,jdbcType=VARCHAR}");
        }

        if (record.getCheckNDate() != null) {
            SET("CHECK_N_DATE = #{checkNDate,jdbcType=VARCHAR}");
        }

        if (record.getCheckYn() != null) {
            SET("CHECK_YN = #{checkYn,jdbcType=VARCHAR}");
        }

        if (record.getSvcRelayYn() != null) {
            SET("SVC_RELAY_YN = #{svcRelayYn,jdbcType=VARCHAR}");
        }

        if (record.getSvcRelayOrg() != null) {
            SET("SVC_RELAY_ORG = #{svcRelayOrg,jdbcType=VARCHAR}");
        }

        if (record.getCorCd() != null) {
            SET("COR_CD = #{corCd,jdbcType=VARCHAR}");
        }

        if (record.getOutYn() != null) {
            SET("OUT_YN = #{outYn,jdbcType=VARCHAR}");
        }

        if (record.getSvcYn() != null) {
            SET("SVC_YN = #{svcYn,jdbcType=VARCHAR}");
        }

        if (record.getForeignYn() != null) {
            SET("FOREIGN_YN = #{foreignYn,jdbcType=VARCHAR}");
        }

        if (record.getAmtLimit() != null) {
            SET("AMT_LIMIT = #{amtLimit,jdbcType=DECIMAL}");
        }

        if (record.getForLimit() != null) {
            SET("FOR_LIMIT = #{forLimit,jdbcType=DECIMAL}");
        }

        if (record.getSafeLimit() != null) {
            SET("SAFE_LIMIT = #{safeLimit,jdbcType=DECIMAL}");
        }

        if (record.getSiteCd() != null) {
            SET("SITE_CD = #{siteCd,jdbcType=VARCHAR}");
        }

        if (record.getMadeComCd() != null) {
            SET("MADE_COM_CD = #{madeComCd,jdbcType=VARCHAR}");
        }

        if (record.getComAreaCd() != null) {
            SET("COM_AREA_CD = #{comAreaCd,jdbcType=VARCHAR}");
        }

        if (record.getMemo() != null) {
            SET("MEMO = #{memo,jdbcType=VARCHAR}");
        }

        if (record.getUpdateDate() != null) {
            SET("UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP}");
        }

        if (record.getUpdateUid() != null) {
            SET("UPDATE_UID = #{updateUid,jdbcType=VARCHAR}");
        }

        if (record.getOrgSiteCd() != null) {
            SET("ORG_SITE_CD = #{orgSiteCd,jdbcType=VARCHAR}");
        }

        if (record.getAtmModel() != null) {
            SET("ATM_MODEL = #{atmModel,jdbcType=VARCHAR}");
        }

        if (record.getJbType() != null) {
            SET("JB_TYPE = #{jbType,jdbcType=VARCHAR}");
        }

        if (record.getReopenDate() != null) {
            SET("REOPEN_DATE = #{reopenDate,jdbcType=VARCHAR}");
        }

        if (record.getServiceFeeBase() != null) {
            SET("SERVICE_FEE_BASE = #{serviceFeeBase,jdbcType=DECIMAL}");
        }

        if (record.getSpecialFee() != null) {
            SET("SPECIAL_FEE = #{specialFee,jdbcType=DECIMAL}");
        }

        if (record.getAddMacFee() != null) {
            SET("ADD_MAC_FEE = #{addMacFee,jdbcType=DECIMAL}");
        }

        if (record.getAddTimeFee() != null) {
            SET("ADD_TIME_FEE = #{addTimeFee,jdbcType=DECIMAL}");
        }

        if (record.getAddCheckFee() != null) {
            SET("ADD_CHECK_FEE = #{addCheckFee,jdbcType=DECIMAL}");
        }

        if (record.getSetupFee() != null) {
            SET("SETUP_FEE = #{setupFee,jdbcType=DECIMAL}");
        }

        if (record.getPenalty() != null) {
            SET("PENALTY = #{penalty,jdbcType=DECIMAL}");
        }

        if (record.getServiceRemark() != null) {
            SET("SERVICE_REMARK = #{serviceRemark,jdbcType=VARCHAR}");
        }

        if (record.getOldOrgCd() != null) {
            SET("OLD_ORG_CD = #{oldOrgCd,jdbcType=VARCHAR}");
        }

        if (record.getMonthlyFee() != null) {
            SET("MONTHLY_FEE = #{monthlyFee,jdbcType=DECIMAL}");
        }

        if (record.getAddMoveFee() != null) {
            SET("ADD_MOVE_FEE = #{addMoveFee,jdbcType=DECIMAL}");
        }

        if (record.getBrandFirstOrgCd() != null) {
            SET("BRAND_FIRST_ORG_CD = #{brandFirstOrgCd,jdbcType=VARCHAR}");
        }

        if (record.getCdReopenDate() != null) {
            SET("CD_REOPEN_DATE = #{cdReopenDate,jdbcType=VARCHAR}");
        }

        if (record.getWeakGuardYn() != null) {
            SET("WEAK_GUARD_YN = #{weakGuardYn,jdbcType=VARCHAR}");
        }

        if (record.getOrgSendClose() != null) {
            SET("ORG_SEND_CLOSE = #{orgSendClose,jdbcType=VARCHAR}");
        }

        if (record.getCashboxNo() != null) {
            SET("CASHBOX_NO = #{cashboxNo,jdbcType=VARCHAR}");
        }

        if (record.getNewCash() != null) {
            SET("NEW_CASH = #{newCash,jdbcType=VARCHAR}");
        }

        if (record.getLimitType() != null) {
            SET("LIMIT_TYPE = #{limitType,jdbcType=VARCHAR}");
        }

        if (record.getNewCashLimit() != null) {
            SET("NEW_CASH_LIMIT = #{newCashLimit,jdbcType=DECIMAL}");
        }

        if (record.getOldCashLimit() != null) {
            SET("OLD_CASH_LIMIT = #{oldCashLimit,jdbcType=DECIMAL}");
        }

        if (record.getNewForLimit() != null) {
            SET("NEW_FOR_LIMIT = #{newForLimit,jdbcType=DECIMAL}");
        }

        if (record.getOldForLimit() != null) {
            SET("OLD_FOR_LIMIT = #{oldForLimit,jdbcType=DECIMAL}");
        }

        if (record.getNewSafeLimit() != null) {
            SET("NEW_SAFE_LIMIT = #{newSafeLimit,jdbcType=DECIMAL}");
        }

        if (record.getOldSafeLimit() != null) {
            SET("OLD_SAFE_LIMIT = #{oldSafeLimit,jdbcType=DECIMAL}");
        }

        if (record.getMacVer() != null) {
            SET("MAC_VER = #{macVer,jdbcType=VARCHAR}");
        }

        if (record.getSerialNo() != null) {
            SET("SERIAL_NO = #{serialNo,jdbcType=VARCHAR}");
        }

        if (record.getShortCash() != null) {
            SET("SHORT_CASH = #{shortCash,jdbcType=DECIMAL}");
        }

        if (record.getShortCashNotice() != null) {
            SET("SHORT_CASH_NOTICE = #{shortCashNotice,jdbcType=DECIMAL}");
        }

        if (record.getNoTradeMon() != null) {
            SET("NO_TRADE_MON = #{noTradeMon,jdbcType=VARCHAR}");
        }

        if (record.getNoTradeTue() != null) {
            SET("NO_TRADE_TUE = #{noTradeTue,jdbcType=VARCHAR}");
        }

        if (record.getNoTradeWed() != null) {
            SET("NO_TRADE_WED = #{noTradeWed,jdbcType=VARCHAR}");
        }

        if (record.getNoTradeThu() != null) {
            SET("NO_TRADE_THU = #{noTradeThu,jdbcType=VARCHAR}");
        }

        if (record.getNoTradeFri() != null) {
            SET("NO_TRADE_FRI = #{noTradeFri,jdbcType=VARCHAR}");
        }

        if (record.getNoTradeSat() != null) {
            SET("NO_TRADE_SAT = #{noTradeSat,jdbcType=VARCHAR}");
        }

        if (record.getNoTradeSun() != null) {
            SET("NO_TRADE_SUN = #{noTradeSun,jdbcType=VARCHAR}");
        }

        if (record.getNoTradeStartTime() != null) {
            SET("NO_TRADE_START_TIME = #{noTradeStartTime,jdbcType=VARCHAR}");
        }

        if (record.getNoTradeEndTime() != null) {
            SET("NO_TRADE_END_TIME = #{noTradeEndTime,jdbcType=VARCHAR}");
        }

        if (record.getNoTradeTerm() != null) {
            SET("NO_TRADE_TERM = #{noTradeTerm,jdbcType=VARCHAR}");
        }

        if (record.getPenaltyYn() != null) {
            SET("PENALTY_YN = #{penaltyYn,jdbcType=VARCHAR}");
        }

        if (record.getAsAcptYn() != null) {
            SET("AS_ACPT_YN = #{asAcptYn,jdbcType=VARCHAR}");
        }

        if (record.getMacGrade() != null) {
            SET("MAC_GRADE = #{macGrade,jdbcType=VARCHAR}");
        }

        if (record.getBillUseType() != null) {
            SET("BILL_USE_TYPE = #{billUseType,jdbcType=VARCHAR}");
        }

        if (record.getCashPenaltyYn() != null) {
            SET("CASH_PENALTY_YN = #{cashPenaltyYn,jdbcType=VARCHAR}");
        }

        if (record.getShortCash5() != null) {
            SET("SHORT_CASH5 = #{shortCash5,jdbcType=DECIMAL}");
        }

        if (record.getShortCash5Notice() != null) {
            SET("SHORT_CASH5_NOTICE = #{shortCash5Notice,jdbcType=DECIMAL}");
        }

        if (record.getBranchMacYn() != null) {
            SET("BRANCH_MAC_YN = #{branchMacYn,jdbcType=VARCHAR}");
        }

        if (record.getGrade() != null) {
            SET("GRADE = #{grade,jdbcType=VARCHAR}");
        }

        if (record.getMacAddress() != null) {
            SET("MAC_ADDRESS = #{macAddress,jdbcType=VARCHAR}");
        }

        if (record.getMacModelCd() != null) {
            SET("MAC_MODEL_CD = #{macModelCd,jdbcType=VARCHAR}");
        }

        if (record.getMacMadeYear() != null) {
            SET("MAC_MADE_YEAR = #{macMadeYear,jdbcType=VARCHAR}");
        }

        if (record.getInterphoneType() != null) {
            SET("INTERPHONE_TYPE = #{interphoneType,jdbcType=VARCHAR}");
        }

        if (record.getForCurYn() != null) {
            SET("FOR_CUR_YN = #{forCurYn,jdbcType=VARCHAR}");
        }

        if (record.getTicketYn() != null) {
            SET("TICKET_YN = #{ticketYn,jdbcType=VARCHAR}");
        }

        WHERE("ORG_CD = #{orgCd,jdbcType=VARCHAR}");
        WHERE("BRANCH_CD = #{branchCd,jdbcType=VARCHAR}");
        WHERE("MAC_NO = #{macNo,jdbcType=VARCHAR}");

        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OP.T_CM_MAC
     *
     * @mbggenerated Tue Aug 19 16:09:11 KST 2014
     */
    protected void applyWhere(TCmMacSpec spec, boolean includeSpecPhrase) {
        if (spec == null) {
            return;
        }

        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeSpecPhrase) {
            parmPhrase1 = "%s #{spec.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{spec.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{spec.oredCriteria[%d].allCriteria[%d].value} and #{spec.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{spec.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{spec.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{spec.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{spec.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }

        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = spec.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }

                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }

                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }

        if (sb.length() > 0) {
            WHERE(sb.toString());
        }
    }
}