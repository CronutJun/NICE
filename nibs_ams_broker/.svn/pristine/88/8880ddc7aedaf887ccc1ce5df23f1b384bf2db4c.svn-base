package com.nicetcm.nibsplus.broker.ams.mapper;

import static org.apache.ibatis.jdbc.SqlBuilder.BEGIN;
import static org.apache.ibatis.jdbc.SqlBuilder.DELETE_FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.INSERT_INTO;
import static org.apache.ibatis.jdbc.SqlBuilder.ORDER_BY;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT_DISTINCT;
import static org.apache.ibatis.jdbc.SqlBuilder.SET;
import static org.apache.ibatis.jdbc.SqlBuilder.SQL;
import static org.apache.ibatis.jdbc.SqlBuilder.UPDATE;
import static org.apache.ibatis.jdbc.SqlBuilder.VALUES;
import static org.apache.ibatis.jdbc.SqlBuilder.WHERE;

import com.nicetcm.nibsplus.broker.ams.model.TRmMacEnv;
import com.nicetcm.nibsplus.broker.ams.model.TRmMacEnvSpec.Criteria;
import com.nicetcm.nibsplus.broker.ams.model.TRmMacEnvSpec.Criterion;
import com.nicetcm.nibsplus.broker.ams.model.TRmMacEnvSpec;
import java.util.List;
import java.util.Map;

public class TRmMacEnvSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table IN.T_RM_MAC_ENV
     *
     * @mbggenerated Wed Aug 20 14:41:50 KST 2014
     */
    public String countBySpec(TRmMacEnvSpec spec) {
        BEGIN();
        SELECT("count(*)");
        FROM("IN.T_RM_MAC_ENV");
        applyWhere(spec, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table IN.T_RM_MAC_ENV
     *
     * @mbggenerated Wed Aug 20 14:41:50 KST 2014
     */
    public String deleteBySpec(TRmMacEnvSpec spec) {
        BEGIN();
        DELETE_FROM("IN.T_RM_MAC_ENV");
        applyWhere(spec, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table IN.T_RM_MAC_ENV
     *
     * @mbggenerated Wed Aug 20 14:41:50 KST 2014
     */
    public String insertSelective(TRmMacEnv record) {
        BEGIN();
        INSERT_INTO("IN.T_RM_MAC_ENV");

        if (record.getOrgCd() != null) {
            VALUES("ORG_CD", "#{orgCd,jdbcType=VARCHAR}");
        }

        if (record.getBranchCd() != null) {
            VALUES("BRANCH_CD", "#{branchCd,jdbcType=VARCHAR}");
        }

        if (record.getMacNo() != null) {
            VALUES("MAC_NO", "#{macNo,jdbcType=VARCHAR}");
        }

        if (record.getInsertUid() != null) {
            VALUES("INSERT_UID", "#{insertUid,jdbcType=VARCHAR}");
        }

        if (record.getInsertDate() != null) {
            VALUES("INSERT_DATE", "#{insertDate,jdbcType=TIMESTAMP}");
        }

        if (record.getUpdateUid() != null) {
            VALUES("UPDATE_UID", "#{updateUid,jdbcType=VARCHAR}");
        }

        if (record.getUpdateDate() != null) {
            VALUES("UPDATE_DATE", "#{updateDate,jdbcType=TIMESTAMP}");
        }

        if (record.getSts() != null) {
            VALUES("STS", "#{sts,jdbcType=VARCHAR}");
        }

        if (record.getSiteCd() != null) {
            VALUES("SITE_CD", "#{siteCd,jdbcType=VARCHAR}");
        }

        if (record.getDeptCd() != null) {
            VALUES("DEPT_CD", "#{deptCd,jdbcType=VARCHAR}");
        }

        if (record.getOfficeCd() != null) {
            VALUES("OFFICE_CD", "#{officeCd,jdbcType=VARCHAR}");
        }

        if (record.getTeamCd() != null) {
            VALUES("TEAM_CD", "#{teamCd,jdbcType=VARCHAR}");
        }

        if (record.getPrdcNo() != null) {
            VALUES("PRDC_NO", "#{prdcNo,jdbcType=VARCHAR}");
        }

        if (record.getMkrCd() != null) {
            VALUES("MKR_CD", "#{mkrCd,jdbcType=VARCHAR}");
        }

        if (record.getModelCd() != null) {
            VALUES("MODEL_CD", "#{modelCd,jdbcType=VARCHAR}");
        }

        if (record.getApVer() != null) {
            VALUES("AP_VER", "#{apVer,jdbcType=VARCHAR}");
        }

        if (record.getSetPlace() != null) {
            VALUES("SET_PLACE", "#{setPlace,jdbcType=VARCHAR}");
        }

        if (record.getPubIpAddr() != null) {
            VALUES("PUB_IP_ADDR", "#{pubIpAddr,jdbcType=VARCHAR}");
        }

        if (record.getPriIpAddr() != null) {
            VALUES("PRI_IP_ADDR", "#{priIpAddr,jdbcType=VARCHAR}");
        }

        if (record.getIpPort() != null) {
            VALUES("IP_PORT", "#{ipPort,jdbcType=VARCHAR}");
        }

        if (record.getHostIpAddr() != null) {
            VALUES("HOST_IP_ADDR", "#{hostIpAddr,jdbcType=VARCHAR}");
        }

        if (record.getHostIpPort() != null) {
            VALUES("HOST_IP_PORT", "#{hostIpPort,jdbcType=VARCHAR}");
        }

        if (record.getAocIpAddr() != null) {
            VALUES("AOC_IP_ADDR", "#{aocIpAddr,jdbcType=VARCHAR}");
        }

        if (record.getAocIpPort() != null) {
            VALUES("AOC_IP_PORT", "#{aocIpPort,jdbcType=VARCHAR}");
        }

        if (record.getRebootTime() != null) {
            VALUES("REBOOT_TIME", "#{rebootTime,jdbcType=VARCHAR}");
        }

        if (record.getMacOs() != null) {
            VALUES("MAC_OS", "#{macOs,jdbcType=VARCHAR}");
        }

        if (record.getMacCpu() != null) {
            VALUES("MAC_CPU", "#{macCpu,jdbcType=VARCHAR}");
        }

        if (record.getMacMem() != null) {
            VALUES("MAC_MEM", "#{macMem,jdbcType=VARCHAR}");
        }

        if (record.getMacHdd() != null) {
            VALUES("MAC_HDD", "#{macHdd,jdbcType=VARCHAR}");
        }

        if (record.getModemRelayYn() != null) {
            VALUES("MODEM_RELAY_YN", "#{modemRelayYn,jdbcType=VARCHAR}");
        }

        if (record.getRpcYn() != null) {
            VALUES("RPC_YN", "#{rpcYn,jdbcType=VARCHAR}");
        }

        if (record.getCreditCardYn() != null) {
            VALUES("CREDIT_CARD_YN", "#{creditCardYn,jdbcType=VARCHAR}");
        }

        if (record.getCardLoanYn() != null) {
            VALUES("CARD_LOAN_YN", "#{cardLoanYn,jdbcType=VARCHAR}");
        }

        if (record.getChrgHipassYn() != null) {
            VALUES("CHRG_HIPASS_YN", "#{chrgHipassYn,jdbcType=VARCHAR}");
        }

        if (record.getFrgnTranType() != null) {
            VALUES("FRGN_TRAN_TYPE", "#{frgnTranType,jdbcType=VARCHAR}");
        }

        if (record.getOurMaxWdrAmt() != null) {
            VALUES("OUR_MAX_WDR_AMT", "#{ourMaxWdrAmt,jdbcType=DECIMAL}");
        }

        if (record.getThrMaxWdrAmt() != null) {
            VALUES("THR_MAX_WDR_AMT", "#{thrMaxWdrAmt,jdbcType=DECIMAL}");
        }

        if (record.getOurMaxDpsAmt() != null) {
            VALUES("OUR_MAX_DPS_AMT", "#{ourMaxDpsAmt,jdbcType=DECIMAL}");
        }

        if (record.getThrMaxDpsAmt() != null) {
            VALUES("THR_MAX_DPS_AMT", "#{thrMaxDpsAmt,jdbcType=DECIMAL}");
        }

        if (record.getOurMaxTsfAmt() != null) {
            VALUES("OUR_MAX_TSF_AMT", "#{ourMaxTsfAmt,jdbcType=DECIMAL}");
        }

        if (record.getThrMaxTsfAmt() != null) {
            VALUES("THR_MAX_TSF_AMT", "#{thrMaxTsfAmt,jdbcType=DECIMAL}");
        }

        if (record.getMaxSvcWdrAmt() != null) {
            VALUES("MAX_SVC_WDR_AMT", "#{maxSvcWdrAmt,jdbcType=DECIMAL}");
        }

        if (record.getMaxCashWdrCnt() != null) {
            VALUES("MAX_CASH_WDR_CNT", "#{maxCashWdrCnt,jdbcType=DECIMAL}");
        }

        if (record.getMaxCashDpsCnt() != null) {
            VALUES("MAX_CASH_DPS_CNT", "#{maxCashDpsCnt,jdbcType=DECIMAL}");
        }

        if (record.getMaxCashSvcWdrCnt() != null) {
            VALUES("MAX_CASH_SVC_WDR_CNT", "#{maxCashSvcWdrCnt,jdbcType=DECIMAL}");
        }

        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table IN.T_RM_MAC_ENV
     *
     * @mbggenerated Wed Aug 20 14:41:50 KST 2014
     */
    public String selectBySpec(TRmMacEnvSpec spec) {
        BEGIN();
        if (spec != null && spec.isDistinct()) {
            SELECT_DISTINCT("ORG_CD");
        } else {
            SELECT("ORG_CD");
        }
        SELECT("BRANCH_CD");
        SELECT("MAC_NO");
        SELECT("INSERT_UID");
        SELECT("INSERT_DATE");
        SELECT("UPDATE_UID");
        SELECT("UPDATE_DATE");
        SELECT("STS");
        SELECT("SITE_CD");
        SELECT("DEPT_CD");
        SELECT("OFFICE_CD");
        SELECT("TEAM_CD");
        SELECT("PRDC_NO");
        SELECT("MKR_CD");
        SELECT("MODEL_CD");
        SELECT("AP_VER");
        SELECT("SET_PLACE");
        SELECT("PUB_IP_ADDR");
        SELECT("PRI_IP_ADDR");
        SELECT("IP_PORT");
        SELECT("HOST_IP_ADDR");
        SELECT("HOST_IP_PORT");
        SELECT("AOC_IP_ADDR");
        SELECT("AOC_IP_PORT");
        SELECT("REBOOT_TIME");
        SELECT("MAC_OS");
        SELECT("MAC_CPU");
        SELECT("MAC_MEM");
        SELECT("MAC_HDD");
        SELECT("MODEM_RELAY_YN");
        SELECT("RPC_YN");
        SELECT("CREDIT_CARD_YN");
        SELECT("CARD_LOAN_YN");
        SELECT("CHRG_HIPASS_YN");
        SELECT("FRGN_TRAN_TYPE");
        SELECT("OUR_MAX_WDR_AMT");
        SELECT("THR_MAX_WDR_AMT");
        SELECT("OUR_MAX_DPS_AMT");
        SELECT("THR_MAX_DPS_AMT");
        SELECT("OUR_MAX_TSF_AMT");
        SELECT("THR_MAX_TSF_AMT");
        SELECT("MAX_SVC_WDR_AMT");
        SELECT("MAX_CASH_WDR_CNT");
        SELECT("MAX_CASH_DPS_CNT");
        SELECT("MAX_CASH_SVC_WDR_CNT");
        FROM("IN.T_RM_MAC_ENV");
        applyWhere(spec, false);

        if (spec != null && spec.getOrderByClause() != null) {
            ORDER_BY(spec.getOrderByClause());
        }

        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table IN.T_RM_MAC_ENV
     *
     * @mbggenerated Wed Aug 20 14:41:50 KST 2014
     */
    public String updateBySpecSelective(Map<String, Object> parameter) {
        TRmMacEnv record = (TRmMacEnv) parameter.get("record");
        TRmMacEnvSpec spec = (TRmMacEnvSpec) parameter.get("spec");

        BEGIN();
        UPDATE("IN.T_RM_MAC_ENV");

        if (record.getOrgCd() != null) {
            SET("ORG_CD = #{record.orgCd,jdbcType=VARCHAR}");
        }

        if (record.getBranchCd() != null) {
            SET("BRANCH_CD = #{record.branchCd,jdbcType=VARCHAR}");
        }

        if (record.getMacNo() != null) {
            SET("MAC_NO = #{record.macNo,jdbcType=VARCHAR}");
        }

        if (record.getInsertUid() != null) {
            SET("INSERT_UID = #{record.insertUid,jdbcType=VARCHAR}");
        }

        if (record.getInsertDate() != null) {
            SET("INSERT_DATE = #{record.insertDate,jdbcType=TIMESTAMP}");
        }

        if (record.getUpdateUid() != null) {
            SET("UPDATE_UID = #{record.updateUid,jdbcType=VARCHAR}");
        }

        if (record.getUpdateDate() != null) {
            SET("UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP}");
        }

        if (record.getSts() != null) {
            SET("STS = #{record.sts,jdbcType=VARCHAR}");
        }

        if (record.getSiteCd() != null) {
            SET("SITE_CD = #{record.siteCd,jdbcType=VARCHAR}");
        }

        if (record.getDeptCd() != null) {
            SET("DEPT_CD = #{record.deptCd,jdbcType=VARCHAR}");
        }

        if (record.getOfficeCd() != null) {
            SET("OFFICE_CD = #{record.officeCd,jdbcType=VARCHAR}");
        }

        if (record.getTeamCd() != null) {
            SET("TEAM_CD = #{record.teamCd,jdbcType=VARCHAR}");
        }

        if (record.getPrdcNo() != null) {
            SET("PRDC_NO = #{record.prdcNo,jdbcType=VARCHAR}");
        }

        if (record.getMkrCd() != null) {
            SET("MKR_CD = #{record.mkrCd,jdbcType=VARCHAR}");
        }

        if (record.getModelCd() != null) {
            SET("MODEL_CD = #{record.modelCd,jdbcType=VARCHAR}");
        }

        if (record.getApVer() != null) {
            SET("AP_VER = #{record.apVer,jdbcType=VARCHAR}");
        }

        if (record.getSetPlace() != null) {
            SET("SET_PLACE = #{record.setPlace,jdbcType=VARCHAR}");
        }

        if (record.getPubIpAddr() != null) {
            SET("PUB_IP_ADDR = #{record.pubIpAddr,jdbcType=VARCHAR}");
        }

        if (record.getPriIpAddr() != null) {
            SET("PRI_IP_ADDR = #{record.priIpAddr,jdbcType=VARCHAR}");
        }

        if (record.getIpPort() != null) {
            SET("IP_PORT = #{record.ipPort,jdbcType=VARCHAR}");
        }

        if (record.getHostIpAddr() != null) {
            SET("HOST_IP_ADDR = #{record.hostIpAddr,jdbcType=VARCHAR}");
        }

        if (record.getHostIpPort() != null) {
            SET("HOST_IP_PORT = #{record.hostIpPort,jdbcType=VARCHAR}");
        }

        if (record.getAocIpAddr() != null) {
            SET("AOC_IP_ADDR = #{record.aocIpAddr,jdbcType=VARCHAR}");
        }

        if (record.getAocIpPort() != null) {
            SET("AOC_IP_PORT = #{record.aocIpPort,jdbcType=VARCHAR}");
        }

        if (record.getRebootTime() != null) {
            SET("REBOOT_TIME = #{record.rebootTime,jdbcType=VARCHAR}");
        }

        if (record.getMacOs() != null) {
            SET("MAC_OS = #{record.macOs,jdbcType=VARCHAR}");
        }

        if (record.getMacCpu() != null) {
            SET("MAC_CPU = #{record.macCpu,jdbcType=VARCHAR}");
        }

        if (record.getMacMem() != null) {
            SET("MAC_MEM = #{record.macMem,jdbcType=VARCHAR}");
        }

        if (record.getMacHdd() != null) {
            SET("MAC_HDD = #{record.macHdd,jdbcType=VARCHAR}");
        }

        if (record.getModemRelayYn() != null) {
            SET("MODEM_RELAY_YN = #{record.modemRelayYn,jdbcType=VARCHAR}");
        }

        if (record.getRpcYn() != null) {
            SET("RPC_YN = #{record.rpcYn,jdbcType=VARCHAR}");
        }

        if (record.getCreditCardYn() != null) {
            SET("CREDIT_CARD_YN = #{record.creditCardYn,jdbcType=VARCHAR}");
        }

        if (record.getCardLoanYn() != null) {
            SET("CARD_LOAN_YN = #{record.cardLoanYn,jdbcType=VARCHAR}");
        }

        if (record.getChrgHipassYn() != null) {
            SET("CHRG_HIPASS_YN = #{record.chrgHipassYn,jdbcType=VARCHAR}");
        }

        if (record.getFrgnTranType() != null) {
            SET("FRGN_TRAN_TYPE = #{record.frgnTranType,jdbcType=VARCHAR}");
        }

        if (record.getOurMaxWdrAmt() != null) {
            SET("OUR_MAX_WDR_AMT = #{record.ourMaxWdrAmt,jdbcType=DECIMAL}");
        }

        if (record.getThrMaxWdrAmt() != null) {
            SET("THR_MAX_WDR_AMT = #{record.thrMaxWdrAmt,jdbcType=DECIMAL}");
        }

        if (record.getOurMaxDpsAmt() != null) {
            SET("OUR_MAX_DPS_AMT = #{record.ourMaxDpsAmt,jdbcType=DECIMAL}");
        }

        if (record.getThrMaxDpsAmt() != null) {
            SET("THR_MAX_DPS_AMT = #{record.thrMaxDpsAmt,jdbcType=DECIMAL}");
        }

        if (record.getOurMaxTsfAmt() != null) {
            SET("OUR_MAX_TSF_AMT = #{record.ourMaxTsfAmt,jdbcType=DECIMAL}");
        }

        if (record.getThrMaxTsfAmt() != null) {
            SET("THR_MAX_TSF_AMT = #{record.thrMaxTsfAmt,jdbcType=DECIMAL}");
        }

        if (record.getMaxSvcWdrAmt() != null) {
            SET("MAX_SVC_WDR_AMT = #{record.maxSvcWdrAmt,jdbcType=DECIMAL}");
        }

        if (record.getMaxCashWdrCnt() != null) {
            SET("MAX_CASH_WDR_CNT = #{record.maxCashWdrCnt,jdbcType=DECIMAL}");
        }

        if (record.getMaxCashDpsCnt() != null) {
            SET("MAX_CASH_DPS_CNT = #{record.maxCashDpsCnt,jdbcType=DECIMAL}");
        }

        if (record.getMaxCashSvcWdrCnt() != null) {
            SET("MAX_CASH_SVC_WDR_CNT = #{record.maxCashSvcWdrCnt,jdbcType=DECIMAL}");
        }

        applyWhere(spec, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table IN.T_RM_MAC_ENV
     *
     * @mbggenerated Wed Aug 20 14:41:50 KST 2014
     */
    public String updateBySpec(Map<String, Object> parameter) {
        BEGIN();
        UPDATE("IN.T_RM_MAC_ENV");

        SET("ORG_CD = #{record.orgCd,jdbcType=VARCHAR}");
        SET("BRANCH_CD = #{record.branchCd,jdbcType=VARCHAR}");
        SET("MAC_NO = #{record.macNo,jdbcType=VARCHAR}");
        SET("INSERT_UID = #{record.insertUid,jdbcType=VARCHAR}");
        SET("INSERT_DATE = #{record.insertDate,jdbcType=TIMESTAMP}");
        SET("UPDATE_UID = #{record.updateUid,jdbcType=VARCHAR}");
        SET("UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP}");
        SET("STS = #{record.sts,jdbcType=VARCHAR}");
        SET("SITE_CD = #{record.siteCd,jdbcType=VARCHAR}");
        SET("DEPT_CD = #{record.deptCd,jdbcType=VARCHAR}");
        SET("OFFICE_CD = #{record.officeCd,jdbcType=VARCHAR}");
        SET("TEAM_CD = #{record.teamCd,jdbcType=VARCHAR}");
        SET("PRDC_NO = #{record.prdcNo,jdbcType=VARCHAR}");
        SET("MKR_CD = #{record.mkrCd,jdbcType=VARCHAR}");
        SET("MODEL_CD = #{record.modelCd,jdbcType=VARCHAR}");
        SET("AP_VER = #{record.apVer,jdbcType=VARCHAR}");
        SET("SET_PLACE = #{record.setPlace,jdbcType=VARCHAR}");
        SET("PUB_IP_ADDR = #{record.pubIpAddr,jdbcType=VARCHAR}");
        SET("PRI_IP_ADDR = #{record.priIpAddr,jdbcType=VARCHAR}");
        SET("IP_PORT = #{record.ipPort,jdbcType=VARCHAR}");
        SET("HOST_IP_ADDR = #{record.hostIpAddr,jdbcType=VARCHAR}");
        SET("HOST_IP_PORT = #{record.hostIpPort,jdbcType=VARCHAR}");
        SET("AOC_IP_ADDR = #{record.aocIpAddr,jdbcType=VARCHAR}");
        SET("AOC_IP_PORT = #{record.aocIpPort,jdbcType=VARCHAR}");
        SET("REBOOT_TIME = #{record.rebootTime,jdbcType=VARCHAR}");
        SET("MAC_OS = #{record.macOs,jdbcType=VARCHAR}");
        SET("MAC_CPU = #{record.macCpu,jdbcType=VARCHAR}");
        SET("MAC_MEM = #{record.macMem,jdbcType=VARCHAR}");
        SET("MAC_HDD = #{record.macHdd,jdbcType=VARCHAR}");
        SET("MODEM_RELAY_YN = #{record.modemRelayYn,jdbcType=VARCHAR}");
        SET("RPC_YN = #{record.rpcYn,jdbcType=VARCHAR}");
        SET("CREDIT_CARD_YN = #{record.creditCardYn,jdbcType=VARCHAR}");
        SET("CARD_LOAN_YN = #{record.cardLoanYn,jdbcType=VARCHAR}");
        SET("CHRG_HIPASS_YN = #{record.chrgHipassYn,jdbcType=VARCHAR}");
        SET("FRGN_TRAN_TYPE = #{record.frgnTranType,jdbcType=VARCHAR}");
        SET("OUR_MAX_WDR_AMT = #{record.ourMaxWdrAmt,jdbcType=DECIMAL}");
        SET("THR_MAX_WDR_AMT = #{record.thrMaxWdrAmt,jdbcType=DECIMAL}");
        SET("OUR_MAX_DPS_AMT = #{record.ourMaxDpsAmt,jdbcType=DECIMAL}");
        SET("THR_MAX_DPS_AMT = #{record.thrMaxDpsAmt,jdbcType=DECIMAL}");
        SET("OUR_MAX_TSF_AMT = #{record.ourMaxTsfAmt,jdbcType=DECIMAL}");
        SET("THR_MAX_TSF_AMT = #{record.thrMaxTsfAmt,jdbcType=DECIMAL}");
        SET("MAX_SVC_WDR_AMT = #{record.maxSvcWdrAmt,jdbcType=DECIMAL}");
        SET("MAX_CASH_WDR_CNT = #{record.maxCashWdrCnt,jdbcType=DECIMAL}");
        SET("MAX_CASH_DPS_CNT = #{record.maxCashDpsCnt,jdbcType=DECIMAL}");
        SET("MAX_CASH_SVC_WDR_CNT = #{record.maxCashSvcWdrCnt,jdbcType=DECIMAL}");

        TRmMacEnvSpec spec = (TRmMacEnvSpec) parameter.get("spec");
        applyWhere(spec, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table IN.T_RM_MAC_ENV
     *
     * @mbggenerated Wed Aug 20 14:41:50 KST 2014
     */
    public String updateByPrimaryKeySelective(TRmMacEnv record) {
        BEGIN();
        UPDATE("IN.T_RM_MAC_ENV");

        if (record.getInsertUid() != null) {
            SET("INSERT_UID = #{insertUid,jdbcType=VARCHAR}");
        }

        if (record.getInsertDate() != null) {
            SET("INSERT_DATE = #{insertDate,jdbcType=TIMESTAMP}");
        }

        if (record.getUpdateUid() != null) {
            SET("UPDATE_UID = #{updateUid,jdbcType=VARCHAR}");
        }

        if (record.getUpdateDate() != null) {
            SET("UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP}");
        }

        if (record.getSts() != null) {
            SET("STS = #{sts,jdbcType=VARCHAR}");
        }

        if (record.getSiteCd() != null) {
            SET("SITE_CD = #{siteCd,jdbcType=VARCHAR}");
        }

        if (record.getDeptCd() != null) {
            SET("DEPT_CD = #{deptCd,jdbcType=VARCHAR}");
        }

        if (record.getOfficeCd() != null) {
            SET("OFFICE_CD = #{officeCd,jdbcType=VARCHAR}");
        }

        if (record.getTeamCd() != null) {
            SET("TEAM_CD = #{teamCd,jdbcType=VARCHAR}");
        }

        if (record.getPrdcNo() != null) {
            SET("PRDC_NO = #{prdcNo,jdbcType=VARCHAR}");
        }

        if (record.getMkrCd() != null) {
            SET("MKR_CD = #{mkrCd,jdbcType=VARCHAR}");
        }

        if (record.getModelCd() != null) {
            SET("MODEL_CD = #{modelCd,jdbcType=VARCHAR}");
        }

        if (record.getApVer() != null) {
            SET("AP_VER = #{apVer,jdbcType=VARCHAR}");
        }

        if (record.getSetPlace() != null) {
            SET("SET_PLACE = #{setPlace,jdbcType=VARCHAR}");
        }

        if (record.getPubIpAddr() != null) {
            SET("PUB_IP_ADDR = #{pubIpAddr,jdbcType=VARCHAR}");
        }

        if (record.getPriIpAddr() != null) {
            SET("PRI_IP_ADDR = #{priIpAddr,jdbcType=VARCHAR}");
        }

        if (record.getIpPort() != null) {
            SET("IP_PORT = #{ipPort,jdbcType=VARCHAR}");
        }

        if (record.getHostIpAddr() != null) {
            SET("HOST_IP_ADDR = #{hostIpAddr,jdbcType=VARCHAR}");
        }

        if (record.getHostIpPort() != null) {
            SET("HOST_IP_PORT = #{hostIpPort,jdbcType=VARCHAR}");
        }

        if (record.getAocIpAddr() != null) {
            SET("AOC_IP_ADDR = #{aocIpAddr,jdbcType=VARCHAR}");
        }

        if (record.getAocIpPort() != null) {
            SET("AOC_IP_PORT = #{aocIpPort,jdbcType=VARCHAR}");
        }

        if (record.getRebootTime() != null) {
            SET("REBOOT_TIME = #{rebootTime,jdbcType=VARCHAR}");
        }

        if (record.getMacOs() != null) {
            SET("MAC_OS = #{macOs,jdbcType=VARCHAR}");
        }

        if (record.getMacCpu() != null) {
            SET("MAC_CPU = #{macCpu,jdbcType=VARCHAR}");
        }

        if (record.getMacMem() != null) {
            SET("MAC_MEM = #{macMem,jdbcType=VARCHAR}");
        }

        if (record.getMacHdd() != null) {
            SET("MAC_HDD = #{macHdd,jdbcType=VARCHAR}");
        }

        if (record.getModemRelayYn() != null) {
            SET("MODEM_RELAY_YN = #{modemRelayYn,jdbcType=VARCHAR}");
        }

        if (record.getRpcYn() != null) {
            SET("RPC_YN = #{rpcYn,jdbcType=VARCHAR}");
        }

        if (record.getCreditCardYn() != null) {
            SET("CREDIT_CARD_YN = #{creditCardYn,jdbcType=VARCHAR}");
        }

        if (record.getCardLoanYn() != null) {
            SET("CARD_LOAN_YN = #{cardLoanYn,jdbcType=VARCHAR}");
        }

        if (record.getChrgHipassYn() != null) {
            SET("CHRG_HIPASS_YN = #{chrgHipassYn,jdbcType=VARCHAR}");
        }

        if (record.getFrgnTranType() != null) {
            SET("FRGN_TRAN_TYPE = #{frgnTranType,jdbcType=VARCHAR}");
        }

        if (record.getOurMaxWdrAmt() != null) {
            SET("OUR_MAX_WDR_AMT = #{ourMaxWdrAmt,jdbcType=DECIMAL}");
        }

        if (record.getThrMaxWdrAmt() != null) {
            SET("THR_MAX_WDR_AMT = #{thrMaxWdrAmt,jdbcType=DECIMAL}");
        }

        if (record.getOurMaxDpsAmt() != null) {
            SET("OUR_MAX_DPS_AMT = #{ourMaxDpsAmt,jdbcType=DECIMAL}");
        }

        if (record.getThrMaxDpsAmt() != null) {
            SET("THR_MAX_DPS_AMT = #{thrMaxDpsAmt,jdbcType=DECIMAL}");
        }

        if (record.getOurMaxTsfAmt() != null) {
            SET("OUR_MAX_TSF_AMT = #{ourMaxTsfAmt,jdbcType=DECIMAL}");
        }

        if (record.getThrMaxTsfAmt() != null) {
            SET("THR_MAX_TSF_AMT = #{thrMaxTsfAmt,jdbcType=DECIMAL}");
        }

        if (record.getMaxSvcWdrAmt() != null) {
            SET("MAX_SVC_WDR_AMT = #{maxSvcWdrAmt,jdbcType=DECIMAL}");
        }

        if (record.getMaxCashWdrCnt() != null) {
            SET("MAX_CASH_WDR_CNT = #{maxCashWdrCnt,jdbcType=DECIMAL}");
        }

        if (record.getMaxCashDpsCnt() != null) {
            SET("MAX_CASH_DPS_CNT = #{maxCashDpsCnt,jdbcType=DECIMAL}");
        }

        if (record.getMaxCashSvcWdrCnt() != null) {
            SET("MAX_CASH_SVC_WDR_CNT = #{maxCashSvcWdrCnt,jdbcType=DECIMAL}");
        }

        WHERE("ORG_CD = #{orgCd,jdbcType=VARCHAR}");
        WHERE("BRANCH_CD = #{branchCd,jdbcType=VARCHAR}");
        WHERE("MAC_NO = #{macNo,jdbcType=VARCHAR}");

        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table IN.T_RM_MAC_ENV
     *
     * @mbggenerated Wed Aug 20 14:41:50 KST 2014
     */
    protected void applyWhere(TRmMacEnvSpec spec, boolean includeSpecPhrase) {
        if (spec == null) {
            return;
        }

        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeSpecPhrase) {
            parmPhrase1 = "%s #{spec.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{spec.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{spec.oredCriteria[%d].allCriteria[%d].value} and #{spec.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{spec.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{spec.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{spec.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{spec.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }

        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = spec.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }

                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }

                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }

        if (sb.length() > 0) {
            WHERE(sb.toString());
        }
    }
}